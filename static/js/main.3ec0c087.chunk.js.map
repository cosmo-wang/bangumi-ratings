{"version":3,"sources":["environments.js","context/AuthenticationContext.jsx","components/Navigation.js","context/AnimeDataContext.jsx","components/SortHeader.js","components/FilterBox.js","components/FilterHeader.js","components/DropdownHeader.js","components/Description.js","components/AnimeModal.js","utils/utils.js","components/AnimeList.js","components/MonthlySummary.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APPLICATION_ID","JAVASCRIPT_KEY","SERVER_URL","AuthenticationContext","createContext","useAuthenticationContext","useContext","UserManagement","authenticated","setAuthenticating","handleSignOut","id","className","onClick","Navigation","props","Navbar","sticky","expand","Brand","href","Nav","activeKey","window","location","pathname","Item","Link","switchPage","animeData","ratings","summaries","AnimeDataContext","React","SortHeader","key","header","sort","FilterBox","useState","displayBox","setDisplayBox","placeholder","type","onKeyPress","e","filter","clearFilter","FilterHeader","DropdownHeader","name","onChange","event","filterStatus","value","selected","Description","description","undefined","target","rel","douban","year","genre","episodes","episode_length","AnimeModal","oldValue","Form","onSubmit","onSubmitOrEdit","Group","controlId","Label","Control","defaultValue","Row","Col","status","tv_episodes","movies","as","rows","story","music","passion","start_date","end_date","times_watched","Button","formatTime","time","isNaN","Math","round","calculateDailyTime","row","days","diff","translateHeader","sortList","rawList","sortedCol","slice","a","b","aQuantity","bQuantity","isValid","compare","AnimeList","watchedHeaders","wantToWatchHeaders","activeDescription","setActiveDescription","showDescription","setShowDescription","showAnimeModal","setShowAnimeModal","showDeleteConfirmation","setShowDeleteConfirmation","submitNewAnime","setSubmitNewAnime","animeToDelete","setAnimeToDelete","activeId","setActiveId","displayListStatus","setDisplayListStatus","displayList","setDisplayList","tableHeaders","setTableHeaders","filterList","setFilterList","setSortedCol","editAnimeOldValue","setEditAnimeOldValue","useEffect","rating","isLoading","length","item","includes","Object","entries","changeStatus","newStatus","innerHTML","loadError","Alert","variant","Modal","centered","size","show","onHide","Header","Title","Body","Footer","closeButton","preventDefault","onAnimeSubmit","deleteAnime","refresh","Table","striped","borderless","hover","map","newFilterList","idx","illustration","substring","formatDescription","format","Summary","moment","month","summary","bangumi_num","tv_episode_num","total_time","daysInMonth","bangumis","bangumi_name","MonthlySummary","console","log","keys","Login","username","password","setUsername","setPassword","handleLogin","autoFocus","block","disabled","Parse","initialize","Env","serverURL","App","setAuthenticated","authenticating","userStr","sessionStorage","getItem","JSON","parse","getUser","user","setUser","token","setToken","setIsLoading","setLoadError","activePage","setActivePage","setRatings","setSummaries","fetchRatings","ratingsObj","extend","query","Query","limit","find","then","results","document","result","get","Number","toFixed","error","submitNewRating","newRating","RatingsObj","newRatingObj","set","save","alert","updateRating","object","response","destroy","tempSummaries","forEach","bangumi","endMonth","movie_num","daily_time","push","handleAnimeSubmit","isNew","formElements","elements","Provider","User","logIn","setItem","stringify","setUserSession","getSessionToken","getUsername","catch","message","removeItem","mainElement","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ec0c087.chunk.js","sourcesContent":["module.exports = {\n    APPLICATION_ID: '54T0X4tWovUBdnRd6EKdW3BrN4WJrpGBEJdwDk9J',\n    JAVASCRIPT_KEY: 'WREbi60D2GfVknGhH9Je1GJ931oIhIVkHUXD9u5R',\n    SERVER_URL: 'https://parseapi.back4app.com/'\n}","import { useContext, createContext } from \"react\";\n\nexport const AuthenticationContext = createContext(null);\n\nexport function useAuthenticationContext() {\n  return useContext(AuthenticationContext);\n}","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { useAuthenticationContext } from \"../context/AuthenticationContext\";\nimport './Navigation.css';\nimport '../App.css';\n\nfunction UserManagement() {\n  const { authenticated, setAuthenticating, handleSignOut } = useAuthenticationContext();\n  if (authenticated) {\n    return <div id=\"user-management\">\n        <div className=\"text-button clickable\" onClick={handleSignOut}>注销</div>\n      </div>\n  } else {\n    return <div className=\"text-button clickable\" onClick={() => setAuthenticating(true)}>登陆</div>\n  }\n}\n\nfunction Navigation(props) {\n  return (\n    <Navbar sticky=\"top\" expand=\"lg\" id=\"navbar\">\n      <Navbar.Brand href=\"/\">追番补番</Navbar.Brand>\n      <Nav className=\"mr-auto\" activeKey={window.location.pathname}>\n        <Nav.Item><Nav.Link onClick={() => props.switchPage(\"AnimeList\")}>我的列表</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link onClick={() => props.switchPage(\"MonthlySummary\")}>每月总结</Nav.Link></Nav.Item>\n      </Nav>\n      <UserManagement />\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\n\nconst animeData = {\n  ratings: [],\n  summaries: {}\n}\n\nconst AnimeDataContext = React.createContext(animeData);\n\nexport default AnimeDataContext;","import React from 'react';\nimport { BiSort } from \"react-icons/bi\";\nimport '../App.css';\n\nexport default function SortHeader(props) {\n  return (\n    <th key={props.header}>\n      <div className='table-header'>\n        <div>{props.header}</div>\n        <BiSort className='icon clickable' onClick={props.sort}/>\n      </div>\n    </th>\n  );\n}","import React, { useState } from 'react';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './FilterBox.css';\nimport '../App.css';\n\nexport default function FilterBox(props) {\n  const [displayBox, setDisplayBox] = useState(false);\n  return (displayBox ? \n    <div className=\"filter-box\">\n      <input className=\"filter-input-box\" placeholder=\"输入......\" type=\"text\" onKeyPress={(e) => {\n        if (e.key === \"Enter\") props.filter(e);\n      }}/>\n      <div className=\"close-button clickable\" onClick={() => {\n        props.clearFilter();\n        setDisplayBox(!displayBox)\n      }}>&times;</div>\n    </div> :\n    <AiOutlineSearch className=\"filter-box icon clickable\" onClick={() => setDisplayBox(!displayBox)}/>);\n}\n","import React from 'react';\nimport FilterBox from './FilterBox';\nimport './FilterHeader.css';\n\nexport default function FilterHeader(props) {\n  return (\n    <th key={props.header}>\n      <div className='table-header'>\n        <div>{props.header}</div>\n        <FilterBox filter={props.filter} clearFilter={props.clearFilter}/>\n      </div>\n    </th>\n  );\n}","import React from 'react';\nimport './DropdownHeader.css';\n\nexport default function DropdownHeader(props) {\n  return <th key={props.header}>\n    <select id=\"status\" className=\"dropdown-header\" name=\"status\" onChange={(event) => props.filterStatus(event)}>\n      <option value=\"\" selected>状态</option>\n      <option value=\"想看\">想看</option>\n      <option value=\"在看\">在看</option>\n      <option value=\"已看\">已看</option>\n    </select>\n  </th>\n};","import React from 'react';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './Description.css';\n\nexport default function Description(props) {\n  const description = props.description;\n  return description === undefined || description === null ? \n    <p>暂无简介</p> :\n    <div className=\"description\">\n      <div>\n        <h1>\n          {description.name}\n          <a href={\"https://www.douban.com/search?q=\" + description.name} target=\"_blank\" rel=\"noopener noreferrer\">\n            <AiOutlineSearch className=\"icon clickable\" />\n          </a>\n        </h1>\n        <p>豆瓣评分：{description.douban}</p>\n        <p>年份：{description.year}</p>\n        <p>分类：{description.genre}</p>\n        <p>集数：{description.episodes}</p>\n        <p>单集片长：{description.episode_length}</p>\n        <p>简介：{description.description}</p>\n      </div>\n    </div>;\n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './AnimeModal.css';\nimport '../App.css';\n\nexport default function AnimeModal(props) {\n  const oldValue = props.oldValue === undefined || props.oldValue === null ? {} : props.oldValue;\n  return <Form onSubmit={(event) => {props.onSubmitOrEdit(event, props.id)}}>\n    <Form.Group controlId=\"name\">\n      <Form.Label>名称</Form.Label>\n      <Form.Control defaultValue={oldValue.name} type=\"input\" />\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>豆瓣评分<a href={\"https://www.douban.com\"} target=\"_blank\" rel=\"noopener noreferrer\"><AiOutlineSearch className=\"icon clickable\" /></a></Form.Label><Form.Control defaultValue={oldValue.douban} id=\"douban\" type=\"input\"/></Col>\n        <Col><Form.Label>年份</Form.Label><Form.Control defaultValue={oldValue.year} id=\"year\" type=\"input\"/></Col>\n        <Col><Form.Label>状态</Form.Label><Form.Control defaultValue={oldValue.status} id=\"status\" type=\"input\"/></Col>\n      </Form.Row>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>分类</Form.Label><Form.Control defaultValue={oldValue.genre} id=\"genre\" type=\"input\"/></Col>\n        <Col><Form.Label>TV集数</Form.Label><Form.Control defaultValue={oldValue.tv_episodes} id=\"tv_episodes\" type=\"input\"/></Col>\n        <Col><Form.Label>剧场版</Form.Label><Form.Control defaultValue={oldValue.movies} id=\"movies\" type=\"input\"/></Col>\n        <Col><Form.Label>单集片长</Form.Label><Form.Control defaultValue={oldValue.episode_length} id=\"episode_length\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Form.Group>\n      <Form.Label>简介</Form.Label>\n      <Form.Control defaultValue={oldValue.description} id=\"description\" as=\"textarea\" rows=\"3\" />\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>剧情评分</Form.Label><Form.Control defaultValue={oldValue.story} id=\"story\" type=\"input\"/></Col>\n        <Col><Form.Label>作画评分</Form.Label><Form.Control defaultValue={oldValue.story} id=\"illustration\" type=\"input\"/></Col>\n        <Col><Form.Label>音乐评分</Form.Label><Form.Control defaultValue={oldValue.music} id=\"music\" type=\"input\"/></Col>\n        <Col><Form.Label>情怀评分</Form.Label><Form.Control defaultValue={oldValue.passion} id=\"passion\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>开始观看日期</Form.Label><Form.Control defaultValue={oldValue.start_date} id=\"start_date\" type=\"input\"/></Col>\n        <Col><Form.Label>结束观看日期</Form.Label><Form.Control defaultValue={oldValue.end_date} id=\"end_date\" type=\"input\"/></Col>\n        <Col><Form.Label>观看次数</Form.Label><Form.Control defaultValue={oldValue.times_watched} id=\"times_watched\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Button className=\"pink-button\" type=\"submit\">\n      提交\n    </Button>\n\n  </Form>\n}\n","// return the user data from the session storage\nexport const getUser = () => {\n  const userStr = sessionStorage.getItem('user');\n  if (userStr) return JSON.parse(userStr);\n  else return null;\n}\n \n// return the token from the session storage\nexport const getToken = () => {\n  return sessionStorage.getItem('token') || null;\n}\n \n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('token');\n  sessionStorage.removeItem('user');\n}\n \n// set the token and user from the session storage\nexport const setUserSession = (user, token) => {\n  sessionStorage.setItem('token', token);\n  sessionStorage.setItem('user', JSON.stringify(user));\n}\n\nexport function formatEpisodes(tv_episodes, movies) {\n  if (tv_episodes === undefined || movies === undefined) {\n    return \"\";\n  } else if (tv_episodes === 0) {\n    return `剧场版×${movies}`;\n  } else if (movies === 0) {\n    return `${tv_episodes}集`;\n  } else {\n    return `${tv_episodes}集+剧场版×${movies}`;\n  }\n}\n\nexport function formatDate(start_date, end_date) {\n  if (!start_date.isValid()) {\n    return \"\"\n  } else if (!end_date.isValid()) {\n    return `${start_date.format('MM/DD/YY')}至今`;\n  } else {\n    return `${start_date.format('MM/DD/YY')} 至 ${end_date.format('MM/DD/YY')}`;\n  }\n}\n\nexport function formatTime(time) {\n  if (isNaN(time)) {\n    return \"-\";\n  }\n  if (time >= 60) {\n    return Math.round(time / 60 * 10) / 10 + \" 小时\";\n  } else {\n    return Math.round(time * 10) / 10 + \" 分钟\";\n  }\n}\n\nexport function calculateDailyTime(row) {\n  const days = row.end_date.diff(row.start_date, 'days') + 1;\n  const episode_length = row.episode_length === undefined || row.episode_length === 0 ? 24 : row.episode_length;\n  const totalTime = row.tv_episodes * episode_length + row.movies * 90;\n  return totalTime / days;\n}\n\nexport function translateHeader(header) {\n  switch(header) {\n    case '名称':\n      return 'name';\n    case '集数':\n      return 'tv_episodes';\n    case '状态':\n      return 'status';\n    case '分类':\n      return 'genre';\n    case '剧情':\n      return 'story';\n    case '作画':\n      return 'illustration';\n    case '音乐':\n      return 'music';\n    case '情怀':\n      return 'passion';\n    case '评分':\n      return 'rating';\n    case '首次观看日期':\n      return 'end_date';\n    case '观看次数':\n      return 'times_watched';\n    case '年份':\n      return 'year';\n    case '豆瓣评分':\n      return 'douban';\n    case '日均时长':\n      return 'daily_time';\n    default:\n      return 'unknown';\n  }\n}\n\nexport function sortList(rawList, sortedCol) {\n  return rawList.slice().sort((a, b) => {\n    const aQuantity = sortedCol === \"daily_time\" ? calculateDailyTime(a) : a[sortedCol];\n    const bQuantity = sortedCol === \"daily_time\" ? calculateDailyTime(b) : b[sortedCol];\n    if (sortedCol === \"start_date\") {\n      if (!aQuantity.isValid()) {\n        return 1;\n      } else if (!bQuantity.isValid()) {\n        return -1;\n      } else {\n        return compare(aQuantity, bQuantity);\n      }\n    } else {\n      return compare(aQuantity, bQuantity);\n    }\n  });\n}\n\nfunction compare(a, b) {\n  if (a > b) {\n    return -1;\n  } else if (a < b) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\n","import React, { useState, useEffect } from 'react';\nimport AnimeDataContext from '../context/AnimeDataContext';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport { BiEditAlt, BiTrash } from \"react-icons/bi\";\nimport { useAuthenticationContext } from \"../context/AuthenticationContext\";\nimport SortHeader from './SortHeader';\nimport FilterHeader from './FilterHeader';\nimport DropdownHeader from './DropdownHeader';\nimport Description from './Description';\nimport AnimeModal from './AnimeModal';\nimport { sortList, formatEpisodes, formatDate, translateHeader, calculateDailyTime, formatTime } from \"../utils/utils\";\nimport '../App.css';\nimport './AnimeList.css';\n\nfunction AnimeList(props) {\n\n  const { authenticated } = useAuthenticationContext();\n  \n  const { ratings } = React.useContext(AnimeDataContext);\n\n  const watchedHeaders = ['序号', '名称', '集数', '分类', '剧情', '作画', '音乐', '情怀', '评分', '首次观看日期', '日均时长', ''];\n  const wantToWatchHeaders = ['序号', '名称', '集数', '分类', '年份', '豆瓣评分', '简介', ''];\n  const [activeDescription, setActiveDescription] = useState(null);\n  const [showDescription, setShowDescription] = useState(false);\n  const [showAnimeModal, setShowAnimeModal] = useState(false);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [submitNewAnime, setSubmitNewAnime] = useState(false);\n  const [animeToDelete, setAnimeToDelete] = useState({});\n  const [activeId, setActiveId] = useState();\n  const [displayListStatus, setDisplayListStatus] = useState(\"已看\");\n  const [displayList, setDisplayList] = useState(ratings);\n  const [tableHeaders, setTableHeaders] = useState(watchedHeaders);\n  const [filterList, setFilterList] = useState({});\n  const [sortedCol, setSortedCol] = useState();\n  const [editAnimeOldValue, setEditAnimeOldValue] = useState(null);\n\n  useEffect(() => {setSortedCol(\"end_date\")}, []);\n\n  useEffect(() => {\n    setFilterList([]);\n    setDisplayList(sortList(ratings.filter((rating) => rating.status === displayListStatus), \"end_date\"));\n  }, [props.isLoading, ratings, displayListStatus]);\n\n  useEffect(() => {\n    if (sortedCol !== null) {\n      setDisplayList(sortList(ratings.filter((rating) => rating.status === displayListStatus), sortedCol));\n      setSortedCol(null);\n    }\n  }, [sortedCol, ratings, displayListStatus]);\n\n  useEffect(() => {\n    if (filterList.length !== 0) {\n      for (const [key, value] of Object.entries(filterList)) {\n        setDisplayList(ratings.filter((item) => {\n          return item[key].includes(value) && item.status === displayListStatus;\n        }));\n      }\n      setFilterList([]);\n    }\n  }, [ratings, filterList, displayListStatus]);\n\n  const changeStatus = (e) => {\n    const newStatus = e.target.innerHTML;\n    if (newStatus === '想看') {\n      setTableHeaders(wantToWatchHeaders);\n    } else {\n      setTableHeaders(watchedHeaders);\n    }\n    setDisplayListStatus(newStatus);\n  }\n\n  const formatDescription = (description) => {\n    if (description !== null && description !== undefined) {\n      return description.substring(0, 20) + '......';\n    }\n  }\n\n  if (props.isLoading) {\n    return <div className=\"loading\">\n      <div>正在加载......</div>\n    </div> ;\n  } else if (props.loadError) {\n    return <Alert variant='danger'>\n      番剧评分加载失败！\n    </Alert>;\n  } else {\n    return (<div className=\"main-element\">\n      <Modal centered size='lg' show={showDescription} onHide={() => setShowDescription(false)}>\n        <Modal.Header>\n          <Modal.Title>简介</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Description description={activeDescription}/>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button className=\"pink-button\" onClick={() => setShowDescription(false)}>\n            关闭\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal centered size='lg' show={showAnimeModal} onHide={() => setShowAnimeModal(false)}>\n        <Modal.Header closeButton>\n        <Modal.Title>{submitNewAnime ? \"添加新番剧\" : \"编辑番剧\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AnimeModal\n            onSubmitOrEdit={(event, id) => {\n              if (submitNewAnime) {\n                event.preventDefault();\n                props.onAnimeSubmit(event, null, true);\n                setShowAnimeModal(false);\n              } else {\n                event.preventDefault();\n                props.onAnimeSubmit(event, id, false);\n                setShowAnimeModal(false);\n              }\n            }}\n            oldValue={editAnimeOldValue}\n            id={activeId}\n          />\n        </Modal.Body>\n      </Modal>\n      <Modal centered size=\"sm\" show={showDeleteConfirmation} onHide={() => setShowDeleteConfirmation(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>删除番剧</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{`确定要删除番剧“${animeToDelete.name}”吗`}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => {\n            setAnimeToDelete({});\n            setShowDeleteConfirmation(false);\n          }}>取消</Button>\n          <Button variant=\"danger\" onClick={() => {\n            props.deleteAnime(animeToDelete.id);\n            setAnimeToDelete({});\n            setShowDeleteConfirmation(false);\n          }}>确定</Button>\n        </Modal.Footer>\n      </Modal>\n      <div className=\"button-group\">\n        <div>\n          <Button className=\"pink-button\" onClick={changeStatus}>已看</Button>\n          <Button className=\"pink-button\" onClick={changeStatus}>在看</Button>\n          <Button className=\"pink-button\" onClick={changeStatus}>想看</Button>\n        </div>\n        <div>\n          {authenticated ? <Button className=\"pink-button\" onClick={() => {\n            setEditAnimeOldValue(null);\n            setActiveId(null);\n            setShowAnimeModal(true);\n            setSubmitNewAnime(true);\n          }}>添加</Button> : <></>}\n          <Button className=\"pink-button\" onClick={props.refresh}>刷新</Button>\n        </div>\n      </div>\n      <div>\n        <Table striped borderless hover size=\"sm\" variant=\"light\" id=\"table\">\n          <thead>\n            <tr className='table-headers'>\n              {tableHeaders.map(header => {\n                if (header === '名称' || header === '分类') {\n                  return <FilterHeader key={header} header={header}\n                    filter={(e) => {\n                      let newFilterList = {};\n                      for (let item in filterList) {\n                        newFilterList[item] = filterList[item];\n                      }\n                      newFilterList[translateHeader(header)] = e.target.value;\n                      setFilterList(newFilterList);\n                    }}\n                    clearFilter={() => {\n                      setFilterList([]);\n                      setDisplayList(sortList(ratings.filter((rating) => rating.status === displayListStatus), \"end_date\"));\n                    }}\n                  />;\n                } else if (header === '状态') {\n                  return <DropdownHeader key={header} header={header} filterStatus={(event) => {\n                    setFilterList({\"status\": event.target.value});\n                  }}/>\n                } else if (header !== ''){\n                  return <SortHeader key={header} header={header} sort={() => setSortedCol(translateHeader(header))}/>;\n                } else {\n                  return <th key={header} ></th>\n                }\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {\n              displayList.map((row, idx) =>\n                <tr key={row.name}>\n                  <td>{idx + 1}</td>\n                  <td className='anime-name clickable' onClick={(e) => {\n                    setActiveDescription(\n                      {\n                        name: row.name,\n                        douban: row.douban,\n                        year: row.year,\n                        genre: row.genre,\n                        episodes: row.tv_episodes,\n                        episode_length: row.episode_length,\n                        description: row.description,\n                      }\n                    );\n                    setShowDescription(true);\n                  }}>{row.name}</td>\n                  <td>{formatEpisodes(row.tv_episodes, row.movies)}</td>\n                  <td>{row.genre}</td>\n                  <td>{displayListStatus === '想看' ? row.year : row.story}</td>\n                  <td>{displayListStatus === '想看' ? row.douban : row.illustration}</td>\n                  <td>{displayListStatus === '想看' ? formatDescription(row.description) : row.music}</td>\n                  {displayListStatus === '想看' ? \"\" : <td>{row.passion}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{row.rating}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{formatDate(row.start_date, row.end_date)}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{formatTime(calculateDailyTime(row))}</td>}\n                  <td> {authenticated ?\n                      <>\n                        <BiEditAlt className=\"clickable\" onClick={() => {\n                          setActiveId(row.id);\n                          setEditAnimeOldValue({\n                            name: row.name,\n                            year: row.year,\n                            douban: row.douban,\n                            tv_episodes: row.tv_episodes,\n                            movies: row.movies,\n                            episode_length: row.episode_length,\n                            status: row.status,\n                            genre: row.genre,\n                            description: row.description,\n                            story: row.story,\n                            illustration: row.illustration,\n                            music: row.music,\n                            passion: row.passion,\n                            start_date: row.start_date.format('YYYY-MM-DD'),\n                            end_date: row.end_date.format('YYYY-MM-DD'),\n                            times_watched: row.times_watched,\n                          });\n                          setSubmitNewAnime(false);\n                          setShowAnimeModal(true);\n                        }}/><BiTrash className=\"icon clickable\" onClick={() => {\n                          setAnimeToDelete({\n                            name: row.name,\n                            id: row.id,\n                          });\n                          setShowDeleteConfirmation(true);\n                        }}/>\n                      </> : <></>\n                    }\n                    </td>\n                </tr>)\n            }\n          </tbody>\n        </Table>\n      </div>\n    </div>);\n  }\n}\n\nexport default AnimeList;","import React from 'react';\nimport moment from 'moment';\nimport AnimeDataContext from '../context/AnimeDataContext';\nimport { formatTime } from \"../utils/utils\";\nimport './MonthlySummary.css';\nimport '../App.css';\n\nfunction Summary(props) {\n  return <div className=\"summary\">\n    <div className=\"summary-title\">\n      <div className=\"summary-info\">\n        <div className=\"year-month\">\n          <div className=\"month\">{moment(props.month).format(\"MM\")}</div>\n          <div className=\"year\">{moment(props.month).format(\"YYYY\")}</div>\n          <div className=\"yue\">月</div>\n        </div>\n        <div className=\"summary-info-pieces\">\n          <div className=\"summary-info-piece\">{\"番剧总数：\" + props.summary.bangumi_num}</div>\n          <div className=\"summary-info-piece\">{\"总集数：\" + props.summary.tv_episode_num}</div>\n          <div className=\"summary-info-piece\">{\"总时长：\" + props.summary.total_time}</div>\n          <div className=\"summary-info-piece\">{\"每日时长：\" + formatTime(props.summary.total_time / moment(props.month).daysInMonth())}</div>\n        </div>\n      </div>\n      <div className=\"summary-cover\">\n\n      </div>\n    </div>\n    <div className=\"summary-names\">\n      {props.summary.bangumis.map((bangumi_name) => \n        <div className=\"bangumi-name\">{\"• \" + bangumi_name}</div>)}\n    </div>\n  </div>\n}\n\nfunction MonthlySummary() {\n  const { summaries } = React.useContext(AnimeDataContext);\n  console.log(summaries);\n  return <div className=\"monthly-summary\">\n    {Object.keys(summaries).map((month) => <Summary month={month} summary={summaries[month]} />)}\n  </div>;\n}\n\nexport default MonthlySummary;","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useAuthenticationContext } from \"../context/AuthenticationContext\";\nimport \"./Login.css\";\nimport \"../App.css\";\n\nexport default function Login() {\n  const { username, password, setUsername, setPassword, handleLogin } = useAuthenticationContext();\n\n  const validateForm = () => {\n    return username.length > 0 && password.length > 0;\n  }\n\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleLogin}>\n        <Form.Group size=\"lg\" controlId=\"username\">\n          <Form.Label>用户名</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>密码</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button className=\"pink-button\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n          登陆\n        </Button>\n      </Form>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport * as Env from \"./environments\";\nimport Navivation from './components/Navigation';\nimport AnimeDataContext from './context/AnimeDataContext';\nimport AnimeList from './components/AnimeList';\nimport MonthlySummary from './components/MonthlySummary';\nimport Login from \"./components/Login\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { AuthenticationContext } from \"./context/AuthenticationContext\";\nimport { sortList, getUser, getToken, setUserSession, removeUserSession } from \"./utils/utils\";\nimport Parse from 'parse';\nimport moment from 'moment';\nimport './App.css';\n\nParse.initialize(Env.APPLICATION_ID, Env.JAVASCRIPT_KEY);\nParse.serverURL = Env.SERVER_URL;\n\nconsole.log(Parse.serverURL);\n\nfunction App() {\n  // authentication related states\n  const [authenticated, setAuthenticated] = useState(false);\n  const [authenticating, setAuthenticating] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(getUser());\n  const [token, setToken] = useState(getToken());\n  // page status related states\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n  const [activePage, setActivePage] = useState(\"AnimeList\")\n\n  // data related states\n  const [ratings, setRatings] = useState([]);\n  const [summaries, setSummaries] = useState({});\n\n  const fetchRatings = async () => {\n    setIsLoading(true);\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.limit(1000);\n    query.find().then((results) => {\n      console.log(\"calling server\");\n      if (typeof document !== 'undefined'){\n        const ratings = results.map((result) => {\n          return {\n            id: result.id,\n            name: result.get(\"name\"),\n            year: result.get(\"year\"),\n            douban: result.get(\"douban\"),\n            tv_episodes: result.get(\"tv_episodes\"),\n            movies: result.get(\"movies\"),\n            episode_length: result.get(\"episode_length\"),\n            status: result.get(\"status\"),\n            genre: result.get(\"genre\"),\n            description: result.get(\"description\"),\n            story: result.get(\"story\"),\n            illustration: result.get(\"illustration\"),\n            music: result.get(\"music\"),\n            passion: result.get(\"passion\"),\n            rating: Number((result.get(\"story\") + result.get(\"illustration\") + result.get(\"music\") + result.get(\"passion\")).toFixed(1)),\n            start_date: moment(result.get(\"start_date\"), 'YYYY-MM-DD'),\n            end_date: moment(result.get(\"end_date\"), 'YYYY-MM-DD'),\n            times_watched: result.get(\"times_watched\"),\n          }}\n        );\n        setRatings(sortList(ratings, \"start_date\"));\n        setIsLoading(false);\n      }\n    }, (error) => {\n      setIsLoading(false);\n      setLoadError(true);\n      console.error('Error while fetching ParseObjects', error);\n    });\n  };\n\n  const submitNewRating = async (newRating) => {\n    const RatingsObj = Parse.Object.extend('Ratings');\n    const newRatingObj = new RatingsObj();\n    for (const [key, value] of Object.entries(newRating)) {\n      newRatingObj.set(key, value)\n    }\n\n    newRatingObj.save().then(\n      (result) => {\n        alert(\"已提交更新！\");\n        fetchRatings();\n      },\n      (error) => {\n        alert(\"更新失败，请稍后重试。\");\n      }\n    );\n  };\n\n  const updateRating = async (id, newRating) => {\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.get(id).then((object) => {\n      for (const [key, value] of Object.entries(newRating)) {\n        object.set(key, value)\n      }\n      object.save().then((response) => {\n        alert(\"已提交更新！\");\n        fetchRatings();\n      }, (error) => {\n        alert(\"更新失败，请稍后重试。\");\n      });\n    });\n  };\n  \n  const deleteAnime = async (id) => {\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.get(id).then((object) => {\n      object.destroy().then((response) => {\n        alert(\"已删除番剧！\");\n        fetchRatings();\n      }, (error) => {\n        alert(\"删除失败，请稍后重试。\");\n      });\n    });\n  };\n\n  useEffect(() => {\n    fetchRatings();\n  }, [])\n\n  useEffect(() => {\n    const tempSummaries = {};\n    ratings.filter((rating) => rating.status === \"已看\").forEach((bangumi) => {\n      let endMonth = moment(bangumi.end_date).format('YYYY-MM');\n      if (!(endMonth in tempSummaries)) {\n        tempSummaries[endMonth] = {\n          bangumi_num: 0,\n          tv_episode_num: 0,\n          movie_num: 0,\n          total_time: 0,\n          daily_time: 0,\n          bangumis: []\n        };\n      }\n      tempSummaries[endMonth].bangumi_num += 1;\n      tempSummaries[endMonth].bangumis.push(bangumi.name);\n      tempSummaries[endMonth].tv_episode_num += bangumi.tv_episodes;\n      tempSummaries[endMonth].movie_num += bangumi.movies;\n      tempSummaries[endMonth].total_time += bangumi.tv_episodes * bangumi.episode_length + bangumi.movies * 90;\n    });\n    setSummaries(tempSummaries);\n  }, [ratings])\n\n  useEffect(() => {\n    if (user != null && token != null) {\n      setAuthenticated(true);\n    }\n  }, [user, token])\n\n  const handleAnimeSubmit = (event, id, isNew) => {\n    event.preventDefault();\n    const formElements = event.target.elements;\n    const newRating = {\n      \"name\": formElements.name.value,\n      \"year\": formElements.year.value,\n      \"douban\": Number(formElements.douban.value),\n      \"tv_episodes\": Number(formElements.tv_episodes.value),\n      \"movies\": Number(formElements.movies.value),\n      \"episode_length\": Number(formElements.episode_length.value),\n      \"status\": formElements.status.value,\n      \"genre\": formElements.genre.value,\n      \"description\": formElements.description.value,\n      \"story\": Number(formElements.story.value),\n      \"illustration\": Number(formElements.illustration.value),\n      \"music\": Number(formElements.music.value),\n      \"passion\": Number(formElements.passion.value),\n      \"start_date\": formElements.start_date.value,\n      \"end_date\": formElements.end_date.value,\n      \"times_watched\": Number(formElements.times_watched.value),\n    };\n    if (isNew) {\n      submitNewRating(newRating);\n    } else {\n      updateRating(id, newRating);\n    }\n  };\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    // Create a new instance of the user class\n    Parse.User.logIn(username, password).then((user) => {\n        setUserSession(user, user.getSessionToken());\n        alert(\"欢迎，\" + user.getUsername());\n        setAuthenticating(false);\n        setAuthenticated(true);\n    }).catch(function(error){\n        alert(error.message);\n    });\n  }\n\n  const handleSignOut = () => {\n    setUser(null);\n    setToken(null);\n    removeUserSession();\n    setAuthenticated(false);\n  }\n\n  const mainElement = (activePage) => {\n    switch (activePage) {\n      case 'AnimeList':\n        return <AnimeList isLoading={isLoading} loadError={loadError} refresh={fetchRatings} onAnimeSubmit={handleAnimeSubmit} deleteAnime={deleteAnime}/>;\n      case 'MonthlySummary':\n        return <MonthlySummary />;\n      default:\n        return <AnimeList isLoading={isLoading} loadError={loadError} refresh={fetchRatings} onAnimeSubmit={handleAnimeSubmit} deleteAnime={deleteAnime}/>;\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"App\">\n        <AuthenticationContext.Provider value={{ username, password, authenticated, setAuthenticating, handleLogin, handleSignOut, setUsername, setPassword }}>\n          <Navivation switchPage={setActivePage}/>\n          {authenticating ? <Login /> :\n            <AnimeDataContext.Provider value={{ ratings: ratings, summaries: summaries }}>\n              {mainElement(activePage)}\n            </AnimeDataContext.Provider>\n          }\n        </AuthenticationContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}