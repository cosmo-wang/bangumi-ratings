{"version":3,"sources":["environments.js","Utils/AppContext.js","utils.js","components/Navigation.js","Context/AnimeDataContext.jsx","components/SortHeader.js","components/FilterBox.js","components/FilterHeader.js","components/DropdownHeader.js","components/Description.js","components/AnimeModal.js","components/AnimeList.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APPLICATION_ID","JAVASCRIPT_KEY","SERVER_URL","AppContext","createContext","useAppContext","useContext","translateHeader","header","sortList","rawList","sortedCol","slice","sort","a","b","isValid","compare","Navigation","setUser","setToken","history","useHistory","Navbar","sticky","expand","id","Brand","href","Nav","className","activeKey","window","location","pathname","Item","Link","onClick","sessionStorage","removeItem","push","AnimeDataContext","React","ratings","descriptions","SortHeader","props","key","FilterBox","useState","displayBox","setDisplayBox","placeholder","type","onKeyPress","e","filter","clearFilter","FilterHeader","DropdownHeader","name","onChange","event","filterStatus","value","selected","Description","description","undefined","target","douban","year","genre","episodes","episode_length","AnimeModal","oldValue","Form","onSubmit","onSubmitOrEdit","Group","controlId","Label","Control","defaultValue","Row","Col","status","tv_episodes","movies","as","rows","story","music","passion","start_date","end_date","times_watched","Button","Parse","initialize","Env","serverURL","AnimeList","watchedHeaders","wantToWatchHeaders","activeDescription","setActiveDescription","showDescription","setShowDescription","showAnimeModal","setShowAnimeModal","showDeleteConfirmation","setShowDeleteConfirmation","submitNewAnime","setSubmitNewAnime","animeToDelete","setAnimeToDelete","activeId","setActiveId","displayListStatus","setDisplayListStatus","displayList","setDisplayList","tableHeaders","setTableHeaders","filterList","setFilterList","setSortedCol","editAnimeOldValue","setEditAnimeOldValue","useEffect","rating","isLoading","length","item","includes","Object","entries","changeStatus","newStatus","innerHTML","loadError","Alert","variant","Modal","centered","size","show","onHide","Header","Title","Body","Footer","closeButton","preventDefault","onAnimeSubmit","deleteAnime","refresh","Table","striped","borderless","hover","map","newFilterList","row","idx","illustration","substring","formatDescription","format","Login","username","setUsername","password","setPassword","User","logIn","then","user","token","setItem","JSON","stringify","setUserSession","getSessionToken","catch","error","alert","message","autoFocus","block","disabled","App","userStr","getItem","parse","getUser","setIsLoading","setLoadError","setRatings","fetchRatings","ratingsObj","extend","query","Query","limit","find","results","console","log","document","result","get","Number","toFixed","moment","write","submitNewRating","newRating","RatingsObj","newRatingObj","set","save","updateRating","object","response","destroy","Provider","path","to","isNew","formElements","elements","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef3686ff.chunk.js","sourcesContent":["module.exports = {\n    APPLICATION_ID: '54T0X4tWovUBdnRd6EKdW3BrN4WJrpGBEJdwDk9J',\n    JAVASCRIPT_KEY: 'WREbi60D2GfVknGhH9Je1GJ931oIhIVkHUXD9u5R',\n    SERVER_URL: 'https://parseapi.back4app.com/'\n}","import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}","// return the user data from the session storage\nexport const getUser = () => {\n  const userStr = sessionStorage.getItem('user');\n  if (userStr) return JSON.parse(userStr);\n  else return null;\n}\n \n// return the token from the session storage\nexport const getToken = () => {\n  return sessionStorage.getItem('token') || null;\n}\n \n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('token');\n  sessionStorage.removeItem('user');\n}\n \n// set the token and user from the session storage\nexport const setUserSession = (token, user) => {\n  sessionStorage.setItem('token', token);\n  sessionStorage.setItem('user', JSON.stringify(user));\n}\n\nexport function formatEpisodes(tv_episodes, movies) {\n  if (tv_episodes === undefined || movies === undefined) {\n    return \"\";\n  } else if (tv_episodes === 0) {\n    return `剧场版×${movies}`;\n  } else if (movies === 0) {\n    return `${tv_episodes}集`;\n  } else {\n    return `${tv_episodes}集+剧场版×${movies}`;\n  }\n}\n\nexport function formatDate(start_date, end_date) {\n  if (!start_date.isValid()) {\n    return \"\"\n  } else if (!end_date.isValid()) {\n    return `${start_date.format('YYYY-MM-DD')}至今`;\n  } else {\n    return `${start_date.format('YYYY-MM-DD')} 至 ${end_date.format('YYYY-MM-DD')}`;\n  }\n}\n\nexport function translateHeader(header) {\n  switch(header) {\n    case '名称':\n      return 'name';\n    case '集数':\n      return 'tv_episodes';\n    case '状态':\n      return 'status';\n    case '分类':\n      return 'genre';\n    case '剧情':\n      return 'story';\n    case '作画':\n      return 'illustration';\n    case '音乐':\n      return 'music';\n    case '情怀':\n      return 'passion';\n    case '评分':\n      return 'rating';\n    case '首次观看日期':\n      return 'start_date';\n    case '观看次数':\n      return 'times_watched';\n    default:\n      return 'unknown';\n  }\n}\n\nexport function sortList(rawList, sortedCol) {\n  return rawList.slice().sort((a, b) => {\n    if (sortedCol === \"start_date\") {\n      if (!a[sortedCol].isValid()) {\n        return 1;\n      } else if (!b[sortedCol].isValid()) {\n        return -1;\n      } else {\n        return compare(a[sortedCol], b[sortedCol]);\n      }\n    } else {\n      return compare(a[sortedCol], b[sortedCol]);\n    }\n  });\n}\n\nfunction compare(a, b) {\n  if (a > b) {\n    return -1;\n  } else if (a < b) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { useAppContext } from \"../Utils/AppContext\";\nimport { removeUserSession } from \"../utils\";\nimport './Navigation.css';\nimport '../App.css';\n\nfunction Navigation() {\n  const { setUser, setToken } = useAppContext();\n  const history = useHistory();\n\n  const handleSignOut = () => {\n    setUser(null);\n    setToken(null);\n    removeUserSession();\n    history.push(\"/login\");\n  };\n\n  return (\n    <Navbar sticky=\"top\" expand=\"lg\" id=\"navbar\">\n      <Navbar.Brand href=\"/\">追番补番</Navbar.Brand>\n      <Nav className=\"mr-auto\" activeKey={window.location.pathname}>\n        <Nav.Item><Nav.Link href=\"/list\">我的列表</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link href=\"/today\">今日更新</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link href=\"/calendar\">看番日历</Nav.Link></Nav.Item>\n      </Nav>\n    <div id=\"signout\" className=\"clickable\" onClick={handleSignOut}>注销</div>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\n\nconst animeData = {\n  ratings: [],\n  descriptions: {}\n}\n\nconst AnimeDataContext = React.createContext(animeData);\n\nexport default AnimeDataContext;","import React from 'react';\nimport { BiSort } from \"react-icons/bi\";\nimport '../App.css';\n\nexport default function SortHeader(props) {\n  return (\n    <th key={props.header}>\n      <div className='table-header'>\n        <div>{props.header}</div>\n        <BiSort className='icon clickable' onClick={props.sort}/>\n      </div>\n    </th>\n  );\n}","import React, { useState } from 'react';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './FilterBox.css';\nimport '../App.css';\n\nexport default function FilterBox(props) {\n  const [displayBox, setDisplayBox] = useState(false);\n  return (displayBox ? \n    <div className=\"filter-box\">\n      <input className=\"filter-input-box\" placeholder=\"输入......\" type=\"text\" onKeyPress={(e) => {\n        if (e.key === \"Enter\") props.filter(e);\n      }}/>\n      <div className=\"close-button clickable\" onClick={() => {\n        props.clearFilter();\n        setDisplayBox(!displayBox)\n      }}>&times;</div>\n    </div> :\n    <AiOutlineSearch className=\"filter-box icon clickable\" onClick={() => setDisplayBox(!displayBox)}/>);\n}\n","import React from 'react';\nimport FilterBox from './FilterBox';\nimport './FilterHeader.css';\n\nexport default function FilterHeader(props) {\n  return (\n    <th key={props.header}>\n      <div className='table-header'>\n        <div>{props.header}</div>\n        <FilterBox filter={props.filter} clearFilter={props.clearFilter}/>\n      </div>\n    </th>\n  );\n}","import React from 'react';\nimport './DropdownHeader.css';\n\nexport default function DropdownHeader(props) {\n  return <th key={props.header}>\n    <select id=\"status\" className=\"dropdown-header\" name=\"status\" onChange={(event) => props.filterStatus(event)}>\n      <option value=\"\" selected>状态</option>\n      <option value=\"想看\">想看</option>\n      <option value=\"在看\">在看</option>\n      <option value=\"已看\">已看</option>\n    </select>\n  </th>\n};","import React from 'react';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './Description.css';\n\nexport default function Description(props) {\n  const description = props.description;\n  return description === undefined || description === null ? \n    <p>暂无简介</p> :\n    <div className=\"description\">\n      <div>\n        <h1>{description.name}<a href=\"https://www.douban.com\" target=\"_blank\"><AiOutlineSearch className=\"icon clickable\" /></a></h1>\n        <p>豆瓣评分：{description.douban}</p>\n        <p>年份：{description.year}</p>\n        <p>分类：{description.genre}</p>\n        <p>集数：{description.episodes}</p>\n        <p>单集片长：{description.episode_length}</p>\n        <p>简介：{description.description}</p>\n      </div>\n    </div>;\n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './AnimeModal.css';\nimport '../App.css';\n\nexport default function AnimeModal(props) {\n  const oldValue = props.oldValue === undefined || props.oldValue === null ? {} : props.oldValue;\n  return <Form onSubmit={(event) => {props.onSubmitOrEdit(event, props.id)}}>\n    <Form.Group controlId=\"name\">\n      <Form.Label>名称</Form.Label>\n      <Form.Control defaultValue={oldValue.name} type=\"input\" />\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>豆瓣评分<a href=\"https://www.douban.com\" target=\"_blank\"><AiOutlineSearch className=\"icon clickable\" /></a></Form.Label><Form.Control defaultValue={oldValue.douban} id=\"douban\" type=\"input\"/></Col>\n        <Col><Form.Label>年份</Form.Label><Form.Control defaultValue={oldValue.year} id=\"year\" type=\"input\"/></Col>\n        <Col><Form.Label>状态</Form.Label><Form.Control defaultValue={oldValue.status} id=\"status\" type=\"input\"/></Col>\n      </Form.Row>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>分类</Form.Label><Form.Control defaultValue={oldValue.genre} id=\"genre\" type=\"input\"/></Col>\n        <Col><Form.Label>TV集数</Form.Label><Form.Control defaultValue={oldValue.tv_episodes} id=\"tv_episodes\" type=\"input\"/></Col>\n        <Col><Form.Label>剧场版</Form.Label><Form.Control defaultValue={oldValue.movies} id=\"movies\" type=\"input\"/></Col>\n        <Col><Form.Label>单集片长</Form.Label><Form.Control defaultValue={oldValue.episode_length} id=\"episode_length\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Form.Group>\n      <Form.Label>简介</Form.Label>\n      <Form.Control defaultValue={oldValue.description} id=\"description\" as=\"textarea\" rows=\"3\" />\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>剧情评分</Form.Label><Form.Control defaultValue={oldValue.story} id=\"story\" type=\"input\"/></Col>\n        <Col><Form.Label>作画评分</Form.Label><Form.Control defaultValue={oldValue.story} id=\"illustration\" type=\"input\"/></Col>\n        <Col><Form.Label>音乐评分</Form.Label><Form.Control defaultValue={oldValue.music} id=\"music\" type=\"input\"/></Col>\n        <Col><Form.Label>情怀评分</Form.Label><Form.Control defaultValue={oldValue.passion} id=\"passion\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>开始观看日期</Form.Label><Form.Control defaultValue={oldValue.start_date} id=\"start_date\" type=\"input\"/></Col>\n        <Col><Form.Label>结束观看日期</Form.Label><Form.Control defaultValue={oldValue.end_date} id=\"end_date\" type=\"input\"/></Col>\n        <Col><Form.Label>观看次数</Form.Label><Form.Control defaultValue={oldValue.times_watched} id=\"times_watched\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Button className=\"pink-button\" type=\"submit\">\n      提交\n    </Button>\n\n  </Form>\n}\n","import React, { useState, useEffect } from 'react';\nimport Parse from 'parse';\nimport * as Env from \"../environments\";\nimport AnimeDataContext from '../Context/AnimeDataContext';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport { BiEditAlt, BiTrash } from \"react-icons/bi\";\nimport SortHeader from './SortHeader';\nimport FilterHeader from './FilterHeader';\nimport DropdownHeader from './DropdownHeader';\nimport Description from './Description';\nimport AnimeModal from './AnimeModal';\nimport { sortList, formatEpisodes, formatDate, translateHeader } from \"../utils\";\nimport '../App.css';\nimport './AnimeList.css';\n\n\n\nParse.initialize(Env.APPLICATION_ID, Env.JAVASCRIPT_KEY);\nParse.serverURL = Env.SERVER_URL;\n\nfunction AnimeList(props) {\n  \n  const {ratings, descriptions} = React.useContext(AnimeDataContext);\n  // console.log(JSON.parse(LOCAL_DATA));\n\n  const watchedHeaders = ['序号', '名称', '集数', '分类', '剧情', '作画', '音乐', '情怀', '评分', '首次观看日期', '观看次数', ''];\n  const wantToWatchHeaders = ['序号', '名称', '集数', '分类', '年份', '豆瓣评分', '简介', ''];\n  const [activeDescription, setActiveDescription] = useState(null);\n  const [showDescription, setShowDescription] = useState(false);\n  const [showAnimeModal, setShowAnimeModal] = useState(false);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [submitNewAnime, setSubmitNewAnime] = useState(false);\n  const [animeToDelete, setAnimeToDelete] = useState({});\n  const [activeId, setActiveId] = useState();\n  const [displayListStatus, setDisplayListStatus] = useState(\"已看\");\n  const [displayList, setDisplayList] = useState(sortList(ratings, \"end_date\"));\n  const [tableHeaders, setTableHeaders] = useState(watchedHeaders);\n  const [filterList, setFilterList] = useState({});\n  const [sortedCol, setSortedCol] = useState();\n  const [editAnimeOldValue, setEditAnimeOldValue] = useState(null);\n\n  useEffect(() => {setSortedCol(\"start_date\")}, []);\n\n  useEffect(() => {\n    setDisplayList(ratings.filter((rating) => rating.status === displayListStatus));\n  }, [props.isLoading, ratings, displayListStatus]);\n\n  useEffect(() => {\n    if (sortedCol !== null) {\n      setDisplayList(sortList(ratings, sortedCol));\n      setSortedCol(null);\n    }\n  }, [sortedCol, ratings]);\n\n  useEffect(() => {\n    if (filterList.length !== 0) {\n      for (const [key, value] of Object.entries(filterList)) {\n        setDisplayList(ratings.filter((item) => {\n          return item[key].includes(value);\n        }));\n      }\n      setFilterList([]);\n    }\n  }, [filterList]);\n\n  const changeStatus = (e) => {\n    const newStatus = e.target.innerHTML;\n    if (newStatus === '想看') {\n      setTableHeaders(wantToWatchHeaders);\n    } else {\n      setTableHeaders(watchedHeaders);\n    }\n    setDisplayListStatus(newStatus);\n  }\n\n  const formatDescription = (description) => {\n    if (description !== null && description !== undefined) {\n      return description.substring(0, 20) + '......';\n    }\n  }\n\n  if (props.isLoading) {\n    return <div className=\"loading\">\n      <div>正在加载......</div>\n    </div> ;\n  } else if (props.loadError) {\n    return <Alert variant='danger'>\n      番剧评分加载失败！\n    </Alert>;\n  } else {\n    return (<div id=\"table-wrapper\">\n      <Modal centered size='lg' show={showDescription} onHide={() => setShowDescription(false)}>\n        <Modal.Header>\n          <Modal.Title>简介</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Description description={activeDescription}/>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button className=\"pink-button\" onClick={() => setShowDescription(false)}>\n            关闭\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal centered size='lg' show={showAnimeModal} onHide={() => setShowAnimeModal(false)}>\n        <Modal.Header closeButton>\n        <Modal.Title>{submitNewAnime ? \"添加新番剧\" : \"编辑番剧\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AnimeModal\n            onSubmitOrEdit={(event, id) => {\n              if (submitNewAnime) {\n                event.preventDefault();\n                props.onAnimeSubmit(event, null, true);\n                setShowAnimeModal(false);\n              } else {\n                event.preventDefault();\n                props.onAnimeSubmit(event, id, false);\n                setShowAnimeModal(false);\n              }\n            }}\n            oldValue={editAnimeOldValue}\n            id={activeId}\n          />\n        </Modal.Body>\n      </Modal>\n      <Modal centered size=\"sm\" show={showDeleteConfirmation} onHide={() => setShowDeleteConfirmation(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>删除番剧</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{`确定要删除番剧“${animeToDelete.name}”吗`}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => {\n            setAnimeToDelete({});\n            setShowDeleteConfirmation(false);\n          }}>取消</Button>\n          <Button variant=\"danger\" onClick={() => {\n            props.deleteAnime(animeToDelete.id);\n            setAnimeToDelete({});\n            setShowDeleteConfirmation(false);\n          }}>确定</Button>\n        </Modal.Footer>\n      </Modal>\n      <div className=\"button-group\">\n        <div>\n          <Button className=\"pink-button\" onClick={changeStatus}>已看</Button>\n          <Button className=\"pink-button\" onClick={changeStatus}>在看</Button>\n          <Button className=\"pink-button\" onClick={changeStatus}>想看</Button>\n        </div>\n        <div>\n          <Button className=\"pink-button\" onClick={() => {\n            setEditAnimeOldValue(null);\n            setActiveId(null);\n            setShowAnimeModal(true);\n            setSubmitNewAnime(true);\n          }}>添加</Button>\n          <Button className=\"pink-button\" onClick={props.refresh}>刷新</Button>\n        </div>\n      </div>\n      <div>\n        <Table striped borderless hover size=\"sm\" variant=\"light\" id=\"table\">\n          <thead>\n            <tr className='table-headers'>\n              {tableHeaders.map(header => {\n                if (header === '名称' || header === '分类') {\n                  return <FilterHeader header={header}\n                    filter={(e) => {\n                      let newFilterList = {};\n                      for (let item in filterList) {\n                        newFilterList[item] = filterList[item];\n                      }\n                      newFilterList[translateHeader(header)] = e.target.value;\n                      setFilterList(newFilterList);\n                    }}\n                    clearFilter={() => {\n                      setFilterList({});\n                      setDisplayList(ratings);\n                    }}\n                  />;\n                } else if (header === '状态') {\n                  return <DropdownHeader header={header} filterStatus={(event) => {\n                    setFilterList({\"status\": event.target.value});\n                  }}/>\n                } else if (header !== ''){\n                  return <SortHeader header={header} sort={() => setSortedCol(translateHeader(header))}/>;\n                } else {\n                  return <th></th>\n                }\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {\n              displayList.map((row, idx) =>\n                <tr key={row.name}>\n                  <td>{idx + 1}</td>\n                  <td className='anime-name clickable' onClick={(e) => {\n                    setActiveDescription(\n                      {\n                        name: row.name,\n                        douban: row.douban,\n                        year: row.year,\n                        genre: row.genre,\n                        episodes: row.tv_episodes,\n                        episode_length: row.episode_length,\n                        description: row.description,\n                      }\n                    );\n                    setShowDescription(true);\n                  }}>{row.name}</td>\n                  <td>{formatEpisodes(row.tv_episodes, row.movies)}</td>\n                  <td>{row.genre}</td>\n                  <td>{displayListStatus === '想看' ? row.year : row.story}</td>\n                  <td>{displayListStatus === '想看' ? row.douban : row.illustration}</td>\n                  <td>{displayListStatus === '想看' ? formatDescription(row.description) : row.music}</td>\n                  {displayListStatus === '想看' ? \"\" : <td>{row.passion}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{row.rating}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{formatDate(row.start_date, row.end_date)}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{row.times_watched}</td>}\n                  <td><BiEditAlt className=\"clickable\" onClick={() => {\n                    setActiveId(row.id);\n                    setEditAnimeOldValue({\n                      name: row.name,\n                      year: row.year,\n                      douban: row.douban,\n                      tv_episodes: row.tv_episodes,\n                      movies: row.movies,\n                      episode_length: row.episode_length,\n                      status: row.status,\n                      genre: row.genre,\n                      description: row.description,\n                      story: row.story,\n                      illustration: row.illustration,\n                      music: row.music,\n                      passion: row.passion,\n                      start_date: row.start_date.format('YYYY-MM-DD'),\n                      end_date: row.end_date.format('YYYY-MM-DD'),\n                      times_watched: row.times_watched,\n                    });\n                    setSubmitNewAnime(false);\n                    setShowAnimeModal(true);\n                  }}/><BiTrash className=\"icon clickable\" onClick={() => {\n                    setAnimeToDelete({\n                      name: row.name,\n                      id: row.id,\n                    });\n                    setShowDeleteConfirmation(true);\n                  }}/></td>\n                </tr>)\n            }\n          </tbody>\n        </Table>\n      </div>\n    </div>);\n  }\n}\n\n\nexport default AnimeList;","import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport Form from \"react-bootstrap/Form\";\nimport Parse from 'parse';\nimport Button from \"react-bootstrap/Button\";\nimport { useAppContext } from \"../Utils/AppContext\";\nimport { setUserSession } from \"../utils\";\nimport \"./Login.css\";\nimport \"../App.css\";\n\nexport default function Login() {\n  const { setUser, setToken } = useAppContext();\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    // Create a new instance of the user class\n    var user = Parse.User.logIn(username, password).then(function(user) {\n        setUserSession(user, user.getSessionToken());\n        setUser(JSON.stringify(user));\n        setToken(user.getSessionToken());\n        history.push(\"/list\");\n    }).catch(function(error){\n        alert(error.message);\n    });\n  }\n\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"username\">\n          <Form.Label>用户名</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>密码</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button className=\"pink-button\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n          登陆\n        </Button>\n      </Form>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport Navivation from './components/Navigation';\nimport AnimeDataContext from './Context/AnimeDataContext';\nimport AnimeList from './components/AnimeList';\nimport Login from \"./components/Login\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect } from 'react-router'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AppContext } from \"./Utils/AppContext\";\nimport { sortList, getUser, getToken } from \"./utils\";\nimport Parse from 'parse';\nimport moment from 'moment';\nimport './App.css';\n\nfunction App() {\n  const [user, setUser] = useState(getUser());\n  const [token, setToken] = useState(getToken());\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n  const [ratings, setRatings] = useState([]);\n  const [descriptions, setDescriptions] = useState({\n    \"Anime 1\": {\n      name: \"Anime 1\",\n      episodes: 42,\n      status: \"已看\",\n      genre: \"恋爱\",\n      description: \"This is a description the anime.\"\n    }\n  });\n\n  const fetchRatings = async () => {\n    setIsLoading(true);\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.limit(1000);\n    query.find().then((results) => {\n      console.log(\"calling server\");\n      if (typeof document !== 'undefined'){\n        const ratings = results.map((result) => {\n          return {\n            id: result.id,\n            name: result.get(\"name\"),\n            year: result.get(\"year\"),\n            douban: result.get(\"douban\"),\n            tv_episodes: result.get(\"tv_episodes\"),\n            movies: result.get(\"movies\"),\n            episode_length: result.get(\"episode_length\"),\n            status: result.get(\"status\"),\n            genre: result.get(\"genre\"),\n            description: result.get(\"description\"),\n            story: result.get(\"story\"),\n            illustration: result.get(\"illustration\"),\n            music: result.get(\"music\"),\n            passion: result.get(\"passion\"),\n            rating: Number((result.get(\"story\") + result.get(\"illustration\") + result.get(\"music\") + result.get(\"passion\")).toFixed(1)),\n            start_date: moment(result.get(\"start_date\"), 'YYYY-MM-DD'),\n            end_date: moment(result.get(\"end_date\"), 'YYYY-MM-DD'),\n            times_watched: result.get(\"times_watched\"),\n          }}\n        );\n        setRatings(sortList(ratings, \"start_date\"));\n        setIsLoading(false);\n      }\n    }, (error) => {\n      setIsLoading(false);\n      setLoadError(true);\n      if (typeof document !== 'undefined') document.write(`Error while fetching ParseObjects: ${JSON.stringify(error)}`);\n      console.error('Error while fetching ParseObjects', error);\n    });\n  };\n\n  const submitNewRating = async (newRating) => {\n    const RatingsObj = Parse.Object.extend('Ratings');\n    const newRatingObj = new RatingsObj();\n    for (const [key, value] of Object.entries(newRating)) {\n      newRatingObj.set(key, value)\n    }\n\n    newRatingObj.save().then(\n      (result) => {\n        console.log(result);\n        alert(\"已提交更新！\");\n        fetchRatings();\n      },\n      (error) => {\n        console.log(error);\n        alert(\"更新失败，请稍后重试。\");\n      }\n    );\n  };\n\n  const updateRating = async (id, newRating) => {\n    console.log(newRating);\n    console.log(id);\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.get(id).then((object) => {\n      for (const [key, value] of Object.entries(newRating)) {\n        console.log(\"here\");\n        object.set(key, value)\n      }\n      object.save().then((response) => {\n        console.log(response);\n        alert(\"已提交更新！\");\n        fetchRatings();\n      }, (error) => {\n        console.log(error);\n        alert(\"更新失败，请稍后重试。\");\n      });\n    });\n  };\n  \n  const deleteAnime = async (id) => {\n    console.log(id);\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.get(id).then((object) => {\n      object.destroy().then((response) => {\n        console.log(response);\n        alert(\"已删除番剧！\");\n        fetchRatings();\n      }, (error) => {\n        console.log(error);\n        alert(\"删除失败，请稍后重试。\");\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (user != null && token != null) {\n      fetchRatings();\n    }\n  }, [user, token])\n\n  const handleAnimeSubmit = (event, id, isNew) => {\n    event.preventDefault();\n    const formElements = event.target.elements;\n    const newRating = {\n      \"name\": formElements.name.value,\n      \"year\": formElements.year.value,\n      \"douban\": Number(formElements.douban.value),\n      \"tv_episodes\": Number(formElements.tv_episodes.value),\n      \"movies\": Number(formElements.movies.value),\n      \"episode_length\": Number(formElements.episode_length.value),\n      \"status\": formElements.status.value,\n      \"genre\": formElements.genre.value,\n      \"description\": formElements.description.value,\n      \"story\": Number(formElements.story.value),\n      \"illustration\": Number(formElements.illustration.value),\n      \"music\": Number(formElements.music.value),\n      \"passion\": Number(formElements.passion.value),\n      \"start_date\": formElements.start_date.value,\n      \"end_date\": formElements.end_date.value,\n      \"times_watched\": Number(formElements.times_watched.value),\n    };\n    if (isNew) {\n      submitNewRating(newRating);\n    } else {\n      updateRating(id, newRating);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"App\">\n        <AppContext.Provider value={{ user, token, setUser, setToken }}>\n          <Router>\n            <Navivation />\n            <Switch>\n              <AnimeDataContext.Provider value={{ratings: ratings, descriptions: descriptions}}>\n                <Route path=\"/login\">\n                  <Login />\n                </Route>\n                <Route path=\"/list\">\n                  {\n                    (user == null && token == null) ? <Redirect to=\"/login\" /> :\n                      <AnimeList isLoading={isLoading} loadError={loadError} refresh={fetchRatings} onAnimeSubmit={handleAnimeSubmit} deleteAnime={deleteAnime}/>\n                  }\n                </Route>\n                <Route path=\"/today\">\n                  <div className=\"loading\">开发中</div>\n                </Route>\n                <Route path=\"/calendar\">\n                <div className=\"loading\">开发中</div>\n                </Route>\n              </AnimeDataContext.Provider>\n            </Switch>\n          </Router>\n        </AppContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}