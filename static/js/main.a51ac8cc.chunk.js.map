{"version":3,"sources":["environments.js","Utils/AppContext.js","utils.js","components/Navigation.js","Context/AnimeDataContext.jsx","components/SortHeader.js","components/FilterBox.js","components/FilterHeader.js","components/DropdownHeader.js","components/Description.js","components/AnimeModal.js","components/AnimeList.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APPLICATION_ID","JAVASCRIPT_KEY","SERVER_URL","AppContext","createContext","useAppContext","useContext","calculateDailyTime","row","days","end_date","diff","start_date","episode_length","undefined","tv_episodes","movies","translateHeader","header","sortList","rawList","sortedCol","slice","sort","a","b","aQuantity","bQuantity","isValid","compare","Navigation","setUser","setToken","history","useHistory","Navbar","sticky","expand","id","Brand","href","Nav","className","activeKey","window","location","pathname","Item","Link","process","onClick","sessionStorage","removeItem","push","animeData","ratings","descriptions","AnimeDataContext","React","SortHeader","props","key","FilterBox","useState","displayBox","setDisplayBox","placeholder","type","onKeyPress","e","filter","clearFilter","FilterHeader","DropdownHeader","name","onChange","event","filterStatus","value","selected","Description","description","target","douban","year","genre","episodes","AnimeModal","oldValue","Form","onSubmit","onSubmitOrEdit","Group","controlId","Label","Control","defaultValue","Row","Col","status","as","rows","story","music","passion","times_watched","Button","Parse","initialize","Env","serverURL","AnimeList","watchedHeaders","wantToWatchHeaders","activeDescription","setActiveDescription","showDescription","setShowDescription","showAnimeModal","setShowAnimeModal","showDeleteConfirmation","setShowDeleteConfirmation","submitNewAnime","setSubmitNewAnime","animeToDelete","setAnimeToDelete","activeId","setActiveId","displayListStatus","setDisplayListStatus","displayList","setDisplayList","tableHeaders","setTableHeaders","filterList","setFilterList","setSortedCol","editAnimeOldValue","setEditAnimeOldValue","useEffect","resetDisplayList","isLoading","rating","length","item","includes","Object","entries","changeStatus","newStatus","innerHTML","loadError","Alert","variant","Modal","centered","size","show","onHide","Header","Title","Body","Footer","closeButton","preventDefault","onAnimeSubmit","deleteAnime","refresh","Table","striped","borderless","hover","map","newFilterList","idx","illustration","substring","formatDescription","format","time","Math","round","Login","username","setUsername","password","setPassword","User","logIn","then","user","token","setItem","JSON","stringify","setUserSession","getSessionToken","catch","error","alert","message","autoFocus","block","disabled","App","userStr","getItem","parse","getUser","setIsLoading","setLoadError","setRatings","fetchRatings","ratingsObj","extend","query","Query","limit","find","results","console","log","document","result","get","Number","toFixed","moment","write","submitNewRating","newRating","RatingsObj","newRatingObj","set","save","updateRating","object","response","destroy","Provider","basename","path","exact","to","isNew","formElements","elements","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAAA,EAAOC,QAAU,CACbC,eAAgB,2CAChBC,eAAgB,2CAChBC,WAAY,mC,wkBCDHC,EAAaC,wBAAc,MAEjC,SAASC,IACd,OAAOC,qBAAWH,GCiDb,SAASI,EAAmBC,GACjC,IAAMC,EAAOD,EAAIE,SAASC,KAAKH,EAAII,WAAY,QAAU,EACnDC,OAAwCC,IAAvBN,EAAIK,gBAAuD,IAAvBL,EAAIK,eAAuB,GAAKL,EAAIK,eAE/F,OADkBL,EAAIO,YAAcF,EAA8B,GAAbL,EAAIQ,QACtCP,EAGd,SAASQ,EAAgBC,GAC9B,OAAOA,GACL,IAAK,eACH,MAAO,OACT,IAAK,eACH,MAAO,cACT,IAAK,eACH,MAAO,SACT,IAAK,eACH,MAAO,QACT,IAAK,eACH,MAAO,QACT,IAAK,eACH,MAAO,eACT,IAAK,eACH,MAAO,QACT,IAAK,eACH,MAAO,UACT,IAAK,eACH,MAAO,SACT,IAAK,uCACH,MAAO,WACT,IAAK,2BACH,MAAO,gBACT,IAAK,eACH,MAAO,OACT,IAAK,2BACH,MAAO,SACT,IAAK,2BACH,MAAO,aACT,QACE,MAAO,WAIN,SAASC,EAASC,EAASC,GAChC,OAAOD,EAAQE,QAAQC,MAAK,SAACC,EAAGC,GAC9B,IAAMC,EAA0B,eAAdL,EAA6Bd,EAAmBiB,GAAKA,EAAEH,GACnEM,EAA0B,eAAdN,EAA6Bd,EAAmBkB,GAAKA,EAAEJ,GACzE,MAAkB,eAAdA,EACGK,EAAUE,UAEHD,EAAUC,UAGbC,EAAQH,EAAWC,IAFlB,EAFD,EAOFE,EAAQH,EAAWC,MAKhC,SAASE,EAAQL,EAAGC,GAClB,OAAID,EAAIC,GACE,EACCD,EAAIC,EACN,EAEA,E,aCvFIK,MAxBf,WAAuB,IAAD,EACUzB,IAAtB0B,EADY,EACZA,QAASC,EADG,EACHA,SACXC,EAAUC,cAShB,OACE,kBAACC,EAAA,EAAD,CAAQC,OAAO,MAAMC,OAAO,KAAKC,GAAG,UAClC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,KAAnB,4BACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,UAAUC,UAAWC,OAAOC,SAASC,UAClD,kBAACL,EAAA,EAAIM,KAAL,KAAU,kBAACN,EAAA,EAAIO,KAAL,CAAUR,KAAMS,qBAAhB,6BACV,kBAACR,EAAA,EAAIM,KAAL,KAAU,kBAACN,EAAA,EAAIO,KAAL,CAAUR,KAAK,UAAf,6BACV,kBAACC,EAAA,EAAIM,KAAL,KAAU,kBAACN,EAAA,EAAIO,KAAL,CAAUR,KAAK,aAAf,8BAEd,yBAAKF,GAAG,UAAUI,UAAU,YAAYQ,QAfpB,WACpBnB,EAAQ,MACRC,EAAS,MDDXmB,eAAeC,WAAW,SAC1BD,eAAeC,WAAW,QCExBnB,EAAQoB,KAAK,YAWb,kBC1BEC,EAAY,CAChBC,QAAS,GACTC,aAAc,IAKDC,EAFUC,IAAMtD,cAAckD,G,qECH9B,SAASK,EAAWC,GACjC,OACE,wBAAIC,IAAKD,EAAM1C,QACb,yBAAKwB,UAAU,gBACb,6BAAMkB,EAAM1C,QACZ,kBAAC,IAAD,CAAQwB,UAAU,iBAAiBQ,QAASU,EAAMrC,S,oBCJ3C,SAASuC,EAAUF,GAAQ,IAAD,EACHG,oBAAS,GADN,mBAChCC,EADgC,KACpBC,EADoB,KAEvC,OAAQD,EACN,yBAAKtB,UAAU,cACb,2BAAOA,UAAU,mBAAmBwB,YAAY,qBAAWC,KAAK,OAAOC,WAAY,SAACC,GACpE,UAAVA,EAAER,KAAiBD,EAAMU,OAAOD,MAEtC,yBAAK3B,UAAU,yBAAyBQ,QAAS,WAC/CU,EAAMW,cACNN,GAAeD,KAFjB,SAKF,kBAAC,IAAD,CAAiBtB,UAAU,4BAA4BQ,QAAS,kBAAMe,GAAeD,M,OCb1E,SAASQ,EAAaZ,GACnC,OACE,wBAAIC,IAAKD,EAAM1C,QACb,yBAAKwB,UAAU,gBACb,6BAAMkB,EAAM1C,QACZ,kBAAC,EAAD,CAAWoD,OAAQV,EAAMU,OAAQC,YAAaX,EAAMW,gB,OCN7C,SAASE,EAAeb,GACrC,OAAO,wBAAIC,IAAKD,EAAM1C,QACpB,4BAAQoB,GAAG,SAASI,UAAU,kBAAkBgC,KAAK,SAASC,SAAU,SAACC,GAAD,OAAWhB,EAAMiB,aAAaD,KACpG,4BAAQE,MAAM,GAAGC,UAAQ,GAAzB,gBACA,4BAAQD,MAAM,gBAAd,gBACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,gBAAd,kB,OCLS,SAASE,EAAYpB,GAClC,IAAMqB,EAAcrB,EAAMqB,YAC1B,YAAuBnE,IAAhBmE,GAA6C,OAAhBA,EAClC,uDACA,yBAAKvC,UAAU,eACb,6BACE,4BAAKuC,EAAYP,KAAK,uBAAGlC,KAAM,mCAAqCyC,EAAYP,KAAMQ,OAAO,UAAS,kBAAC,IAAD,CAAiBxC,UAAU,qBACjI,4DAASuC,EAAYE,QACrB,gDAAOF,EAAYG,MACnB,gDAAOH,EAAYI,OACnB,gDAAOJ,EAAYK,UACnB,4DAASL,EAAYpE,gBACrB,gDAAOoE,EAAYA,e,0BCRZ,SAASM,EAAW3B,GACjC,IAAM4B,OAA8B1E,IAAnB8C,EAAM4B,UAA6C,OAAnB5B,EAAM4B,SAAoB,GAAK5B,EAAM4B,SACtF,OAAO,kBAACC,EAAA,EAAD,CAAMC,SAAU,SAACd,GAAWhB,EAAM+B,eAAef,EAAOhB,EAAMtB,MACnE,kBAACmD,EAAA,EAAKG,MAAN,CAAYC,UAAU,QACpB,kBAACJ,EAAA,EAAKK,MAAN,qBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASd,KAAMP,KAAK,WAElD,kBAACsB,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKQ,IAAN,CAAUvD,UAAU,aAClB,kBAACwD,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,gCAAgB,uBAAGtD,KAAM,yBAA0B0C,OAAO,UAAS,kBAAC,IAAD,CAAiBxC,UAAU,qBAAoC,kBAAC+C,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASL,OAAQ7C,GAAG,SAAS6B,KAAK,WACrM,kBAAC+B,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,qBAA2B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASJ,KAAM9C,GAAG,OAAO6B,KAAK,WAC1F,kBAAC+B,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,qBAA2B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASW,OAAQ7D,GAAG,SAAS6B,KAAK,YAEhG,kBAACsB,EAAA,EAAKQ,IAAN,CAAUvD,UAAU,aAClB,kBAACwD,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,qBAA2B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASH,MAAO/C,GAAG,QAAQ6B,KAAK,WAC5F,kBAAC+B,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,uBAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASzE,YAAauB,GAAG,cAAc6B,KAAK,WAC1G,kBAAC+B,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,2BAA4B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASxE,OAAQsB,GAAG,SAAS6B,KAAK,WAC/F,kBAAC+B,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,iCAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAAS3E,eAAgByB,GAAG,iBAAiB6B,KAAK,aAGpH,kBAACsB,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKK,MAAN,qBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASP,YAAa3C,GAAG,cAAc8D,GAAG,WAAWC,KAAK,OAExF,kBAACZ,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKQ,IAAN,CAAUvD,UAAU,aAClB,kBAACwD,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,iCAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASc,MAAOhE,GAAG,QAAQ6B,KAAK,WAC9F,kBAAC+B,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,iCAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASc,MAAOhE,GAAG,eAAe6B,KAAK,WACrG,kBAAC+B,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,iCAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASe,MAAOjE,GAAG,QAAQ6B,KAAK,WAC9F,kBAAC+B,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,iCAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASgB,QAASlE,GAAG,UAAU6B,KAAK,aAGtG,kBAACsB,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKQ,IAAN,CAAUvD,UAAU,aAClB,kBAACwD,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,6CAA+B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAAS5E,WAAY0B,GAAG,aAAa6B,KAAK,WAC1G,kBAAC+B,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,6CAA+B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAAS9E,SAAU4B,GAAG,WAAW6B,KAAK,WACtG,kBAAC+B,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,iCAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASiB,cAAenE,GAAG,gBAAgB6B,KAAK,aAGlH,kBAACuC,EAAA,EAAD,CAAQhE,UAAU,cAAcyB,KAAK,UAArC,iB,OC3BJwC,IAAMC,WAAWC,iBAAoBA,kBACrCF,IAAMG,UAAYD,aAsPHE,MApPf,SAAmBnD,GAAQ,IAAD,EAEQF,IAAMpD,WAAWmD,GAA1CF,EAFiB,EAEjBA,QAEDyD,GAJkB,EAERxD,aAEO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,uCAAU,2BAAQ,KAC1FyD,EAAqB,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,2BAAQ,eAAM,IALhD,EAM0BlD,mBAAS,MANnC,mBAMjBmD,EANiB,KAMEC,EANF,OAOsBpD,oBAAS,GAP/B,mBAOjBqD,EAPiB,KAOAC,EAPA,OAQoBtD,oBAAS,GAR7B,mBAQjBuD,EARiB,KAQDC,EARC,OASoCxD,oBAAS,GAT7C,mBASjByD,EATiB,KASOC,EATP,OAUoB1D,oBAAS,GAV7B,mBAUjB2D,EAViB,KAUDC,EAVC,OAWkB5D,mBAAS,IAX3B,mBAWjB6D,EAXiB,KAWFC,EAXE,OAYQ9D,qBAZR,mBAYjB+D,EAZiB,KAYPC,EAZO,OAa0BhE,mBAAS,gBAbnC,mBAajBiE,EAbiB,KAaEC,EAbF,QAcclE,mBAASR,GAdvB,qBAcjB2E,GAdiB,MAcJC,GAdI,SAegBpE,mBAASiD,GAfzB,qBAejBoB,GAfiB,MAeHC,GAfG,SAgBYtE,mBAAS,IAhBrB,qBAgBjBuE,GAhBiB,MAgBLC,GAhBK,SAiBUxE,qBAjBV,qBAiBjB1C,GAjBiB,MAiBNmH,GAjBM,SAkB0BzE,mBAAS,MAlBnC,qBAkBjB0E,GAlBiB,MAkBEC,GAlBF,MAoBxBC,qBAAU,WAAOH,GAAa,cAAc,IAE5CG,qBAAU,WACRJ,GAAc,IACdK,OACC,CAAChF,EAAMiF,UAAWtF,EAASyE,IAE9BW,qBAAU,WACU,OAAdtH,KACF8G,GAAehH,EAASoC,EAAQe,QAAO,SAACwE,GAAD,OAAYA,EAAO3C,SAAW6B,KAAoB3G,KACzFmH,GAAa,SAEd,CAACnH,GAAWkC,IAEfoF,qBAAU,WACR,GAA0B,IAAtBL,GAAWS,OAAc,CAC3B,IAD4B,IAAD,uCACflF,EADe,KACViB,EADU,KAEzBqD,GAAe5E,EAAQe,QAAO,SAAC0E,GAC7B,OAAOA,EAAKnF,GAAKoF,SAASnE,IAAUkE,EAAK7C,SAAW6B,OAFxD,MAA2BkB,OAAOC,QAAQb,IAA1C,eAAwD,IAKxDC,GAAc,OAEf,CAACD,KAEJ,IAAMM,GAAmB,WACvBT,GAAehH,EAASoC,EAAQe,QAAO,SAACwE,GAAD,OAAYA,EAAO3C,SAAW6B,KAAoB,cAGrFoB,GAAe,SAAC/E,GACpB,IAAMgF,EAAYhF,EAAEa,OAAOoE,UAEzBjB,GADgB,iBAAdgB,EACcpC,EAEAD,GAElBiB,EAAqBoB,IASvB,OAAIzF,EAAMiF,UACD,yBAAKnG,UAAU,WACpB,gEAEOkB,EAAM2F,UACR,kBAACC,EAAA,EAAD,CAAOC,QAAQ,UAAf,0DAIC,yBAAKnH,GAAG,iBACd,kBAACoH,EAAA,EAAD,CAAOC,UAAQ,EAACC,KAAK,KAAKC,KAAMzC,EAAiB0C,OAAQ,kBAAMzC,GAAmB,KAChF,kBAACqC,EAAA,EAAMK,OAAP,KACE,kBAACL,EAAA,EAAMM,MAAP,sBAEF,kBAACN,EAAA,EAAMO,KAAP,KACE,kBAAC,EAAD,CAAahF,YAAaiC,KAE5B,kBAACwC,EAAA,EAAMQ,OAAP,KACE,kBAACxD,EAAA,EAAD,CAAQhE,UAAU,cAAcQ,QAAS,kBAAMmE,GAAmB,KAAlE,kBAKJ,kBAACqC,EAAA,EAAD,CAAOC,UAAQ,EAACC,KAAK,KAAKC,KAAMvC,EAAgBwC,OAAQ,kBAAMvC,GAAkB,KAC9E,kBAACmC,EAAA,EAAMK,OAAP,CAAcI,aAAW,GACzB,kBAACT,EAAA,EAAMM,MAAP,KAActC,EAAiB,iCAAU,6BAEzC,kBAACgC,EAAA,EAAMO,KAAP,KACE,kBAAC,EAAD,CACEtE,eAAgB,SAACf,EAAOtC,GAClBoF,GACF9C,EAAMwF,iBACNxG,EAAMyG,cAAczF,EAAO,MAAM,GACjC2C,GAAkB,KAElB3C,EAAMwF,iBACNxG,EAAMyG,cAAczF,EAAOtC,GAAI,GAC/BiF,GAAkB,KAGtB/B,SAAUiD,GACVnG,GAAIwF,MAIV,kBAAC4B,EAAA,EAAD,CAAOC,UAAQ,EAACC,KAAK,KAAKC,KAAMrC,EAAwBsC,OAAQ,kBAAMrC,GAA0B,KAC9F,kBAACiC,EAAA,EAAMK,OAAP,CAAcI,aAAW,GACvB,kBAACT,EAAA,EAAMM,MAAP,kCAEF,kBAACN,EAAA,EAAMO,KAAP,KACE,qFAAerC,EAAclD,KAA7B,kBAEF,kBAACgF,EAAA,EAAMQ,OAAP,KACE,kBAACxD,EAAA,EAAD,CAAQ+C,QAAQ,UAAUvG,QAAS,WACjC2E,EAAiB,IACjBJ,GAA0B,KAF5B,gBAIA,kBAACf,EAAA,EAAD,CAAQ+C,QAAQ,SAASvG,QAAS,WAChCU,EAAM0G,YAAY1C,EAActF,IAChCuF,EAAiB,IACjBJ,GAA0B,KAH5B,kBAOJ,yBAAK/E,UAAU,gBACb,6BACE,kBAACgE,EAAA,EAAD,CAAQhE,UAAU,cAAcQ,QAASkG,IAAzC,gBACA,kBAAC1C,EAAA,EAAD,CAAQhE,UAAU,cAAcQ,QAASkG,IAAzC,gBACA,kBAAC1C,EAAA,EAAD,CAAQhE,UAAU,cAAcQ,QAASkG,IAAzC,iBAEF,6BACE,kBAAC1C,EAAA,EAAD,CAAQhE,UAAU,cAAcQ,QAAS,WACvCwF,GAAqB,MACrBX,EAAY,MACZR,GAAkB,GAClBI,GAAkB,KAJpB,gBAMA,kBAACjB,EAAA,EAAD,CAAQhE,UAAU,cAAcQ,QAASU,EAAM2G,SAA/C,kBAGJ,6BACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACC,OAAK,EAACf,KAAK,KAAKH,QAAQ,QAAQnH,GAAG,SAC3D,+BACE,wBAAII,UAAU,iBACX0F,GAAawC,KAAI,SAAA1J,GAChB,MAAe,iBAAXA,GAA8B,iBAAXA,EACd,kBAAC,EAAD,CAAcA,OAAQA,EAC3BoD,OAAQ,SAACD,GACP,IAAIwG,EAAgB,GACpB,IAAK,IAAI7B,KAAQV,GACfuC,EAAc7B,GAAQV,GAAWU,GAEnC6B,EAAc5J,EAAgBC,IAAWmD,EAAEa,OAAOJ,MAClDyD,GAAcsC,IAEhBtG,YAAa,WACXgE,GAAc,IACdK,QAGgB,iBAAX1H,EACF,kBAAC,EAAD,CAAgBA,OAAQA,EAAQ2D,aAAc,SAACD,GACpD2D,GAAc,CAAC,OAAU3D,EAAMM,OAAOJ,WAEpB,KAAX5D,EACF,kBAACyC,EAAD,CAAYzC,OAAQA,EAAQK,KAAM,kBAAMiH,GAAavH,EAAgBC,OAErE,kCAKf,+BAEIgH,GAAY0C,KAAI,SAACpK,EAAKsK,GAAN,OACd,wBAAIjH,IAAKrD,EAAIkE,MACX,4BAAKoG,EAAM,GACX,wBAAIpI,UAAU,uBAAuBQ,QAAS,SAACmB,GAC7C8C,EACE,CACEzC,KAAMlE,EAAIkE,KACVS,OAAQ3E,EAAI2E,OACZC,KAAM5E,EAAI4E,KACVC,MAAO7E,EAAI6E,MACXC,SAAU9E,EAAIO,YACdF,eAAgBL,EAAIK,eACpBoE,YAAazE,EAAIyE,cAGrBoC,GAAmB,KACjB7G,EAAIkE,MACR,6BTnMa3D,ESmMOP,EAAIO,YTnMEC,ESmMWR,EAAIQ,YTlMrCF,IAAhBC,QAAwCD,IAAXE,EACxB,GACkB,IAAhBD,EACH,yBAAN,OAAcC,GACM,IAAXA,EACH,GAAN,OAAUD,EAAV,UAEM,GAAN,OAAUA,EAAV,wCAA8BC,KS4LhB,4BAAKR,EAAI6E,OACT,4BAA2B,iBAAtB2C,EAA6BxH,EAAI4E,KAAO5E,EAAI8F,OACjD,4BAA2B,iBAAtB0B,EAA6BxH,EAAI2E,OAAS3E,EAAIuK,cACnD,4BAA2B,iBAAtB/C,EA7IK,SAAC/C,GACzB,GAAoB,OAAhBA,QAAwCnE,IAAhBmE,EAC1B,OAAOA,EAAY+F,UAAU,EAAG,IAAM,SA2IQC,CAAkBzK,EAAIyE,aAAezE,EAAI+F,OACpD,iBAAtByB,EAA6B,GAAK,4BAAKxH,EAAIgG,SACrB,iBAAtBwB,EAA6B,GAAK,4BAAKxH,EAAIsI,QACrB,iBAAtBd,EAA6B,GAAK,6BT9L1BpH,ES8L0CJ,EAAII,WT9LlCF,ES8L8CF,EAAIE,ST7LlFE,EAAWgB,UAEJlB,EAASkB,UAGb,GAAN,OAAUhB,EAAWsK,OAAO,YAA5B,mBAA6CxK,EAASwK,OAAO,aAFvD,GAAN,OAAUtK,EAAWsK,OAAO,cAA5B,gBAFO,KS6L8B,iBAAtBlD,EAA6B,GAAK,6BTrL1BmD,ESqL0C5K,EAAmBC,KTpL1E,GACH4K,KAAKC,MAAMF,EAAO,GAAK,IAAM,GAAK,eAElCC,KAAKC,MAAa,GAAPF,GAAa,GAAK,gBSkLtB,4BAAI,kBAAC,IAAD,CAAWzI,UAAU,YAAYQ,QAAS,WAC5C6E,EAAYvH,EAAI8B,IAChBoG,GAAqB,CACnBhE,KAAMlE,EAAIkE,KACVU,KAAM5E,EAAI4E,KACVD,OAAQ3E,EAAI2E,OACZpE,YAAaP,EAAIO,YACjBC,OAAQR,EAAIQ,OACZH,eAAgBL,EAAIK,eACpBsF,OAAQ3F,EAAI2F,OACZd,MAAO7E,EAAI6E,MACXJ,YAAazE,EAAIyE,YACjBqB,MAAO9F,EAAI8F,MACXyE,aAAcvK,EAAIuK,aAClBxE,MAAO/F,EAAI+F,MACXC,QAAShG,EAAIgG,QACb5F,WAAYJ,EAAII,WAAWsK,OAAO,cAClCxK,SAAUF,EAAIE,SAASwK,OAAO,cAC9BzE,cAAejG,EAAIiG,gBAErBkB,GAAkB,GAClBJ,GAAkB,MAChB,kBAAC,IAAD,CAAS7E,UAAU,iBAAiBQ,QAAS,WAC/C2E,EAAiB,CACfnD,KAAMlE,EAAIkE,KACVpC,GAAI9B,EAAI8B,KAEVmF,GAA0B,QTjNvC,IAAoB0D,EAVAvK,EAAYF,EAZRK,EAAaC,U,OUd7B,SAASsK,IAAS,IAAD,EACAjL,IAAtB0B,EADsB,EACtBA,QAASC,EADa,EACbA,SACXC,EAAUC,cAFc,EAGE6B,mBAAS,IAHX,mBAGvBwH,EAHuB,KAGbC,EAHa,OAIEzH,mBAAS,IAJX,mBAIvB0H,EAJuB,KAIbC,EAJa,KAuB9B,OACE,yBAAKhJ,UAAU,SACb,kBAAC+C,EAAA,EAAD,CAAMC,SAfV,SAAsBd,GACpBA,EAAMwF,iBAEKzD,IAAMgF,KAAKC,MAAML,EAAUE,GAAUI,MAAK,SAASC,IVJpC,SAACC,EAAOD,GACpC3I,eAAe6I,QAAQ,QAASD,GAChC5I,eAAe6I,QAAQ,OAAQC,KAAKC,UAAUJ,IUGxCK,CAAeL,EAAMA,EAAKM,mBAC1BrK,EAAQkK,KAAKC,UAAUJ,IACvB9J,EAAS8J,EAAKM,mBACdnK,EAAQoB,KAAK,QACdgJ,OAAM,SAASC,GACdC,MAAMD,EAAME,cAOZ,kBAAC/G,EAAA,EAAKG,MAAN,CAAYgE,KAAK,KAAK/D,UAAU,YAC9B,kBAACJ,EAAA,EAAKK,MAAN,2BACA,kBAACL,EAAA,EAAKM,QAAN,CACE0G,WAAS,EACTtI,KAAK,WACLW,MAAOyG,EACP5G,SAAU,SAACN,GAAD,OAAOmH,EAAYnH,EAAEa,OAAOJ,WAG1C,kBAACW,EAAA,EAAKG,MAAN,CAAYgE,KAAK,KAAK/D,UAAU,YAC9B,kBAACJ,EAAA,EAAKK,MAAN,qBACA,kBAACL,EAAA,EAAKM,QAAN,CACE5B,KAAK,WACLW,MAAO2G,EACP9G,SAAU,SAACN,GAAD,OAAOqH,EAAYrH,EAAEa,OAAOJ,WAG1C,kBAAC4B,EAAA,EAAD,CAAQhE,UAAU,cAAcgK,OAAK,EAAC9C,KAAK,KAAKzF,KAAK,SAASwI,WApC3DpB,EAASxC,OAAS,GAAK0C,EAAS1C,OAAS,IAoC5C,kB,sCCmIO6D,MA1Kf,WAAgB,IAAD,EACW7I,mBXdH,WACrB,IAAM8I,EAAU1J,eAAe2J,QAAQ,QACvC,OAAID,EAAgBZ,KAAKc,MAAMF,GACnB,KWWqBG,IADpB,mBACNlB,EADM,KACA/J,EADA,OAEagC,mBXPnBZ,eAAe2J,QAAQ,UAAY,MWK7B,mBAENf,EAFM,KAEC/J,EAFD,OAGqB+B,oBAAS,GAH9B,mBAGN8E,EAHM,KAGKoE,EAHL,OAIqBlJ,oBAAS,GAJ9B,mBAINwF,EAJM,KAIK2D,EAJL,OAKiBnJ,mBAAS,IAL1B,mBAKNR,EALM,KAKG4J,EALH,OAM2BpJ,mBAAS,CAC/C,UAAW,CACTW,KAAM,UACNY,SAAU,GACVa,OAAQ,eACRd,MAAO,eACPJ,YAAa,sCAZJ,mBAMNzB,EANM,KAgBP4J,GAhBO,KAgBK,uCAAG,8BAAA5L,EAAA,sDACnByL,GAAa,GACPI,EAAa1G,IAAMuC,OAAOoE,OAAO,YACjCC,EAAQ,IAAI5G,IAAM6G,MAAMH,IACxBI,MAAM,KACZF,EAAMG,OAAO7B,MAAK,SAAC8B,GAEjB,GADAC,QAAQC,IAAI,kBACY,qBAAbC,SAAyB,CAClC,IAAMvK,EAAUoK,EAAQ/C,KAAI,SAACmD,GAC3B,MAAO,CACLzL,GAAIyL,EAAOzL,GACXoC,KAAMqJ,EAAOC,IAAI,QACjB5I,KAAM2I,EAAOC,IAAI,QACjB7I,OAAQ4I,EAAOC,IAAI,UACnBjN,YAAagN,EAAOC,IAAI,eACxBhN,OAAQ+M,EAAOC,IAAI,UACnBnN,eAAgBkN,EAAOC,IAAI,kBAC3B7H,OAAQ4H,EAAOC,IAAI,UACnB3I,MAAO0I,EAAOC,IAAI,SAClB/I,YAAa8I,EAAOC,IAAI,eACxB1H,MAAOyH,EAAOC,IAAI,SAClBjD,aAAcgD,EAAOC,IAAI,gBACzBzH,MAAOwH,EAAOC,IAAI,SAClBxH,QAASuH,EAAOC,IAAI,WACpBlF,OAAQmF,QAAQF,EAAOC,IAAI,SAAWD,EAAOC,IAAI,gBAAkBD,EAAOC,IAAI,SAAWD,EAAOC,IAAI,YAAYE,QAAQ,IACxHtN,WAAYuN,IAAOJ,EAAOC,IAAI,cAAe,cAC7CtN,SAAUyN,IAAOJ,EAAOC,IAAI,YAAa,cACzCvH,cAAesH,EAAOC,IAAI,qBAG9Bb,EAAWhM,EAASoC,EAAS,eAC7B0J,GAAa,OAEd,SAACX,GACFW,GAAa,GACbC,GAAa,GACW,qBAAbY,UAA0BA,SAASM,MAAT,6CAAqDnC,KAAKC,UAAUI,KACzGsB,QAAQtB,MAAM,oCAAqCA,MArClC,2CAAH,sDAyCZ+B,EAAe,uCAAG,WAAOC,GAAP,2BAAA9M,EAAA,sDAGtB,IAFM+M,EAAa5H,IAAMuC,OAAOoE,OAAO,WACjCkB,EAAe,IAAID,EACzB,MAA2BrF,OAAOC,QAAQmF,GAA1C,eAAuD,EAAD,oBAA1CzK,EAA0C,KAArCiB,EAAqC,KACpD0J,EAAaC,IAAI5K,EAAKiB,GAGxB0J,EAAaE,OAAO7C,MAClB,SAACkC,GACCxB,MAAM,wCACNa,OAEF,SAACd,GACCC,MAAM,yEAbY,2CAAH,sDAkBfoC,EAAY,uCAAG,WAAOrM,EAAIgM,GAAX,eAAA9M,EAAA,sDACb6L,EAAa1G,IAAMuC,OAAOoE,OAAO,WACzB,IAAI3G,IAAM6G,MAAMH,GACxBW,IAAI1L,GAAIuJ,MAAK,SAAC+C,GAClB,cAA2B1F,OAAOC,QAAQmF,GAA1C,eAAsD,CAAC,IAAD,sBAA1CzK,EAA0C,KAArCiB,EAAqC,KACpD8J,EAAOH,IAAI5K,EAAKiB,GAElB8J,EAAOF,OAAO7C,MAAK,SAACgD,GAClBtC,MAAM,wCACNa,OACC,SAACd,GACFC,MAAM,4EAXS,2CAAH,wDAgBZjC,EAAW,uCAAG,WAAOhI,GAAP,eAAAd,EAAA,sDACZ6L,EAAa1G,IAAMuC,OAAOoE,OAAO,WACzB,IAAI3G,IAAM6G,MAAMH,GACxBW,IAAI1L,GAAIuJ,MAAK,SAAC+C,GAClBA,EAAOE,UAAUjD,MAAK,SAACgD,GACrBtC,MAAM,wCACNa,OACC,SAACd,GACFC,MAAM,4EARQ,2CAAH,sDA+CjB,OAlCA5D,qBAAU,WACI,MAARmD,GAAyB,MAATC,GAClBqB,MAED,CAACtB,EAAMC,IA+BR,6BACE,yBAAKrJ,UAAU,OACb,kBAACvC,EAAW4O,SAAZ,CAAqBjK,MAAO,CAAEgH,OAAMC,QAAOhK,UAASC,aAClD,kBAAC,IAAD,CAAQgN,SAAU/L,oBAChB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,EAAiB8L,SAAlB,CAA2BjK,MAAO,CAACvB,QAASA,EAASC,aAAcA,IACjE,kBAAC,IAAD,CAAOyL,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,KAEL,MAARnD,GAAyB,MAATC,EAAiB,kBAAC,IAAD,CAAUoD,GAAG,WAC7C,kBAAC,EAAD,CAAWtG,UAAWA,EAAWU,UAAWA,EAAWgB,QAAS6C,EAAc/C,cA1CxE,SAACzF,EAAOtC,EAAI8M,GACpCxK,EAAMwF,iBACN,IAAMiF,EAAezK,EAAMM,OAAOoK,SAC5BhB,EAAY,CAChB,KAAQe,EAAa3K,KAAKI,MAC1B,KAAQuK,EAAajK,KAAKN,MAC1B,OAAUmJ,OAAOoB,EAAalK,OAAOL,OACrC,YAAemJ,OAAOoB,EAAatO,YAAY+D,OAC/C,OAAUmJ,OAAOoB,EAAarO,OAAO8D,OACrC,eAAkBmJ,OAAOoB,EAAaxO,eAAeiE,OACrD,OAAUuK,EAAalJ,OAAOrB,MAC9B,MAASuK,EAAahK,MAAMP,MAC5B,YAAeuK,EAAapK,YAAYH,MACxC,MAASmJ,OAAOoB,EAAa/I,MAAMxB,OACnC,aAAgBmJ,OAAOoB,EAAatE,aAAajG,OACjD,MAASmJ,OAAOoB,EAAa9I,MAAMzB,OACnC,QAAWmJ,OAAOoB,EAAa7I,QAAQ1B,OACvC,WAAcuK,EAAazO,WAAWkE,MACtC,SAAYuK,EAAa3O,SAASoE,MAClC,cAAiBmJ,OAAOoB,EAAa5I,cAAc3B,QAEjDsK,EACFf,EAAgBC,GAEhBK,EAAarM,EAAIgM,IAkB+GhE,YAAaA,KAGnI,kBAAC,IAAD,CAAO2E,KAAK,UACV,yBAAKvM,UAAU,WAAf,uBAEF,kBAAC,IAAD,CAAOuM,KAAK,aACZ,yBAAKvM,UAAU,WAAf,8BCjKI6M,QACW,cAA7B3M,OAAOC,SAAS2M,UAEe,UAA7B5M,OAAOC,SAAS2M,UAEhB5M,OAAOC,SAAS2M,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9B,SAAS+B,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnE,MAAK,SAAAoE,GACJA,EAAaC,gBAEd7D,OAAM,SAAAC,GACLsB,QAAQtB,MAAMA,EAAME,a","file":"static/js/main.a51ac8cc.chunk.js","sourcesContent":["module.exports = {\n    APPLICATION_ID: '54T0X4tWovUBdnRd6EKdW3BrN4WJrpGBEJdwDk9J',\n    JAVASCRIPT_KEY: 'WREbi60D2GfVknGhH9Je1GJ931oIhIVkHUXD9u5R',\n    SERVER_URL: 'https://parseapi.back4app.com/'\n}","import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}","// return the user data from the session storage\nexport const getUser = () => {\n  const userStr = sessionStorage.getItem('user');\n  if (userStr) return JSON.parse(userStr);\n  else return null;\n}\n \n// return the token from the session storage\nexport const getToken = () => {\n  return sessionStorage.getItem('token') || null;\n}\n \n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('token');\n  sessionStorage.removeItem('user');\n}\n \n// set the token and user from the session storage\nexport const setUserSession = (token, user) => {\n  sessionStorage.setItem('token', token);\n  sessionStorage.setItem('user', JSON.stringify(user));\n}\n\nexport function formatEpisodes(tv_episodes, movies) {\n  if (tv_episodes === undefined || movies === undefined) {\n    return \"\";\n  } else if (tv_episodes === 0) {\n    return `剧场版×${movies}`;\n  } else if (movies === 0) {\n    return `${tv_episodes}集`;\n  } else {\n    return `${tv_episodes}集+剧场版×${movies}`;\n  }\n}\n\nexport function formatDate(start_date, end_date) {\n  if (!start_date.isValid()) {\n    return \"\"\n  } else if (!end_date.isValid()) {\n    return `${start_date.format('YYYY-MM-DD')}至今`;\n  } else {\n    return `${start_date.format('MM/DD/YY')} 至 ${end_date.format('MM/DD/YY')}`;\n  }\n}\n\nexport function formatTime(time) {\n  if (time >= 60) {\n    return Math.round(time / 60 * 10) / 10 + \"小时\";\n  } else {\n    return Math.round(time * 10) / 10 + \"分钟\";\n  }\n}\n\nexport function calculateDailyTime(row) {\n  const days = row.end_date.diff(row.start_date, 'days') + 1;\n  const episode_length = row.episode_length === undefined || row.episode_length === 0 ? 24 : row.episode_length;\n  const totalTime = row.tv_episodes * episode_length + row.movies * 90;\n  return totalTime / days;\n}\n\nexport function translateHeader(header) {\n  switch(header) {\n    case '名称':\n      return 'name';\n    case '集数':\n      return 'tv_episodes';\n    case '状态':\n      return 'status';\n    case '分类':\n      return 'genre';\n    case '剧情':\n      return 'story';\n    case '作画':\n      return 'illustration';\n    case '音乐':\n      return 'music';\n    case '情怀':\n      return 'passion';\n    case '评分':\n      return 'rating';\n    case '首次观看日期':\n      return 'end_date';\n    case '观看次数':\n      return 'times_watched';\n    case '年份':\n      return 'year';\n    case '豆瓣评分':\n      return 'douban';\n    case '日均时长':\n      return 'daily_time';\n    default:\n      return 'unknown';\n  }\n}\n\nexport function sortList(rawList, sortedCol) {\n  return rawList.slice().sort((a, b) => {\n    const aQuantity = sortedCol === \"daily_time\" ? calculateDailyTime(a) : a[sortedCol];\n    const bQuantity = sortedCol === \"daily_time\" ? calculateDailyTime(b) : b[sortedCol];\n    if (sortedCol === \"start_date\") {\n      if (!aQuantity.isValid()) {\n        return 1;\n      } else if (!bQuantity.isValid()) {\n        return -1;\n      } else {\n        return compare(aQuantity, bQuantity);\n      }\n    } else {\n      return compare(aQuantity, bQuantity);\n    }\n  });\n}\n\nfunction compare(a, b) {\n  if (a > b) {\n    return -1;\n  } else if (a < b) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { useAppContext } from \"../Utils/AppContext\";\nimport { removeUserSession } from \"../utils\";\nimport './Navigation.css';\nimport '../App.css';\n\nfunction Navigation() {\n  const { setUser, setToken } = useAppContext();\n  const history = useHistory();\n\n  const handleSignOut = () => {\n    setUser(null);\n    setToken(null);\n    removeUserSession();\n    history.push(\"/login\");\n  };\n\n  return (\n    <Navbar sticky=\"top\" expand=\"lg\" id=\"navbar\">\n      <Navbar.Brand href=\"/\">追番补番</Navbar.Brand>\n      <Nav className=\"mr-auto\" activeKey={window.location.pathname}>\n        <Nav.Item><Nav.Link href={process.env.PUBLIC_URL + \"/\"}>我的列表</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link href=\"/today\">今日更新</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link href=\"/calendar\">看番日历</Nav.Link></Nav.Item>\n      </Nav>\n    <div id=\"signout\" className=\"clickable\" onClick={handleSignOut}>注销</div>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\n\nconst animeData = {\n  ratings: [],\n  descriptions: {}\n}\n\nconst AnimeDataContext = React.createContext(animeData);\n\nexport default AnimeDataContext;","import React from 'react';\nimport { BiSort } from \"react-icons/bi\";\nimport '../App.css';\n\nexport default function SortHeader(props) {\n  return (\n    <th key={props.header}>\n      <div className='table-header'>\n        <div>{props.header}</div>\n        <BiSort className='icon clickable' onClick={props.sort}/>\n      </div>\n    </th>\n  );\n}","import React, { useState } from 'react';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './FilterBox.css';\nimport '../App.css';\n\nexport default function FilterBox(props) {\n  const [displayBox, setDisplayBox] = useState(false);\n  return (displayBox ? \n    <div className=\"filter-box\">\n      <input className=\"filter-input-box\" placeholder=\"输入......\" type=\"text\" onKeyPress={(e) => {\n        if (e.key === \"Enter\") props.filter(e);\n      }}/>\n      <div className=\"close-button clickable\" onClick={() => {\n        props.clearFilter();\n        setDisplayBox(!displayBox)\n      }}>&times;</div>\n    </div> :\n    <AiOutlineSearch className=\"filter-box icon clickable\" onClick={() => setDisplayBox(!displayBox)}/>);\n}\n","import React from 'react';\nimport FilterBox from './FilterBox';\nimport './FilterHeader.css';\n\nexport default function FilterHeader(props) {\n  return (\n    <th key={props.header}>\n      <div className='table-header'>\n        <div>{props.header}</div>\n        <FilterBox filter={props.filter} clearFilter={props.clearFilter}/>\n      </div>\n    </th>\n  );\n}","import React from 'react';\nimport './DropdownHeader.css';\n\nexport default function DropdownHeader(props) {\n  return <th key={props.header}>\n    <select id=\"status\" className=\"dropdown-header\" name=\"status\" onChange={(event) => props.filterStatus(event)}>\n      <option value=\"\" selected>状态</option>\n      <option value=\"想看\">想看</option>\n      <option value=\"在看\">在看</option>\n      <option value=\"已看\">已看</option>\n    </select>\n  </th>\n};","import React from 'react';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './Description.css';\n\nexport default function Description(props) {\n  const description = props.description;\n  return description === undefined || description === null ? \n    <p>暂无简介</p> :\n    <div className=\"description\">\n      <div>\n        <h1>{description.name}<a href={\"https://www.douban.com/search?q=\" + description.name} target=\"_blank\"><AiOutlineSearch className=\"icon clickable\" /></a></h1>\n        <p>豆瓣评分：{description.douban}</p>\n        <p>年份：{description.year}</p>\n        <p>分类：{description.genre}</p>\n        <p>集数：{description.episodes}</p>\n        <p>单集片长：{description.episode_length}</p>\n        <p>简介：{description.description}</p>\n      </div>\n    </div>;\n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './AnimeModal.css';\nimport '../App.css';\n\nexport default function AnimeModal(props) {\n  const oldValue = props.oldValue === undefined || props.oldValue === null ? {} : props.oldValue;\n  return <Form onSubmit={(event) => {props.onSubmitOrEdit(event, props.id)}}>\n    <Form.Group controlId=\"name\">\n      <Form.Label>名称</Form.Label>\n      <Form.Control defaultValue={oldValue.name} type=\"input\" />\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>豆瓣评分<a href={\"https://www.douban.com\"} target=\"_blank\"><AiOutlineSearch className=\"icon clickable\" /></a></Form.Label><Form.Control defaultValue={oldValue.douban} id=\"douban\" type=\"input\"/></Col>\n        <Col><Form.Label>年份</Form.Label><Form.Control defaultValue={oldValue.year} id=\"year\" type=\"input\"/></Col>\n        <Col><Form.Label>状态</Form.Label><Form.Control defaultValue={oldValue.status} id=\"status\" type=\"input\"/></Col>\n      </Form.Row>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>分类</Form.Label><Form.Control defaultValue={oldValue.genre} id=\"genre\" type=\"input\"/></Col>\n        <Col><Form.Label>TV集数</Form.Label><Form.Control defaultValue={oldValue.tv_episodes} id=\"tv_episodes\" type=\"input\"/></Col>\n        <Col><Form.Label>剧场版</Form.Label><Form.Control defaultValue={oldValue.movies} id=\"movies\" type=\"input\"/></Col>\n        <Col><Form.Label>单集片长</Form.Label><Form.Control defaultValue={oldValue.episode_length} id=\"episode_length\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Form.Group>\n      <Form.Label>简介</Form.Label>\n      <Form.Control defaultValue={oldValue.description} id=\"description\" as=\"textarea\" rows=\"3\" />\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>剧情评分</Form.Label><Form.Control defaultValue={oldValue.story} id=\"story\" type=\"input\"/></Col>\n        <Col><Form.Label>作画评分</Form.Label><Form.Control defaultValue={oldValue.story} id=\"illustration\" type=\"input\"/></Col>\n        <Col><Form.Label>音乐评分</Form.Label><Form.Control defaultValue={oldValue.music} id=\"music\" type=\"input\"/></Col>\n        <Col><Form.Label>情怀评分</Form.Label><Form.Control defaultValue={oldValue.passion} id=\"passion\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>开始观看日期</Form.Label><Form.Control defaultValue={oldValue.start_date} id=\"start_date\" type=\"input\"/></Col>\n        <Col><Form.Label>结束观看日期</Form.Label><Form.Control defaultValue={oldValue.end_date} id=\"end_date\" type=\"input\"/></Col>\n        <Col><Form.Label>观看次数</Form.Label><Form.Control defaultValue={oldValue.times_watched} id=\"times_watched\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Button className=\"pink-button\" type=\"submit\">\n      提交\n    </Button>\n\n  </Form>\n}\n","import React, { useState, useEffect } from 'react';\nimport Parse from 'parse';\nimport * as Env from \"../environments\";\nimport AnimeDataContext from '../Context/AnimeDataContext';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport { BiEditAlt, BiTrash } from \"react-icons/bi\";\nimport SortHeader from './SortHeader';\nimport FilterHeader from './FilterHeader';\nimport DropdownHeader from './DropdownHeader';\nimport Description from './Description';\nimport AnimeModal from './AnimeModal';\nimport { sortList, formatEpisodes, formatDate, translateHeader, calculateDailyTime, formatTime } from \"../utils\";\nimport '../App.css';\nimport './AnimeList.css';\n\n\n\nParse.initialize(Env.APPLICATION_ID, Env.JAVASCRIPT_KEY);\nParse.serverURL = Env.SERVER_URL;\n\nfunction AnimeList(props) {\n  \n  const {ratings, descriptions} = React.useContext(AnimeDataContext);\n\n  const watchedHeaders = ['序号', '名称', '集数', '分类', '剧情', '作画', '音乐', '情怀', '评分', '首次观看日期', '日均时长', ''];\n  const wantToWatchHeaders = ['序号', '名称', '集数', '分类', '年份', '豆瓣评分', '简介', ''];\n  const [activeDescription, setActiveDescription] = useState(null);\n  const [showDescription, setShowDescription] = useState(false);\n  const [showAnimeModal, setShowAnimeModal] = useState(false);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [submitNewAnime, setSubmitNewAnime] = useState(false);\n  const [animeToDelete, setAnimeToDelete] = useState({});\n  const [activeId, setActiveId] = useState();\n  const [displayListStatus, setDisplayListStatus] = useState(\"已看\");\n  const [displayList, setDisplayList] = useState(ratings);\n  const [tableHeaders, setTableHeaders] = useState(watchedHeaders);\n  const [filterList, setFilterList] = useState({});\n  const [sortedCol, setSortedCol] = useState();\n  const [editAnimeOldValue, setEditAnimeOldValue] = useState(null);\n\n  useEffect(() => {setSortedCol(\"end_date\")}, []);\n\n  useEffect(() => {\n    setFilterList([]);\n    resetDisplayList();\n  }, [props.isLoading, ratings, displayListStatus]);\n\n  useEffect(() => {\n    if (sortedCol !== null) {\n      setDisplayList(sortList(ratings.filter((rating) => rating.status === displayListStatus), sortedCol));\n      setSortedCol(null);\n    }\n  }, [sortedCol, ratings]);\n\n  useEffect(() => {\n    if (filterList.length !== 0) {\n      for (const [key, value] of Object.entries(filterList)) {\n        setDisplayList(ratings.filter((item) => {\n          return item[key].includes(value) && item.status === displayListStatus;\n        }));\n      }\n      setFilterList([]);\n    }\n  }, [filterList]);\n\n  const resetDisplayList = () => {\n    setDisplayList(sortList(ratings.filter((rating) => rating.status === displayListStatus), \"end_date\"));\n  }\n\n  const changeStatus = (e) => {\n    const newStatus = e.target.innerHTML;\n    if (newStatus === '想看') {\n      setTableHeaders(wantToWatchHeaders);\n    } else {\n      setTableHeaders(watchedHeaders);\n    }\n    setDisplayListStatus(newStatus);\n  }\n\n  const formatDescription = (description) => {\n    if (description !== null && description !== undefined) {\n      return description.substring(0, 20) + '......';\n    }\n  }\n\n  if (props.isLoading) {\n    return <div className=\"loading\">\n      <div>正在加载......</div>\n    </div> ;\n  } else if (props.loadError) {\n    return <Alert variant='danger'>\n      番剧评分加载失败！\n    </Alert>;\n  } else {\n    return (<div id=\"table-wrapper\">\n      <Modal centered size='lg' show={showDescription} onHide={() => setShowDescription(false)}>\n        <Modal.Header>\n          <Modal.Title>简介</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Description description={activeDescription}/>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button className=\"pink-button\" onClick={() => setShowDescription(false)}>\n            关闭\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal centered size='lg' show={showAnimeModal} onHide={() => setShowAnimeModal(false)}>\n        <Modal.Header closeButton>\n        <Modal.Title>{submitNewAnime ? \"添加新番剧\" : \"编辑番剧\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AnimeModal\n            onSubmitOrEdit={(event, id) => {\n              if (submitNewAnime) {\n                event.preventDefault();\n                props.onAnimeSubmit(event, null, true);\n                setShowAnimeModal(false);\n              } else {\n                event.preventDefault();\n                props.onAnimeSubmit(event, id, false);\n                setShowAnimeModal(false);\n              }\n            }}\n            oldValue={editAnimeOldValue}\n            id={activeId}\n          />\n        </Modal.Body>\n      </Modal>\n      <Modal centered size=\"sm\" show={showDeleteConfirmation} onHide={() => setShowDeleteConfirmation(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>删除番剧</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{`确定要删除番剧“${animeToDelete.name}”吗`}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => {\n            setAnimeToDelete({});\n            setShowDeleteConfirmation(false);\n          }}>取消</Button>\n          <Button variant=\"danger\" onClick={() => {\n            props.deleteAnime(animeToDelete.id);\n            setAnimeToDelete({});\n            setShowDeleteConfirmation(false);\n          }}>确定</Button>\n        </Modal.Footer>\n      </Modal>\n      <div className=\"button-group\">\n        <div>\n          <Button className=\"pink-button\" onClick={changeStatus}>已看</Button>\n          <Button className=\"pink-button\" onClick={changeStatus}>在看</Button>\n          <Button className=\"pink-button\" onClick={changeStatus}>想看</Button>\n        </div>\n        <div>\n          <Button className=\"pink-button\" onClick={() => {\n            setEditAnimeOldValue(null);\n            setActiveId(null);\n            setShowAnimeModal(true);\n            setSubmitNewAnime(true);\n          }}>添加</Button>\n          <Button className=\"pink-button\" onClick={props.refresh}>刷新</Button>\n        </div>\n      </div>\n      <div>\n        <Table striped borderless hover size=\"sm\" variant=\"light\" id=\"table\">\n          <thead>\n            <tr className='table-headers'>\n              {tableHeaders.map(header => {\n                if (header === '名称' || header === '分类') {\n                  return <FilterHeader header={header}\n                    filter={(e) => {\n                      let newFilterList = {};\n                      for (let item in filterList) {\n                        newFilterList[item] = filterList[item];\n                      }\n                      newFilterList[translateHeader(header)] = e.target.value;\n                      setFilterList(newFilterList);\n                    }}\n                    clearFilter={() => {\n                      setFilterList([]);\n                      resetDisplayList();\n                    }}\n                  />;\n                } else if (header === '状态') {\n                  return <DropdownHeader header={header} filterStatus={(event) => {\n                    setFilterList({\"status\": event.target.value});\n                  }}/>\n                } else if (header !== ''){\n                  return <SortHeader header={header} sort={() => setSortedCol(translateHeader(header))}/>;\n                } else {\n                  return <th></th>\n                }\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {\n              displayList.map((row, idx) =>\n                <tr key={row.name}>\n                  <td>{idx + 1}</td>\n                  <td className='anime-name clickable' onClick={(e) => {\n                    setActiveDescription(\n                      {\n                        name: row.name,\n                        douban: row.douban,\n                        year: row.year,\n                        genre: row.genre,\n                        episodes: row.tv_episodes,\n                        episode_length: row.episode_length,\n                        description: row.description,\n                      }\n                    );\n                    setShowDescription(true);\n                  }}>{row.name}</td>\n                  <td>{formatEpisodes(row.tv_episodes, row.movies)}</td>\n                  <td>{row.genre}</td>\n                  <td>{displayListStatus === '想看' ? row.year : row.story}</td>\n                  <td>{displayListStatus === '想看' ? row.douban : row.illustration}</td>\n                  <td>{displayListStatus === '想看' ? formatDescription(row.description) : row.music}</td>\n                  {displayListStatus === '想看' ? \"\" : <td>{row.passion}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{row.rating}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{formatDate(row.start_date, row.end_date)}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{formatTime(calculateDailyTime(row))}</td>}\n                  <td><BiEditAlt className=\"clickable\" onClick={() => {\n                    setActiveId(row.id);\n                    setEditAnimeOldValue({\n                      name: row.name,\n                      year: row.year,\n                      douban: row.douban,\n                      tv_episodes: row.tv_episodes,\n                      movies: row.movies,\n                      episode_length: row.episode_length,\n                      status: row.status,\n                      genre: row.genre,\n                      description: row.description,\n                      story: row.story,\n                      illustration: row.illustration,\n                      music: row.music,\n                      passion: row.passion,\n                      start_date: row.start_date.format('YYYY-MM-DD'),\n                      end_date: row.end_date.format('YYYY-MM-DD'),\n                      times_watched: row.times_watched,\n                    });\n                    setSubmitNewAnime(false);\n                    setShowAnimeModal(true);\n                  }}/><BiTrash className=\"icon clickable\" onClick={() => {\n                    setAnimeToDelete({\n                      name: row.name,\n                      id: row.id,\n                    });\n                    setShowDeleteConfirmation(true);\n                  }}/></td>\n                </tr>)\n            }\n          </tbody>\n        </Table>\n      </div>\n    </div>);\n  }\n}\n\n\nexport default AnimeList;","import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport Form from \"react-bootstrap/Form\";\nimport Parse from 'parse';\nimport Button from \"react-bootstrap/Button\";\nimport { useAppContext } from \"../Utils/AppContext\";\nimport { setUserSession } from \"../utils\";\nimport \"./Login.css\";\nimport \"../App.css\";\n\nexport default function Login() {\n  const { setUser, setToken } = useAppContext();\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    // Create a new instance of the user class\n    var user = Parse.User.logIn(username, password).then(function(user) {\n        setUserSession(user, user.getSessionToken());\n        setUser(JSON.stringify(user));\n        setToken(user.getSessionToken());\n        history.push(\"/\");\n    }).catch(function(error){\n        alert(error.message);\n    });\n  }\n\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"username\">\n          <Form.Label>用户名</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>密码</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button className=\"pink-button\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n          登陆\n        </Button>\n      </Form>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport Navivation from './components/Navigation';\nimport AnimeDataContext from './Context/AnimeDataContext';\nimport AnimeList from './components/AnimeList';\nimport Login from \"./components/Login\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect } from 'react-router'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AppContext } from \"./Utils/AppContext\";\nimport { sortList, getUser, getToken } from \"./utils\";\nimport Parse from 'parse';\nimport moment from 'moment';\nimport './App.css';\n\nfunction App() {\n  const [user, setUser] = useState(getUser());\n  const [token, setToken] = useState(getToken());\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n  const [ratings, setRatings] = useState([]);\n  const [descriptions, setDescriptions] = useState({\n    \"Anime 1\": {\n      name: \"Anime 1\",\n      episodes: 42,\n      status: \"已看\",\n      genre: \"恋爱\",\n      description: \"This is a description the anime.\"\n    }\n  });\n\n  const fetchRatings = async () => {\n    setIsLoading(true);\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.limit(1000);\n    query.find().then((results) => {\n      console.log(\"calling server\");\n      if (typeof document !== 'undefined'){\n        const ratings = results.map((result) => {\n          return {\n            id: result.id,\n            name: result.get(\"name\"),\n            year: result.get(\"year\"),\n            douban: result.get(\"douban\"),\n            tv_episodes: result.get(\"tv_episodes\"),\n            movies: result.get(\"movies\"),\n            episode_length: result.get(\"episode_length\"),\n            status: result.get(\"status\"),\n            genre: result.get(\"genre\"),\n            description: result.get(\"description\"),\n            story: result.get(\"story\"),\n            illustration: result.get(\"illustration\"),\n            music: result.get(\"music\"),\n            passion: result.get(\"passion\"),\n            rating: Number((result.get(\"story\") + result.get(\"illustration\") + result.get(\"music\") + result.get(\"passion\")).toFixed(1)),\n            start_date: moment(result.get(\"start_date\"), 'YYYY-MM-DD'),\n            end_date: moment(result.get(\"end_date\"), 'YYYY-MM-DD'),\n            times_watched: result.get(\"times_watched\"),\n          }}\n        );\n        setRatings(sortList(ratings, \"start_date\"));\n        setIsLoading(false);\n      }\n    }, (error) => {\n      setIsLoading(false);\n      setLoadError(true);\n      if (typeof document !== 'undefined') document.write(`Error while fetching ParseObjects: ${JSON.stringify(error)}`);\n      console.error('Error while fetching ParseObjects', error);\n    });\n  };\n\n  const submitNewRating = async (newRating) => {\n    const RatingsObj = Parse.Object.extend('Ratings');\n    const newRatingObj = new RatingsObj();\n    for (const [key, value] of Object.entries(newRating)) {\n      newRatingObj.set(key, value)\n    }\n\n    newRatingObj.save().then(\n      (result) => {\n        alert(\"已提交更新！\");\n        fetchRatings();\n      },\n      (error) => {\n        alert(\"更新失败，请稍后重试。\");\n      }\n    );\n  };\n\n  const updateRating = async (id, newRating) => {\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.get(id).then((object) => {\n      for (const [key, value] of Object.entries(newRating)) {\n        object.set(key, value)\n      }\n      object.save().then((response) => {\n        alert(\"已提交更新！\");\n        fetchRatings();\n      }, (error) => {\n        alert(\"更新失败，请稍后重试。\");\n      });\n    });\n  };\n  \n  const deleteAnime = async (id) => {\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.get(id).then((object) => {\n      object.destroy().then((response) => {\n        alert(\"已删除番剧！\");\n        fetchRatings();\n      }, (error) => {\n        alert(\"删除失败，请稍后重试。\");\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (user != null && token != null) {\n      fetchRatings();\n    }\n  }, [user, token])\n\n  const handleAnimeSubmit = (event, id, isNew) => {\n    event.preventDefault();\n    const formElements = event.target.elements;\n    const newRating = {\n      \"name\": formElements.name.value,\n      \"year\": formElements.year.value,\n      \"douban\": Number(formElements.douban.value),\n      \"tv_episodes\": Number(formElements.tv_episodes.value),\n      \"movies\": Number(formElements.movies.value),\n      \"episode_length\": Number(formElements.episode_length.value),\n      \"status\": formElements.status.value,\n      \"genre\": formElements.genre.value,\n      \"description\": formElements.description.value,\n      \"story\": Number(formElements.story.value),\n      \"illustration\": Number(formElements.illustration.value),\n      \"music\": Number(formElements.music.value),\n      \"passion\": Number(formElements.passion.value),\n      \"start_date\": formElements.start_date.value,\n      \"end_date\": formElements.end_date.value,\n      \"times_watched\": Number(formElements.times_watched.value),\n    };\n    if (isNew) {\n      submitNewRating(newRating);\n    } else {\n      updateRating(id, newRating);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"App\">\n        <AppContext.Provider value={{ user, token, setUser, setToken }}>\n          <Router basename={process.env.PUBLIC_URL}>\n            <Navivation />\n            <Switch>\n              <AnimeDataContext.Provider value={{ratings: ratings, descriptions: descriptions}}>\n                <Route path=\"/login\">\n                  <Login />\n                </Route>\n                <Route exact path=\"/\">\n                  {\n                    (user == null && token == null) ? <Redirect to=\"/login\" /> :\n                      <AnimeList isLoading={isLoading} loadError={loadError} refresh={fetchRatings} onAnimeSubmit={handleAnimeSubmit} deleteAnime={deleteAnime}/>\n                  }\n                </Route>\n                <Route path=\"/today\">\n                  <div className=\"loading\">开发中</div>\n                </Route>\n                <Route path=\"/calendar\">\n                <div className=\"loading\">开发中</div>\n                </Route>\n              </AnimeDataContext.Provider>\n            </Switch>\n          </Router>\n        </AppContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}