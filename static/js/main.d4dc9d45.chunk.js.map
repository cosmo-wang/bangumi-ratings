{"version":3,"sources":["environments.js","Utils/AppContext.js","utils.js","components/Navigation.js","Context/AnimeDataContext.jsx","components/SortHeader.js","components/FilterBox.js","components/FilterHeader.js","components/DropdownHeader.js","components/Description.js","components/AnimeModal.js","components/AnimeList.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APPLICATION_ID","JAVASCRIPT_KEY","SERVER_URL","AppContext","createContext","useAppContext","useContext","translateHeader","header","sortList","rawList","sortedCol","slice","sort","a","b","isValid","compare","Navigation","props","setUser","setToken","setAuthenticated","history","useHistory","Navbar","sticky","expand","id","Brand","href","Nav","className","activeKey","window","location","pathname","Item","Link","onClick","sessionStorage","removeItem","push","AnimeDataContext","React","ratings","descriptions","SortHeader","key","FilterBox","useState","displayBox","setDisplayBox","placeholder","type","onKeyPress","e","filter","clearFilter","FilterHeader","DropdownHeader","name","onChange","event","filterStatus","value","selected","Description","description","undefined","target","douban","year","genre","episodes","episode_length","AnimeModal","oldValue","Form","onSubmit","onSubmitOrEdit","Group","controlId","Label","Control","defaultValue","Row","Col","status","tv_episodes","movies","as","rows","story","music","passion","start_date","end_date","times_watched","Button","Parse","initialize","Env","serverURL","AnimeList","watchedHeaders","wantToWatchHeaders","activeDescription","setActiveDescription","showDescription","setShowDescription","showAnimeModal","setShowAnimeModal","showDeleteConfirmation","setShowDeleteConfirmation","submitNewAnime","setSubmitNewAnime","animeToDelete","setAnimeToDelete","activeId","setActiveId","displayListStatus","setDisplayListStatus","displayList","setDisplayList","tableHeaders","setTableHeaders","filterList","setFilterList","setSortedCol","editAnimeOldValue","setEditAnimeOldValue","useEffect","rating","isLoading","length","item","includes","Object","entries","changeStatus","newStatus","innerHTML","loadError","Alert","variant","Modal","centered","size","show","onHide","Header","Title","Body","Footer","closeButton","preventDefault","onAnimeSubmit","deleteAnime","refresh","Table","striped","borderless","hover","map","newFilterList","row","idx","illustration","substring","formatDescription","format","Login","username","setUsername","password","setPassword","User","logIn","then","user","token","setItem","JSON","stringify","setUserSession","getSessionToken","catch","error","alert","message","autoFocus","block","disabled","App","authenticated","userStr","getItem","parse","getUser","setIsLoading","setLoadError","setRatings","fetchRatings","ratingsObj","extend","query","Query","limit","find","results","console","log","document","result","get","Number","toFixed","moment","write","submitNewRating","newRating","RatingsObj","newRatingObj","set","save","updateRating","object","response","destroy","Provider","basename","process","path","isNew","formElements","elements","to","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iIAAAA,EAAOC,QAAU,CACbC,eAAgB,2CAChBC,eAAgB,2CAChBC,WAAY,mC,koBCDHC,EAAaC,wBAAc,MAEjC,SAASC,IACd,OAAOC,qBAAWH,GCyCb,SAASI,EAAgBC,GAC9B,OAAOA,GACL,IAAK,eACH,MAAO,OACT,IAAK,eACH,MAAO,cACT,IAAK,eACH,MAAO,SACT,IAAK,eACH,MAAO,QACT,IAAK,eACH,MAAO,QACT,IAAK,eACH,MAAO,eACT,IAAK,eACH,MAAO,QACT,IAAK,eACH,MAAO,UACT,IAAK,eACH,MAAO,SACT,IAAK,uCACH,MAAO,aACT,IAAK,2BACH,MAAO,gBACT,QACE,MAAO,WAIN,SAASC,EAASC,EAASC,GAChC,OAAOD,EAAQE,QAAQC,MAAK,SAACC,EAAGC,GAC9B,MAAkB,eAAdJ,EACGG,EAAEH,GAAWK,UAEND,EAAEJ,GAAWK,UAGhBC,EAAQH,EAAEH,GAAYI,EAAEJ,KAFvB,EAFD,EAOFM,EAAQH,EAAEH,GAAYI,EAAEJ,OAKrC,SAASM,EAAQH,EAAGC,GAClB,OAAID,EAAIC,GACE,EACCD,EAAIC,EACN,EAEA,E,cC/DIG,MAzBf,SAAoBC,GAAQ,IAAD,EACuBd,IAAxCe,EADiB,EACjBA,QAASC,EADQ,EACRA,SAAUC,EADF,EACEA,iBACrBC,EAAUC,cAUhB,OACE,kBAACC,EAAA,EAAD,CAAQC,OAAO,MAAMC,OAAO,KAAKC,GAAG,UAClC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,KAAnB,4BACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,UAAUC,UAAWC,OAAOC,SAASC,UAClD,kBAACL,EAAA,EAAIM,KAAL,KAAU,kBAACN,EAAA,EAAIO,KAAL,CAAUR,KAAK,WAAf,6BACV,kBAACC,EAAA,EAAIM,KAAL,KAAU,kBAACN,EAAA,EAAIO,KAAL,CAAUR,KAAK,YAAf,6BACV,kBAACC,EAAA,EAAIM,KAAL,KAAU,kBAACN,EAAA,EAAIO,KAAL,CAAUR,KAAK,eAAf,8BAEd,yBAAKF,GAAG,UAAUI,UAAU,YAAYO,QAhBpB,WACpBnB,EAAQ,MACRC,EAAS,MACTC,GAAiB,GDFnBkB,eAAeC,WAAW,SAC1BD,eAAeC,WAAW,QCGxBlB,EAAQmB,KAAK,YAWb,cCpBWC,EAFUC,IAAMxC,cALb,CAChByC,QAAS,GACTC,aAAc,K,qECAD,SAASC,EAAW5B,GACjC,OACE,wBAAI6B,IAAK7B,EAAMX,QACb,yBAAKwB,UAAU,gBACb,6BAAMb,EAAMX,QACZ,kBAAC,IAAD,CAAQwB,UAAU,iBAAiBO,QAASpB,EAAMN,S,oBCJ3C,SAASoC,EAAU9B,GAAQ,IAAD,EACH+B,oBAAS,GADN,mBAChCC,EADgC,KACpBC,EADoB,KAEvC,OAAQD,EACN,yBAAKnB,UAAU,cACb,2BAAOA,UAAU,mBAAmBqB,YAAY,qBAAWC,KAAK,OAAOC,WAAY,SAACC,GACpE,UAAVA,EAAER,KAAiB7B,EAAMsC,OAAOD,MAEtC,yBAAKxB,UAAU,yBAAyBO,QAAS,WAC/CpB,EAAMuC,cACNN,GAAeD,KAFjB,SAKF,kBAAC,IAAD,CAAiBnB,UAAU,4BAA4BO,QAAS,kBAAMa,GAAeD,M,OCb1E,SAASQ,EAAaxC,GACnC,OACE,wBAAI6B,IAAK7B,EAAMX,QACb,yBAAKwB,UAAU,gBACb,6BAAMb,EAAMX,QACZ,kBAAC,EAAD,CAAWiD,OAAQtC,EAAMsC,OAAQC,YAAavC,EAAMuC,gB,OCN7C,SAASE,EAAezC,GACrC,OAAO,wBAAI6B,IAAK7B,EAAMX,QACpB,4BAAQoB,GAAG,SAASI,UAAU,kBAAkB6B,KAAK,SAASC,SAAU,SAACC,GAAD,OAAW5C,EAAM6C,aAAaD,KACpG,4BAAQE,MAAM,GAAGC,UAAQ,GAAzB,gBACA,4BAAQD,MAAM,gBAAd,gBACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,gBAAd,kB,OCLS,SAASE,EAAYhD,GAClC,IAAMiD,EAAcjD,EAAMiD,YAC1B,YAAuBC,IAAhBD,GAA6C,OAAhBA,EAClC,uDACA,yBAAKpC,UAAU,eACb,6BACE,4BAAKoC,EAAYP,KAAK,uBAAG/B,KAAK,yBAAyBwC,OAAO,UAAS,kBAAC,IAAD,CAAiBtC,UAAU,qBAClG,4DAASoC,EAAYG,QACrB,gDAAOH,EAAYI,MACnB,gDAAOJ,EAAYK,OACnB,gDAAOL,EAAYM,UACnB,4DAASN,EAAYO,gBACrB,gDAAOP,EAAYA,e,0BCRZ,SAASQ,EAAWzD,GACjC,IAAM0D,OAA8BR,IAAnBlD,EAAM0D,UAA6C,OAAnB1D,EAAM0D,SAAoB,GAAK1D,EAAM0D,SACtF,OAAO,kBAACC,EAAA,EAAD,CAAMC,SAAU,SAAChB,GAAW5C,EAAM6D,eAAejB,EAAO5C,EAAMS,MACnE,kBAACkD,EAAA,EAAKG,MAAN,CAAYC,UAAU,QACpB,kBAACJ,EAAA,EAAKK,MAAN,qBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAAShB,KAAMP,KAAK,WAElD,kBAACwB,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKQ,IAAN,CAAUtD,UAAU,aAClB,kBAACuD,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,gCAAgB,uBAAGrD,KAAK,yBAAyBwC,OAAO,UAAS,kBAAC,IAAD,CAAiBtC,UAAU,qBAAoC,kBAAC8C,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASN,OAAQ3C,GAAG,SAAS0B,KAAK,WACnM,kBAACiC,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,qBAA2B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASL,KAAM5C,GAAG,OAAO0B,KAAK,WAC1F,kBAACiC,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,qBAA2B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASW,OAAQ5D,GAAG,SAAS0B,KAAK,YAEhG,kBAACwB,EAAA,EAAKQ,IAAN,CAAUtD,UAAU,aAClB,kBAACuD,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,qBAA2B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASJ,MAAO7C,GAAG,QAAQ0B,KAAK,WAC5F,kBAACiC,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,uBAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASY,YAAa7D,GAAG,cAAc0B,KAAK,WAC1G,kBAACiC,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,2BAA4B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASa,OAAQ9D,GAAG,SAAS0B,KAAK,WAC/F,kBAACiC,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,iCAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASF,eAAgB/C,GAAG,iBAAiB0B,KAAK,aAGpH,kBAACwB,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKK,MAAN,qBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAAST,YAAaxC,GAAG,cAAc+D,GAAG,WAAWC,KAAK,OAExF,kBAACd,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKQ,IAAN,CAAUtD,UAAU,aAClB,kBAACuD,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,iCAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASgB,MAAOjE,GAAG,QAAQ0B,KAAK,WAC9F,kBAACiC,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,iCAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASgB,MAAOjE,GAAG,eAAe0B,KAAK,WACrG,kBAACiC,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,iCAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASiB,MAAOlE,GAAG,QAAQ0B,KAAK,WAC9F,kBAACiC,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,iCAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASkB,QAASnE,GAAG,UAAU0B,KAAK,aAGtG,kBAACwB,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKQ,IAAN,CAAUtD,UAAU,aAClB,kBAACuD,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,6CAA+B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASmB,WAAYpE,GAAG,aAAa0B,KAAK,WAC1G,kBAACiC,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,6CAA+B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASoB,SAAUrE,GAAG,WAAW0B,KAAK,WACtG,kBAACiC,EAAA,EAAD,KAAK,kBAACT,EAAA,EAAKK,MAAN,iCAA6B,kBAACL,EAAA,EAAKM,QAAN,CAAcC,aAAcR,EAASqB,cAAetE,GAAG,gBAAgB0B,KAAK,aAGlH,kBAAC6C,EAAA,EAAD,CAAQnE,UAAU,cAAcsB,KAAK,UAArC,iB,OC3BJ8C,IAAMC,WAAWC,iBAAoBA,kBACrCF,IAAMG,UAAYD,aAkPHE,MAhPf,SAAmBrF,GAAQ,IAAD,EAEQyB,IAAMtC,WAAWqC,GAA1CE,EAFiB,EAEjBA,QAGD4D,GALkB,EAER3D,aAGO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,uCAAU,2BAAQ,KAC1F4D,EAAqB,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,2BAAQ,eAAM,IANhD,EAO0BxD,mBAAS,MAPnC,mBAOjByD,EAPiB,KAOEC,EAPF,OAQsB1D,oBAAS,GAR/B,mBAQjB2D,EARiB,KAQAC,EARA,OASoB5D,oBAAS,GAT7B,mBASjB6D,EATiB,KASDC,EATC,OAUoC9D,oBAAS,GAV7C,mBAUjB+D,EAViB,KAUOC,EAVP,OAWoBhE,oBAAS,GAX7B,mBAWjBiE,EAXiB,KAWDC,EAXC,OAYkBlE,mBAAS,IAZ3B,mBAYjBmE,EAZiB,KAYFC,EAZE,OAaQpE,qBAbR,mBAajBqE,EAbiB,KAaPC,EAbO,OAc0BtE,mBAAS,gBAdnC,mBAcjBuE,EAdiB,KAcEC,EAdF,OAecxE,mBAASzC,EAASoC,EAAS,aAfzC,oBAejB8E,GAfiB,MAeJC,GAfI,SAgBgB1E,mBAASuD,GAhBzB,qBAgBjBoB,GAhBiB,MAgBHC,GAhBG,SAiBY5E,mBAAS,IAjBrB,qBAiBjB6E,GAjBiB,MAiBLC,GAjBK,SAkBU9E,qBAlBV,qBAkBjBvC,GAlBiB,MAkBNsH,GAlBM,SAmB0B/E,mBAAS,MAnBnC,qBAmBjBgF,GAnBiB,MAmBEC,GAnBF,MAqBxBC,qBAAU,WAAOH,GAAa,gBAAgB,IAE9CG,qBAAU,WACRR,GAAe/E,EAAQY,QAAO,SAAC4E,GAAD,OAAYA,EAAO7C,SAAWiC,QAC3D,CAACtG,EAAMmH,UAAWzF,EAAS4E,IAE9BW,qBAAU,WACU,OAAdzH,KACFiH,GAAenH,EAASoC,EAASlC,KACjCsH,GAAa,SAEd,CAACtH,GAAWkC,IAEfuF,qBAAU,WACR,GAA0B,IAAtBL,GAAWQ,OAAc,CAC3B,IAD4B,IAAD,uCACfvF,EADe,KACViB,EADU,KAEzB2D,GAAe/E,EAAQY,QAAO,SAAC+E,GAC7B,OAAOA,EAAKxF,GAAKyF,SAASxE,QAF9B,MAA2ByE,OAAOC,QAAQZ,IAA1C,eAAwD,IAKxDC,GAAc,OAEf,CAACD,KAEJ,IAAMa,GAAe,SAACpF,GACpB,IAAMqF,EAAYrF,EAAEc,OAAOwE,UAEzBhB,GADgB,iBAAde,EACcnC,EAEAD,GAElBiB,EAAqBmB,IASvB,OAAI1H,EAAMmH,UACD,yBAAKtG,UAAU,WACpB,gEAEOb,EAAM4H,UACR,kBAACC,EAAA,EAAD,CAAOC,QAAQ,UAAf,0DAIC,yBAAKrH,GAAG,iBACd,kBAACsH,EAAA,EAAD,CAAOC,UAAQ,EAACC,KAAK,KAAKC,KAAMxC,EAAiByC,OAAQ,kBAAMxC,GAAmB,KAChF,kBAACoC,EAAA,EAAMK,OAAP,KACE,kBAACL,EAAA,EAAMM,MAAP,sBAEF,kBAACN,EAAA,EAAMO,KAAP,KACE,kBAAC,EAAD,CAAarF,YAAauC,KAE5B,kBAACuC,EAAA,EAAMQ,OAAP,KACE,kBAACvD,EAAA,EAAD,CAAQnE,UAAU,cAAcO,QAAS,kBAAMuE,GAAmB,KAAlE,kBAKJ,kBAACoC,EAAA,EAAD,CAAOC,UAAQ,EAACC,KAAK,KAAKC,KAAMtC,EAAgBuC,OAAQ,kBAAMtC,GAAkB,KAC9E,kBAACkC,EAAA,EAAMK,OAAP,CAAcI,aAAW,GACzB,kBAACT,EAAA,EAAMM,MAAP,KAAcrC,EAAiB,iCAAU,6BAEzC,kBAAC+B,EAAA,EAAMO,KAAP,KACE,kBAAC,EAAD,CACEzE,eAAgB,SAACjB,EAAOnC,GAClBuF,GACFpD,EAAM6F,iBACNzI,EAAM0I,cAAc9F,EAAO,MAAM,GACjCiD,GAAkB,KAElBjD,EAAM6F,iBACNzI,EAAM0I,cAAc9F,EAAOnC,GAAI,GAC/BoF,GAAkB,KAGtBnC,SAAUqD,GACVtG,GAAI2F,MAIV,kBAAC2B,EAAA,EAAD,CAAOC,UAAQ,EAACC,KAAK,KAAKC,KAAMpC,EAAwBqC,OAAQ,kBAAMpC,GAA0B,KAC9F,kBAACgC,EAAA,EAAMK,OAAP,CAAcI,aAAW,GACvB,kBAACT,EAAA,EAAMM,MAAP,kCAEF,kBAACN,EAAA,EAAMO,KAAP,KACE,qFAAepC,EAAcxD,KAA7B,kBAEF,kBAACqF,EAAA,EAAMQ,OAAP,KACE,kBAACvD,EAAA,EAAD,CAAQ8C,QAAQ,UAAU1G,QAAS,WACjC+E,EAAiB,IACjBJ,GAA0B,KAF5B,gBAIA,kBAACf,EAAA,EAAD,CAAQ8C,QAAQ,SAAS1G,QAAS,WAChCpB,EAAM2I,YAAYzC,EAAczF,IAChC0F,EAAiB,IACjBJ,GAA0B,KAH5B,kBAOJ,yBAAKlF,UAAU,gBACb,6BACE,kBAACmE,EAAA,EAAD,CAAQnE,UAAU,cAAcO,QAASqG,IAAzC,gBACA,kBAACzC,EAAA,EAAD,CAAQnE,UAAU,cAAcO,QAASqG,IAAzC,gBACA,kBAACzC,EAAA,EAAD,CAAQnE,UAAU,cAAcO,QAASqG,IAAzC,iBAEF,6BACE,kBAACzC,EAAA,EAAD,CAAQnE,UAAU,cAAcO,QAAS,WACvC4F,GAAqB,MACrBX,EAAY,MACZR,GAAkB,GAClBI,GAAkB,KAJpB,gBAMA,kBAACjB,EAAA,EAAD,CAAQnE,UAAU,cAAcO,QAASpB,EAAM4I,SAA/C,kBAGJ,6BACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACC,OAAK,EAACf,KAAK,KAAKH,QAAQ,QAAQrH,GAAG,SAC3D,+BACE,wBAAII,UAAU,iBACX6F,GAAauC,KAAI,SAAA5J,GAChB,MAAe,iBAAXA,GAA8B,iBAAXA,EACd,kBAAC,EAAD,CAAcA,OAAQA,EAC3BiD,OAAQ,SAACD,GACP,IAAI6G,EAAgB,GACpB,IAAK,IAAI7B,KAAQT,GACfsC,EAAc7B,GAAQT,GAAWS,GAEnC6B,EAAc9J,EAAgBC,IAAWgD,EAAEc,OAAOL,MAClD+D,GAAcqC,IAEhB3G,YAAa,WACXsE,GAAc,IACdJ,GAAe/E,MAGC,iBAAXrC,EACF,kBAAC,EAAD,CAAgBA,OAAQA,EAAQwD,aAAc,SAACD,GACpDiE,GAAc,CAAC,OAAUjE,EAAMO,OAAOL,WAEpB,KAAXzD,EACF,kBAACuC,EAAD,CAAYvC,OAAQA,EAAQK,KAAM,kBAAMoH,GAAa1H,EAAgBC,OAErE,kCAKf,+BAEImH,GAAYyC,KAAI,SAACE,EAAKC,GAAN,OACd,wBAAIvH,IAAKsH,EAAIzG,MACX,4BAAK0G,EAAM,GACX,wBAAIvI,UAAU,uBAAuBO,QAAS,SAACiB,GAC7CoD,EACE,CACE/C,KAAMyG,EAAIzG,KACVU,OAAQ+F,EAAI/F,OACZC,KAAM8F,EAAI9F,KACVC,MAAO6F,EAAI7F,MACXC,SAAU4F,EAAI7E,YACdd,eAAgB2F,EAAI3F,eACpBP,YAAakG,EAAIlG,cAGrB0C,GAAmB,KACjBwD,EAAIzG,MACR,6BT/La4B,ES+LO6E,EAAI7E,YT/LEC,ES+LW4E,EAAI5E,YT9LrCrB,IAAhBoB,QAAwCpB,IAAXqB,EACxB,GACkB,IAAhBD,EACH,yBAAN,OAAcC,GACM,IAAXA,EACH,GAAN,OAAUD,EAAV,UAEM,GAAN,OAAUA,EAAV,wCAA8BC,KSwLhB,4BAAK4E,EAAI7F,OACT,4BAA2B,iBAAtBgD,EAA6B6C,EAAI9F,KAAO8F,EAAIzE,OACjD,4BAA2B,iBAAtB4B,EAA6B6C,EAAI/F,OAAS+F,EAAIE,cACnD,4BAA2B,iBAAtB/C,EA7IK,SAACrD,GACzB,GAAoB,OAAhBA,QAAwCC,IAAhBD,EAC1B,OAAOA,EAAYqG,UAAU,EAAG,IAAM,SA2IQC,CAAkBJ,EAAIlG,aAAekG,EAAIxE,OACpD,iBAAtB2B,EAA6B,GAAK,4BAAK6C,EAAIvE,SACrB,iBAAtB0B,EAA6B,GAAK,4BAAK6C,EAAIjC,QACrB,iBAAtBZ,EAA6B,GAAK,6BT1L1BzB,ES0L0CsE,EAAItE,WT1LlCC,ES0L8CqE,EAAIrE,STzLlFD,EAAWhF,UAEJiF,EAASjF,UAGb,GAAN,OAAUgF,EAAW2E,OAAO,cAA5B,mBAA+C1E,EAAS0E,OAAO,eAFzD,GAAN,OAAU3E,EAAW2E,OAAO,cAA5B,gBAFO,KSyL8B,iBAAtBlD,EAA6B,GAAK,4BAAK6C,EAAIpE,eAC5C,4BAAI,kBAAC,IAAD,CAAWlE,UAAU,YAAYO,QAAS,WAC5CiF,EAAY8C,EAAI1I,IAChBuG,GAAqB,CACnBtE,KAAMyG,EAAIzG,KACVW,KAAM8F,EAAI9F,KACVD,OAAQ+F,EAAI/F,OACZkB,YAAa6E,EAAI7E,YACjBC,OAAQ4E,EAAI5E,OACZf,eAAgB2F,EAAI3F,eACpBa,OAAQ8E,EAAI9E,OACZf,MAAO6F,EAAI7F,MACXL,YAAakG,EAAIlG,YACjByB,MAAOyE,EAAIzE,MACX2E,aAAcF,EAAIE,aAClB1E,MAAOwE,EAAIxE,MACXC,QAASuE,EAAIvE,QACbC,WAAYsE,EAAItE,WAAW2E,OAAO,cAClC1E,SAAUqE,EAAIrE,SAAS0E,OAAO,cAC9BzE,cAAeoE,EAAIpE,gBAErBkB,GAAkB,GAClBJ,GAAkB,MAChB,kBAAC,IAAD,CAAShF,UAAU,iBAAiBO,QAAS,WAC/C+E,EAAiB,CACfzD,KAAMyG,EAAIzG,KACVjC,GAAI0I,EAAI1I,KAEVsF,GAA0B,QTvNvC,IAAoBlB,EAAYC,EAZRR,EAAaC,U,OUf7B,SAASkF,IAAS,IAAD,EACkBvK,IAAxCe,EADsB,EACtBA,QAASC,EADa,EACbA,SAAUC,EADG,EACHA,iBACrBC,EAAUC,cAFc,EAGE0B,mBAAS,IAHX,mBAGvB2H,EAHuB,KAGbC,EAHa,OAIE5H,mBAAS,IAJX,mBAIvB6H,EAJuB,KAIbC,EAJa,KAwB9B,OACE,yBAAKhJ,UAAU,SACb,kBAAC8C,EAAA,EAAD,CAAMC,SAhBV,SAAsBhB,GACpBA,EAAM6F,iBAEKxD,IAAM6E,KAAKC,MAAML,EAAUE,GAAUI,MAAK,SAASC,IVHpC,SAACC,EAAOD,GACpC5I,eAAe8I,QAAQ,QAASD,GAChC7I,eAAe8I,QAAQ,OAAQC,KAAKC,UAAUJ,IUExCK,CAAeL,EAAMA,EAAKM,mBAC1BtK,EAAQmK,KAAKC,UAAUJ,IACvB/J,EAAS+J,EAAKM,mBACdpK,GAAiB,GACjBC,EAAQmB,KAAK,YACdiJ,OAAM,SAASC,GACdC,MAAMD,EAAME,cAOZ,kBAAChH,EAAA,EAAKG,MAAN,CAAYmE,KAAK,KAAKlE,UAAU,YAC9B,kBAACJ,EAAA,EAAKK,MAAN,iBACA,kBAACL,EAAA,EAAKM,QAAN,CACE2G,WAAS,EACTzI,KAAK,WACLW,MAAO4G,EACP/G,SAAU,SAACN,GAAD,OAAOsH,EAAYtH,EAAEc,OAAOL,WAG1C,kBAACa,EAAA,EAAKG,MAAN,CAAYmE,KAAK,KAAKlE,UAAU,YAC9B,kBAACJ,EAAA,EAAKK,MAAN,iBACA,kBAACL,EAAA,EAAKM,QAAN,CACE9B,KAAK,WACLW,MAAO8G,EACPjH,SAAU,SAACN,GAAD,OAAOwH,EAAYxH,EAAEc,OAAOL,WAG1C,kBAACkC,EAAA,EAAD,CAAQ6F,OAAK,EAAC5C,KAAK,KAAK9F,KAAK,SAAS2I,WArCnCpB,EAAStC,OAAS,GAAKwC,EAASxC,OAAS,IAqC5C,W,sCCsJO2D,MA7Lf,WAAgB,IAAD,EAC6BhJ,oBAAS,GADtC,mBACNiJ,EADM,KACS7K,EADT,OAEW4B,mBXfH,WACrB,IAAMkJ,EAAU5J,eAAe6J,QAAQ,QACvC,OAAID,EAAgBb,KAAKe,MAAMF,GACnB,KWYqBG,IAFpB,mBAENnB,EAFM,KAEAhK,EAFA,OAGa8B,mBXRnBV,eAAe6J,QAAQ,UAAY,MWK7B,mBAGNhB,EAHM,KAGChK,EAHD,OAIqB6B,oBAAS,GAJ9B,mBAINoF,EAJM,KAIKkE,EAJL,OAKqBtJ,oBAAS,GAL9B,mBAKN6F,EALM,KAKK0D,EALL,OAMiBvJ,mBAAS,IAN1B,mBAMNL,EANM,KAMG6J,EANH,OAO2BxJ,mBAAS,CAC/C,UAAW,CACTW,KAAM,UACNa,SAAU,GACVc,OAAQ,eACRf,MAAO,eACPL,YAAa,sCAbJ,mBAONtB,EAPM,KAiBP6J,GAjBO,KAiBK,uCAAG,8BAAA7L,EAAA,sDACnB0L,GAAa,GACPI,EAAaxG,IAAMsC,OAAOmE,OAAO,YACjCC,EAAQ,IAAI1G,IAAM2G,MAAMH,IACxBI,MAAM,KACZF,EAAMG,OAAO9B,MAAK,SAAC+B,GAEjB,GADAC,QAAQC,IAAI,kBACY,qBAAbC,SAAyB,CAClC,IAAMxK,EAAUqK,EAAQ9C,KAAI,SAACkD,GAC3B,MAAO,CACL1L,GAAI0L,EAAO1L,GACXiC,KAAMyJ,EAAOC,IAAI,QACjB/I,KAAM8I,EAAOC,IAAI,QACjBhJ,OAAQ+I,EAAOC,IAAI,UACnB9H,YAAa6H,EAAOC,IAAI,eACxB7H,OAAQ4H,EAAOC,IAAI,UACnB5I,eAAgB2I,EAAOC,IAAI,kBAC3B/H,OAAQ8H,EAAOC,IAAI,UACnB9I,MAAO6I,EAAOC,IAAI,SAClBnJ,YAAakJ,EAAOC,IAAI,eACxB1H,MAAOyH,EAAOC,IAAI,SAClB/C,aAAc8C,EAAOC,IAAI,gBACzBzH,MAAOwH,EAAOC,IAAI,SAClBxH,QAASuH,EAAOC,IAAI,WACpBlF,OAAQmF,QAAQF,EAAOC,IAAI,SAAWD,EAAOC,IAAI,gBAAkBD,EAAOC,IAAI,SAAWD,EAAOC,IAAI,YAAYE,QAAQ,IACxHzH,WAAY0H,IAAOJ,EAAOC,IAAI,cAAe,cAC7CtH,SAAUyH,IAAOJ,EAAOC,IAAI,YAAa,cACzCrH,cAAeoH,EAAOC,IAAI,qBAG9Bb,EAAWjM,EAASoC,EAAS,eAC7B2J,GAAa,OAEd,SAACZ,GACFY,GAAa,GACbC,GAAa,GACW,qBAAbY,UAA0BA,SAASM,MAAT,6CAAqDpC,KAAKC,UAAUI,KACzGuB,QAAQvB,MAAM,oCAAqCA,MArClC,2CAAH,sDAyCZgC,EAAe,uCAAG,WAAOC,GAAP,2BAAA/M,EAAA,sDAGtB,IAFMgN,EAAa1H,IAAMsC,OAAOmE,OAAO,WACjCkB,EAAe,IAAID,EACzB,MAA2BpF,OAAOC,QAAQkF,GAA1C,eAAuD,EAAD,oBAA1C7K,EAA0C,KAArCiB,EAAqC,KACpD8J,EAAaC,IAAIhL,EAAKiB,GAGxB8J,EAAaE,OAAO9C,MAClB,SAACmC,GACCH,QAAQC,IAAIE,GACZzB,MAAM,wCACNc,OAEF,SAACf,GACCuB,QAAQC,IAAIxB,GACZC,MAAM,yEAfY,2CAAH,sDAoBfqC,EAAY,uCAAG,WAAOtM,EAAIiM,GAAX,eAAA/M,EAAA,sDACnBqM,QAAQC,IAAIS,GACZV,QAAQC,IAAIxL,GACNgL,EAAaxG,IAAMsC,OAAOmE,OAAO,WACzB,IAAIzG,IAAM2G,MAAMH,GACxBW,IAAI3L,GAAIuJ,MAAK,SAACgD,GAClB,cAA2BzF,OAAOC,QAAQkF,GAA1C,eAAsD,CAAC,IAAD,sBAA1C7K,EAA0C,KAArCiB,EAAqC,KACpDkJ,QAAQC,IAAI,QACZe,EAAOH,IAAIhL,EAAKiB,GAElBkK,EAAOF,OAAO9C,MAAK,SAACiD,GAClBjB,QAAQC,IAAIgB,GACZvC,MAAM,wCACNc,OACC,SAACf,GACFuB,QAAQC,IAAIxB,GACZC,MAAM,4EAhBS,2CAAH,wDAqBZ/B,EAAW,uCAAG,WAAOlI,GAAP,eAAAd,EAAA,sDAClBqM,QAAQC,IAAIxL,GACNgL,EAAaxG,IAAMsC,OAAOmE,OAAO,WACzB,IAAIzG,IAAM2G,MAAMH,GACxBW,IAAI3L,GAAIuJ,MAAK,SAACgD,GAClBA,EAAOE,UAAUlD,MAAK,SAACiD,GACrBjB,QAAQC,IAAIgB,GACZvC,MAAM,wCACNc,OACC,SAACf,GACFuB,QAAQC,IAAIxB,GACZC,MAAM,4EAXQ,2CAAH,sDAyDjB,OAzCAzD,qBAAU,WACI,MAARgD,GAAyB,MAATC,IAClB/J,GAAiB,GACjBqL,OAED,IAEHvE,qBAAU,WACJ+D,GACFQ,MAED,CAACR,IA+BF,6BACE,yBAAKnK,UAAU,OACb,kBAAC7B,EAAWmO,SAAZ,CAAqBrK,MAAO,CAAEkI,gBAAef,OAAMC,QAAOjK,UAASC,WAAUC,qBAC3E,kBAAC,IAAD,CAAYiN,SAAUC,oCAEpB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,EAAiBF,SAAlB,CAA2BrK,MAAO,CAACpB,QAASA,EAASC,aAAcA,IACjE,kBAAC,IAAD,CAAO2L,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SAEPtC,EACC,kBAAC,EAAD,CAAW7D,UAAWA,EAAWS,UAAWA,EAAWgB,QAAS4C,EAAc9C,cA3CxE,SAAC9F,EAAOnC,EAAI8M,GACpC3K,EAAM6F,iBACN,IAAM+E,EAAe5K,EAAMO,OAAOsK,SAC5Bf,EAAY,CAChB,KAAQc,EAAa9K,KAAKI,MAC1B,KAAQ0K,EAAanK,KAAKP,MAC1B,OAAUuJ,OAAOmB,EAAapK,OAAON,OACrC,YAAeuJ,OAAOmB,EAAalJ,YAAYxB,OAC/C,OAAUuJ,OAAOmB,EAAajJ,OAAOzB,OACrC,eAAkBuJ,OAAOmB,EAAahK,eAAeV,OACrD,OAAU0K,EAAanJ,OAAOvB,MAC9B,MAAS0K,EAAalK,MAAMR,MAC5B,YAAe0K,EAAavK,YAAYH,MACxC,MAASuJ,OAAOmB,EAAa9I,MAAM5B,OACnC,aAAgBuJ,OAAOmB,EAAanE,aAAavG,OACjD,MAASuJ,OAAOmB,EAAa7I,MAAM7B,OACnC,QAAWuJ,OAAOmB,EAAa5I,QAAQ9B,OACvC,WAAc0K,EAAa3I,WAAW/B,MACtC,SAAY0K,EAAa1I,SAAShC,MAClC,cAAiBuJ,OAAOmB,EAAazI,cAAcjC,QAEjDyK,EACFd,EAAgBC,GAEhBK,EAAatM,EAAIiM,IAmB+G/D,YAAaA,IAD9G,kBAAC,IAAD,CAAU+E,GAAG,YAIlC,kBAAC,IAAD,CAAOJ,KAAK,UACV,yBAAKzM,UAAU,WAAf,uBAEF,kBAAC,IAAD,CAAOyM,KAAK,aACZ,yBAAKzM,UAAU,WAAf,8BCpLI8M,QACW,cAA7B5M,OAAOC,SAAS4M,UAEe,UAA7B7M,OAAOC,SAAS4M,UAEhB7M,OAAOC,SAAS4M,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9B,SAAS+B,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpE,MAAK,SAAAqE,GACJA,EAAaC,gBAEd9D,OAAM,SAAAC,GACLuB,QAAQvB,MAAMA,EAAME,c","file":"static/js/main.d4dc9d45.chunk.js","sourcesContent":["module.exports = {\n    APPLICATION_ID: '54T0X4tWovUBdnRd6EKdW3BrN4WJrpGBEJdwDk9J',\n    JAVASCRIPT_KEY: 'WREbi60D2GfVknGhH9Je1GJ931oIhIVkHUXD9u5R',\n    SERVER_URL: 'https://parseapi.back4app.com/'\n}","import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}","// return the user data from the session storage\nexport const getUser = () => {\n  const userStr = sessionStorage.getItem('user');\n  if (userStr) return JSON.parse(userStr);\n  else return null;\n}\n \n// return the token from the session storage\nexport const getToken = () => {\n  return sessionStorage.getItem('token') || null;\n}\n \n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('token');\n  sessionStorage.removeItem('user');\n}\n \n// set the token and user from the session storage\nexport const setUserSession = (token, user) => {\n  sessionStorage.setItem('token', token);\n  sessionStorage.setItem('user', JSON.stringify(user));\n}\n\nexport function formatEpisodes(tv_episodes, movies) {\n  if (tv_episodes === undefined || movies === undefined) {\n    return \"\";\n  } else if (tv_episodes === 0) {\n    return `剧场版×${movies}`;\n  } else if (movies === 0) {\n    return `${tv_episodes}集`;\n  } else {\n    return `${tv_episodes}集+剧场版×${movies}`;\n  }\n}\n\nexport function formatDate(start_date, end_date) {\n  if (!start_date.isValid()) {\n    return \"\"\n  } else if (!end_date.isValid()) {\n    return `${start_date.format('YYYY-MM-DD')}至今`;\n  } else {\n    return `${start_date.format('YYYY-MM-DD')} 至 ${end_date.format('YYYY-MM-DD')}`;\n  }\n}\n\nexport function translateHeader(header) {\n  switch(header) {\n    case '名称':\n      return 'name';\n    case '集数':\n      return 'tv_episodes';\n    case '状态':\n      return 'status';\n    case '分类':\n      return 'genre';\n    case '剧情':\n      return 'story';\n    case '作画':\n      return 'illustration';\n    case '音乐':\n      return 'music';\n    case '情怀':\n      return 'passion';\n    case '评分':\n      return 'rating';\n    case '首次观看日期':\n      return 'start_date';\n    case '观看次数':\n      return 'times_watched';\n    default:\n      return 'unknown';\n  }\n}\n\nexport function sortList(rawList, sortedCol) {\n  return rawList.slice().sort((a, b) => {\n    if (sortedCol === \"start_date\") {\n      if (!a[sortedCol].isValid()) {\n        return 1;\n      } else if (!b[sortedCol].isValid()) {\n        return -1;\n      } else {\n        return compare(a[sortedCol], b[sortedCol]);\n      }\n    } else {\n      return compare(a[sortedCol], b[sortedCol]);\n    }\n  });\n}\n\nfunction compare(a, b) {\n  if (a > b) {\n    return -1;\n  } else if (a < b) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { useAppContext } from \"../Utils/AppContext\";\nimport { removeUserSession } from \"../utils\";\nimport './Navigation.css';\nimport '../App.css';\n\nfunction Navigation(props) {\n  const { setUser, setToken, setAuthenticated } = useAppContext();\n  const history = useHistory();\n\n  const handleSignOut = () => {\n    setUser(null);\n    setToken(null);\n    setAuthenticated(false);\n    removeUserSession();\n    history.push(\"/login\");\n  };\n\n  return (\n    <Navbar sticky=\"top\" expand=\"lg\" id=\"navbar\">\n      <Navbar.Brand href=\"/\">追番补番</Navbar.Brand>\n      <Nav className=\"mr-auto\" activeKey={window.location.pathname}>\n        <Nav.Item><Nav.Link href=\"/#/list\">我的列表</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link href=\"/#/today\">今日更新</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link href=\"/#/calendar\">看番日历</Nav.Link></Nav.Item>\n      </Nav>\n    <div id=\"signout\" className=\"clickable\" onClick={handleSignOut}>Sign out</div>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\n\nconst animeData = {\n  ratings: [],\n  descriptions: {}\n}\n\nconst AnimeDataContext = React.createContext(animeData);\n\nexport default AnimeDataContext;","import React from 'react';\nimport { BiSort } from \"react-icons/bi\";\nimport '../App.css';\n\nexport default function SortHeader(props) {\n  return (\n    <th key={props.header}>\n      <div className='table-header'>\n        <div>{props.header}</div>\n        <BiSort className='icon clickable' onClick={props.sort}/>\n      </div>\n    </th>\n  );\n}","import React, { useState } from 'react';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './FilterBox.css';\nimport '../App.css';\n\nexport default function FilterBox(props) {\n  const [displayBox, setDisplayBox] = useState(false);\n  return (displayBox ? \n    <div className=\"filter-box\">\n      <input className=\"filter-input-box\" placeholder=\"输入......\" type=\"text\" onKeyPress={(e) => {\n        if (e.key === \"Enter\") props.filter(e);\n      }}/>\n      <div className=\"close-button clickable\" onClick={() => {\n        props.clearFilter();\n        setDisplayBox(!displayBox)\n      }}>&times;</div>\n    </div> :\n    <AiOutlineSearch className=\"filter-box icon clickable\" onClick={() => setDisplayBox(!displayBox)}/>);\n}\n","import React from 'react';\nimport FilterBox from './FilterBox';\nimport './FilterHeader.css';\n\nexport default function FilterHeader(props) {\n  return (\n    <th key={props.header}>\n      <div className='table-header'>\n        <div>{props.header}</div>\n        <FilterBox filter={props.filter} clearFilter={props.clearFilter}/>\n      </div>\n    </th>\n  );\n}","import React from 'react';\nimport './DropdownHeader.css';\n\nexport default function DropdownHeader(props) {\n  return <th key={props.header}>\n    <select id=\"status\" className=\"dropdown-header\" name=\"status\" onChange={(event) => props.filterStatus(event)}>\n      <option value=\"\" selected>状态</option>\n      <option value=\"想看\">想看</option>\n      <option value=\"在看\">在看</option>\n      <option value=\"已看\">已看</option>\n    </select>\n  </th>\n};","import React from 'react';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './Description.css';\n\nexport default function Description(props) {\n  const description = props.description;\n  return description === undefined || description === null ? \n    <p>暂无简介</p> :\n    <div className=\"description\">\n      <div>\n        <h1>{description.name}<a href=\"https://www.douban.com\" target=\"_blank\"><AiOutlineSearch className=\"icon clickable\" /></a></h1>\n        <p>豆瓣评分：{description.douban}</p>\n        <p>年份：{description.year}</p>\n        <p>分类：{description.genre}</p>\n        <p>集数：{description.episodes}</p>\n        <p>单集片长：{description.episode_length}</p>\n        <p>简介：{description.description}</p>\n      </div>\n    </div>;\n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './AnimeModal.css';\nimport '../App.css';\n\nexport default function AnimeModal(props) {\n  const oldValue = props.oldValue === undefined || props.oldValue === null ? {} : props.oldValue;\n  return <Form onSubmit={(event) => {props.onSubmitOrEdit(event, props.id)}}>\n    <Form.Group controlId=\"name\">\n      <Form.Label>名称</Form.Label>\n      <Form.Control defaultValue={oldValue.name} type=\"input\" />\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>豆瓣评分<a href=\"https://www.douban.com\" target=\"_blank\"><AiOutlineSearch className=\"icon clickable\" /></a></Form.Label><Form.Control defaultValue={oldValue.douban} id=\"douban\" type=\"input\"/></Col>\n        <Col><Form.Label>年份</Form.Label><Form.Control defaultValue={oldValue.year} id=\"year\" type=\"input\"/></Col>\n        <Col><Form.Label>状态</Form.Label><Form.Control defaultValue={oldValue.status} id=\"status\" type=\"input\"/></Col>\n      </Form.Row>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>分类</Form.Label><Form.Control defaultValue={oldValue.genre} id=\"genre\" type=\"input\"/></Col>\n        <Col><Form.Label>TV集数</Form.Label><Form.Control defaultValue={oldValue.tv_episodes} id=\"tv_episodes\" type=\"input\"/></Col>\n        <Col><Form.Label>剧场版</Form.Label><Form.Control defaultValue={oldValue.movies} id=\"movies\" type=\"input\"/></Col>\n        <Col><Form.Label>单集片长</Form.Label><Form.Control defaultValue={oldValue.episode_length} id=\"episode_length\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Form.Group>\n      <Form.Label>简介</Form.Label>\n      <Form.Control defaultValue={oldValue.description} id=\"description\" as=\"textarea\" rows=\"3\" />\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>剧情评分</Form.Label><Form.Control defaultValue={oldValue.story} id=\"story\" type=\"input\"/></Col>\n        <Col><Form.Label>作画评分</Form.Label><Form.Control defaultValue={oldValue.story} id=\"illustration\" type=\"input\"/></Col>\n        <Col><Form.Label>音乐评分</Form.Label><Form.Control defaultValue={oldValue.music} id=\"music\" type=\"input\"/></Col>\n        <Col><Form.Label>情怀评分</Form.Label><Form.Control defaultValue={oldValue.passion} id=\"passion\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>开始观看日期</Form.Label><Form.Control defaultValue={oldValue.start_date} id=\"start_date\" type=\"input\"/></Col>\n        <Col><Form.Label>结束观看日期</Form.Label><Form.Control defaultValue={oldValue.end_date} id=\"end_date\" type=\"input\"/></Col>\n        <Col><Form.Label>观看次数</Form.Label><Form.Control defaultValue={oldValue.times_watched} id=\"times_watched\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Button className=\"pink-button\" type=\"submit\">\n      提交\n    </Button>\n\n  </Form>\n}\n","import React, { useState, useEffect } from 'react';\nimport Parse from 'parse';\nimport * as Env from \"../environments\";\nimport AnimeDataContext from '../Context/AnimeDataContext';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport { BiEditAlt, BiTrash } from \"react-icons/bi\";\nimport SortHeader from './SortHeader';\nimport FilterHeader from './FilterHeader';\nimport DropdownHeader from './DropdownHeader';\nimport Description from './Description';\nimport AnimeModal from './AnimeModal';\nimport { sortList, formatEpisodes, formatDate, translateHeader } from \"../utils\";\nimport '../App.css';\nimport './AnimeList.css';\n\n\n\nParse.initialize(Env.APPLICATION_ID, Env.JAVASCRIPT_KEY);\nParse.serverURL = Env.SERVER_URL;\n\nfunction AnimeList(props) {\n  \n  const {ratings, descriptions} = React.useContext(AnimeDataContext);\n  // console.log(JSON.parse(LOCAL_DATA));\n\n  const watchedHeaders = ['序号', '名称', '集数', '分类', '剧情', '作画', '音乐', '情怀', '评分', '首次观看日期', '观看次数', ''];\n  const wantToWatchHeaders = ['序号', '名称', '集数', '分类', '年份', '豆瓣评分', '简介', ''];\n  const [activeDescription, setActiveDescription] = useState(null);\n  const [showDescription, setShowDescription] = useState(false);\n  const [showAnimeModal, setShowAnimeModal] = useState(false);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [submitNewAnime, setSubmitNewAnime] = useState(false);\n  const [animeToDelete, setAnimeToDelete] = useState({});\n  const [activeId, setActiveId] = useState();\n  const [displayListStatus, setDisplayListStatus] = useState(\"已看\");\n  const [displayList, setDisplayList] = useState(sortList(ratings, \"end_date\"));\n  const [tableHeaders, setTableHeaders] = useState(watchedHeaders);\n  const [filterList, setFilterList] = useState({});\n  const [sortedCol, setSortedCol] = useState();\n  const [editAnimeOldValue, setEditAnimeOldValue] = useState(null);\n\n  useEffect(() => {setSortedCol(\"start_date\")}, []);\n\n  useEffect(() => {\n    setDisplayList(ratings.filter((rating) => rating.status === displayListStatus));\n  }, [props.isLoading, ratings, displayListStatus]);\n\n  useEffect(() => {\n    if (sortedCol !== null) {\n      setDisplayList(sortList(ratings, sortedCol));\n      setSortedCol(null);\n    }\n  }, [sortedCol, ratings]);\n\n  useEffect(() => {\n    if (filterList.length !== 0) {\n      for (const [key, value] of Object.entries(filterList)) {\n        setDisplayList(ratings.filter((item) => {\n          return item[key].includes(value);\n        }));\n      }\n      setFilterList([]);\n    }\n  }, [filterList]);\n\n  const changeStatus = (e) => {\n    const newStatus = e.target.innerHTML;\n    if (newStatus === '想看') {\n      setTableHeaders(wantToWatchHeaders);\n    } else {\n      setTableHeaders(watchedHeaders);\n    }\n    setDisplayListStatus(newStatus);\n  }\n\n  const formatDescription = (description) => {\n    if (description !== null && description !== undefined) {\n      return description.substring(0, 20) + '......';\n    }\n  }\n\n  if (props.isLoading) {\n    return <div className=\"loading\">\n      <div>正在加载......</div>\n    </div> ;\n  } else if (props.loadError) {\n    return <Alert variant='danger'>\n      番剧评分加载失败！\n    </Alert>;\n  } else {\n    return (<div id=\"table-wrapper\">\n      <Modal centered size='lg' show={showDescription} onHide={() => setShowDescription(false)}>\n        <Modal.Header>\n          <Modal.Title>简介</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Description description={activeDescription}/>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button className=\"pink-button\" onClick={() => setShowDescription(false)}>\n            关闭\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal centered size='lg' show={showAnimeModal} onHide={() => setShowAnimeModal(false)}>\n        <Modal.Header closeButton>\n        <Modal.Title>{submitNewAnime ? \"添加新番剧\" : \"编辑番剧\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AnimeModal\n            onSubmitOrEdit={(event, id) => {\n              if (submitNewAnime) {\n                event.preventDefault();\n                props.onAnimeSubmit(event, null, true);\n                setShowAnimeModal(false);\n              } else {\n                event.preventDefault();\n                props.onAnimeSubmit(event, id, false);\n                setShowAnimeModal(false);\n              }\n            }}\n            oldValue={editAnimeOldValue}\n            id={activeId}\n          />\n        </Modal.Body>\n      </Modal>\n      <Modal centered size=\"sm\" show={showDeleteConfirmation} onHide={() => setShowDeleteConfirmation(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>删除番剧</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{`确定要删除番剧“${animeToDelete.name}”吗`}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => {\n            setAnimeToDelete({});\n            setShowDeleteConfirmation(false);\n          }}>取消</Button>\n          <Button variant=\"danger\" onClick={() => {\n            props.deleteAnime(animeToDelete.id);\n            setAnimeToDelete({});\n            setShowDeleteConfirmation(false);\n          }}>确定</Button>\n        </Modal.Footer>\n      </Modal>\n      <div className=\"button-group\">\n        <div>\n          <Button className=\"pink-button\" onClick={changeStatus}>已看</Button>\n          <Button className=\"pink-button\" onClick={changeStatus}>在看</Button>\n          <Button className=\"pink-button\" onClick={changeStatus}>想看</Button>\n        </div>\n        <div>\n          <Button className=\"pink-button\" onClick={() => {\n            setEditAnimeOldValue(null);\n            setActiveId(null);\n            setShowAnimeModal(true);\n            setSubmitNewAnime(true);\n          }}>添加</Button>\n          <Button className=\"pink-button\" onClick={props.refresh}>刷新</Button>\n        </div>\n      </div>\n      <div>\n        <Table striped borderless hover size=\"sm\" variant=\"light\" id=\"table\">\n          <thead>\n            <tr className='table-headers'>\n              {tableHeaders.map(header => {\n                if (header === '名称' || header === '分类') {\n                  return <FilterHeader header={header}\n                    filter={(e) => {\n                      let newFilterList = {};\n                      for (let item in filterList) {\n                        newFilterList[item] = filterList[item];\n                      }\n                      newFilterList[translateHeader(header)] = e.target.value;\n                      setFilterList(newFilterList);\n                    }}\n                    clearFilter={() => {\n                      setFilterList({});\n                      setDisplayList(ratings);\n                    }}\n                  />;\n                } else if (header === '状态') {\n                  return <DropdownHeader header={header} filterStatus={(event) => {\n                    setFilterList({\"status\": event.target.value});\n                  }}/>\n                } else if (header !== ''){\n                  return <SortHeader header={header} sort={() => setSortedCol(translateHeader(header))}/>;\n                } else {\n                  return <th></th>\n                }\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {\n              displayList.map((row, idx) =>\n                <tr key={row.name}>\n                  <td>{idx + 1}</td>\n                  <td className='anime-name clickable' onClick={(e) => {\n                    setActiveDescription(\n                      {\n                        name: row.name,\n                        douban: row.douban,\n                        year: row.year,\n                        genre: row.genre,\n                        episodes: row.tv_episodes,\n                        episode_length: row.episode_length,\n                        description: row.description,\n                      }\n                    );\n                    setShowDescription(true);\n                  }}>{row.name}</td>\n                  <td>{formatEpisodes(row.tv_episodes, row.movies)}</td>\n                  <td>{row.genre}</td>\n                  <td>{displayListStatus === '想看' ? row.year : row.story}</td>\n                  <td>{displayListStatus === '想看' ? row.douban : row.illustration}</td>\n                  <td>{displayListStatus === '想看' ? formatDescription(row.description) : row.music}</td>\n                  {displayListStatus === '想看' ? \"\" : <td>{row.passion}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{row.rating}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{formatDate(row.start_date, row.end_date)}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{row.times_watched}</td>}\n                  <td><BiEditAlt className=\"clickable\" onClick={() => {\n                    setActiveId(row.id);\n                    setEditAnimeOldValue({\n                      name: row.name,\n                      year: row.year,\n                      douban: row.douban,\n                      tv_episodes: row.tv_episodes,\n                      movies: row.movies,\n                      episode_length: row.episode_length,\n                      status: row.status,\n                      genre: row.genre,\n                      description: row.description,\n                      story: row.story,\n                      illustration: row.illustration,\n                      music: row.music,\n                      passion: row.passion,\n                      start_date: row.start_date.format('YYYY-MM-DD'),\n                      end_date: row.end_date.format('YYYY-MM-DD'),\n                      times_watched: row.times_watched,\n                    });\n                    setSubmitNewAnime(false);\n                    setShowAnimeModal(true);\n                  }}/><BiTrash className=\"icon clickable\" onClick={() => {\n                    setAnimeToDelete({\n                      name: row.name,\n                      id: row.id,\n                    });\n                    setShowDeleteConfirmation(true);\n                  }}/></td>\n                </tr>)\n            }\n          </tbody>\n        </Table>\n      </div>\n    </div>);\n  }\n}\n\n\nexport default AnimeList;","import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport Form from \"react-bootstrap/Form\";\nimport Parse from 'parse';\nimport Button from \"react-bootstrap/Button\";\nimport { useAppContext } from \"../Utils/AppContext\";\nimport { setUserSession } from \"../utils\";\nimport \"./Login.css\";\n\nexport default function Login() {\n  const { setUser, setToken, setAuthenticated } = useAppContext();\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    // Create a new instance of the user class\n    var user = Parse.User.logIn(username, password).then(function(user) {\n        setUserSession(user, user.getSessionToken());\n        setUser(JSON.stringify(user));\n        setToken(user.getSessionToken());\n        setAuthenticated(true);\n        history.push(\"/list\");\n    }).catch(function(error){\n        alert(error.message);\n    });\n  }\n\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport Navivation from './components/Navigation';\nimport AnimeDataContext from './Context/AnimeDataContext';\nimport AnimeList from './components/AnimeList';\nimport Login from \"./components/Login\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect } from 'react-router'\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { AppContext } from \"./Utils/AppContext\";\nimport { sortList, getUser, getToken } from \"./utils\";\nimport Parse from 'parse';\nimport moment from 'moment';\nimport './App.css';\n\nfunction App() {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [user, setUser] = useState(getUser());\n  const [token, setToken] = useState(getToken());\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n  const [ratings, setRatings] = useState([]);\n  const [descriptions, setDescriptions] = useState({\n    \"Anime 1\": {\n      name: \"Anime 1\",\n      episodes: 42,\n      status: \"已看\",\n      genre: \"恋爱\",\n      description: \"This is a description the anime.\"\n    }\n  });\n\n  const fetchRatings = async () => {\n    setIsLoading(true);\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.limit(1000);\n    query.find().then((results) => {\n      console.log(\"calling server\");\n      if (typeof document !== 'undefined'){\n        const ratings = results.map((result) => {\n          return {\n            id: result.id,\n            name: result.get(\"name\"),\n            year: result.get(\"year\"),\n            douban: result.get(\"douban\"),\n            tv_episodes: result.get(\"tv_episodes\"),\n            movies: result.get(\"movies\"),\n            episode_length: result.get(\"episode_length\"),\n            status: result.get(\"status\"),\n            genre: result.get(\"genre\"),\n            description: result.get(\"description\"),\n            story: result.get(\"story\"),\n            illustration: result.get(\"illustration\"),\n            music: result.get(\"music\"),\n            passion: result.get(\"passion\"),\n            rating: Number((result.get(\"story\") + result.get(\"illustration\") + result.get(\"music\") + result.get(\"passion\")).toFixed(1)),\n            start_date: moment(result.get(\"start_date\"), 'YYYY-MM-DD'),\n            end_date: moment(result.get(\"end_date\"), 'YYYY-MM-DD'),\n            times_watched: result.get(\"times_watched\"),\n          }}\n        );\n        setRatings(sortList(ratings, \"start_date\"));\n        setIsLoading(false);\n      }\n    }, (error) => {\n      setIsLoading(false);\n      setLoadError(true);\n      if (typeof document !== 'undefined') document.write(`Error while fetching ParseObjects: ${JSON.stringify(error)}`);\n      console.error('Error while fetching ParseObjects', error);\n    });\n  };\n\n  const submitNewRating = async (newRating) => {\n    const RatingsObj = Parse.Object.extend('Ratings');\n    const newRatingObj = new RatingsObj();\n    for (const [key, value] of Object.entries(newRating)) {\n      newRatingObj.set(key, value)\n    }\n\n    newRatingObj.save().then(\n      (result) => {\n        console.log(result);\n        alert(\"已提交更新！\");\n        fetchRatings();\n      },\n      (error) => {\n        console.log(error);\n        alert(\"更新失败，请稍后重试。\");\n      }\n    );\n  };\n\n  const updateRating = async (id, newRating) => {\n    console.log(newRating);\n    console.log(id);\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.get(id).then((object) => {\n      for (const [key, value] of Object.entries(newRating)) {\n        console.log(\"here\");\n        object.set(key, value)\n      }\n      object.save().then((response) => {\n        console.log(response);\n        alert(\"已提交更新！\");\n        fetchRatings();\n      }, (error) => {\n        console.log(error);\n        alert(\"更新失败，请稍后重试。\");\n      });\n    });\n  };\n  \n  const deleteAnime = async (id) => {\n    console.log(id);\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.get(id).then((object) => {\n      object.destroy().then((response) => {\n        console.log(response);\n        alert(\"已删除番剧！\");\n        fetchRatings();\n      }, (error) => {\n        console.log(error);\n        alert(\"删除失败，请稍后重试。\");\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (user != null && token != null) {\n      setAuthenticated(true);\n      fetchRatings();\n    }\n  }, [])\n\n  useEffect(() => {\n    if (authenticated) {\n      fetchRatings();\n    }\n  }, [authenticated]);\n\n  const handleAnimeSubmit = (event, id, isNew) => {\n    event.preventDefault();\n    const formElements = event.target.elements;\n    const newRating = {\n      \"name\": formElements.name.value,\n      \"year\": formElements.year.value,\n      \"douban\": Number(formElements.douban.value),\n      \"tv_episodes\": Number(formElements.tv_episodes.value),\n      \"movies\": Number(formElements.movies.value),\n      \"episode_length\": Number(formElements.episode_length.value),\n      \"status\": formElements.status.value,\n      \"genre\": formElements.genre.value,\n      \"description\": formElements.description.value,\n      \"story\": Number(formElements.story.value),\n      \"illustration\": Number(formElements.illustration.value),\n      \"music\": Number(formElements.music.value),\n      \"passion\": Number(formElements.passion.value),\n      \"start_date\": formElements.start_date.value,\n      \"end_date\": formElements.end_date.value,\n      \"times_watched\": Number(formElements.times_watched.value),\n    };\n    if (isNew) {\n      submitNewRating(newRating);\n    } else {\n      updateRating(id, newRating);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"App\">\n        <AppContext.Provider value={{ authenticated, user, token, setUser, setToken, setAuthenticated }}>\n          <HashRouter basename={process.env.PUBLIC_URL + \"/bangumi-ratings\"}>\n          {/* <HashRouter> */}\n            <Navivation />\n            <Switch>\n              <AnimeDataContext.Provider value={{ratings: ratings, descriptions: descriptions}}>\n                <Route path=\"/login\">\n                  <Login />\n                </Route>\n                <Route path=\"/list\">\n                  {\n                    !authenticated ? <Redirect to=\"/login\" /> :\n                      <AnimeList isLoading={isLoading} loadError={loadError} refresh={fetchRatings} onAnimeSubmit={handleAnimeSubmit} deleteAnime={deleteAnime}/>\n                  }\n                </Route>\n                <Route path=\"/today\">\n                  <div className=\"loading\">开发中</div>\n                </Route>\n                <Route path=\"/calendar\">\n                <div className=\"loading\">开发中</div>\n                </Route>\n              </AnimeDataContext.Provider>\n            </Switch>\n          </HashRouter>\n        </AppContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}