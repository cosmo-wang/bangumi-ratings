{"version":3,"sources":["environments.js","context/AuthenticationContext.jsx","components/Navigation.js","context/AnimeDataContext.jsx","components/SortHeader.js","components/FilterBox.js","components/FilterHeader.js","components/DropdownHeader.js","components/Description.js","components/AnimeModal.js","utils/utils.js","components/AnimeList.js","components/NewAnimeList.js","components/MonthlySummary.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APPLICATION_ID","JAVASCRIPT_KEY","SERVER_URL","AuthenticationContext","createContext","useAuthenticationContext","useContext","UserManagement","authenticated","setAuthenticating","handleSignOut","id","className","onClick","Navigation","props","Navbar","sticky","expand","Brand","href","Nav","activeKey","window","location","pathname","Item","Link","switchPage","animeData","ratings","newAnimes","monthlySummaries","AnimeDataContext","React","SortHeader","key","header","sort","FilterBox","useState","displayBox","setDisplayBox","placeholder","type","onKeyPress","e","filter","clearFilter","FilterHeader","DropdownHeader","name","onChange","event","filterStatus","value","selected","Description","description","undefined","target","rel","douban","year","genre","episodes","episode_length","AnimeModal","oldValue","Form","onSubmit","onSubmitOrEdit","Group","controlId","Label","Control","defaultValue","Row","Col","status","tv_episodes","movies","as","rows","story","music","passion","start_date","end_date","times_watched","Button","formatEpisodes","formatTime","time","isNaN","Math","round","calculateDailyTime","row","days","diff","translateHeader","sortList","rawList","sortedCol","slice","a","b","aQuantity","bQuantity","isValid","compare","AnimeList","watchedHeaders","wantToWatchHeaders","activeDescription","setActiveDescription","showDescription","setShowDescription","showAnimeModal","setShowAnimeModal","showAnimeModalAuto","setShowAnimeModalAuto","showDeleteConfirmation","setShowDeleteConfirmation","submitNewAnime","setSubmitNewAnime","submitNewAnimeAuto","setSubmitNewAnimeAuto","animeToDelete","setAnimeToDelete","activeId","setActiveId","displayListStatus","setDisplayListStatus","displayList","setDisplayList","tableHeaders","setTableHeaders","filterList","setFilterList","setSortedCol","editAnimeOldValue","setEditAnimeOldValue","useEffect","rating","isLoading","length","item","includes","Object","entries","changeStatus","newStatus","innerHTML","loadError","Alert","variant","Modal","centered","size","show","onHide","Header","Title","Body","Footer","closeButton","preventDefault","onAnimeSubmit","info","pageSrc","split","parseInt","error","console","trim","parseDoubanPage","elements","html","illustration","deleteAnime","refresh","Table","striped","borderless","hover","map","newFilterList","idx","substring","formatDescription","format","NewAnimeModal","season","next_episode_day","season_rank","formElements","document","getElementById","handleRateNewAnime","Number","NewAnimeList","seasons","setSeasons","showAddModal","setShowAddModal","showRateModal","setShowRateModal","displayListSeason","setDisplayListSeason","rateAnimePartialInfo","setRateAnimePartialInfo","changeSeason","newAnime","d","Date","getFullYear","month","floor","getMonth","preSeason","nextSeason","getSeason","onNewAnimeSubmit","partialInfo","deleteNewAnime","QuoteModificationContext","useQuoteModificationContext","Quote","setQuoteToEdit","setShowQuoteModal","setIsNewQuote","setActiveQuoteId","quote","content","translation","person","bangumi","Summary","addNewQuote","moment","summary","bangumi_num","tv_episode_num","total_time","daysInMonth","quotes","bangumis","bangumi_name","MonthlySummary","isNewQuote","showQuoteModal","activeQuoteId","quoteToEdit","activeMonth","setActiveMonth","onQuoteSubmit","deleteQuote","keys","Provider","Login","username","password","setUsername","setPassword","handleLogin","autoFocus","disabled","Parse","initialize","Env","serverURL","App","setAuthenticated","authenticating","userStr","sessionStorage","getItem","JSON","parse","getUser","user","setUser","token","setToken","setIsLoading","setLoadError","activePage","setActivePage","setRatings","setNewAnimes","summaries","setSummaries","setQuotes","fetchRatings","ratingsObj","extend","query","Query","limit","find","then","results","log","result","get","toFixed","fetchQuotes","quotesObj","fetchNewAnimes","submitNewEntry","newEntry","databaseName","DataObject","equalTo","alert","newObj","set","save","submitNewQuote","newQuote","QuotesObj","newQuotesObj","updateEntry","obj","object","response","updateQuote","deleteEntry","destroy","tempSummaries","forEach","endMonth","movie_num","daily_time","push","handleAnimeSubmit","isNew","newRating","handleNewAnimeSubmit","handleQuoteSubmit","User","logIn","setItem","stringify","setUserSession","getSessionToken","getUsername","catch","message","removeItem","mainElement","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87cc55eb.chunk.js","sourcesContent":["module.exports = {\n    APPLICATION_ID: '54T0X4tWovUBdnRd6EKdW3BrN4WJrpGBEJdwDk9J',\n    JAVASCRIPT_KEY: 'WREbi60D2GfVknGhH9Je1GJ931oIhIVkHUXD9u5R',\n    SERVER_URL: 'https://parseapi.back4app.com/'\n}","import { useContext, createContext } from \"react\";\n\nexport const AuthenticationContext = createContext(null);\n\nexport function useAuthenticationContext() {\n  return useContext(AuthenticationContext);\n}","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { useAuthenticationContext } from \"../context/AuthenticationContext\";\nimport './Navigation.css';\nimport '../App.css';\n\nfunction UserManagement() {\n  const { authenticated, setAuthenticating, handleSignOut } = useAuthenticationContext();\n  if (authenticated) {\n    return <div id=\"user-management\">\n        <div className=\"text-button clickable\" onClick={handleSignOut}>注销</div>\n      </div>\n  } else {\n    return <div className=\"text-button clickable\" onClick={() => setAuthenticating(true)}>登陆</div>\n  }\n}\n\nfunction Navigation(props) {\n  return (\n    <Navbar sticky=\"top\" expand=\"lg\" id=\"navbar\">\n      <Navbar.Brand href=\"/\">追番补番</Navbar.Brand>\n      <Nav className=\"mr-auto\" activeKey={window.location.pathname}>\n        <Nav.Item><Nav.Link onClick={() => props.switchPage(\"AnimeList\")}>补番列表</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link onClick={() => props.switchPage(\"NewAnimeList\")}>追番列表</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link onClick={() => props.switchPage(\"MonthlySummary\")}>每月总结</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link onClick={() => props.switchPage(\"SeasonalSummary\")}>季度总结</Nav.Link></Nav.Item>\n      </Nav>\n      <UserManagement />\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\n\nconst animeData = {\n  ratings: [],\n  newAnimes: [],\n  monthlySummaries: {}\n}\n\nconst AnimeDataContext = React.createContext(animeData);\n\nexport default AnimeDataContext;","import React from 'react';\nimport { BiSort } from \"react-icons/bi\";\nimport '../App.css';\n\nexport default function SortHeader(props) {\n  return (\n    <th key={props.header}>\n      <div className='table-header'>\n        <div>{props.header}</div>\n        <BiSort className='icon clickable' onClick={props.sort}/>\n      </div>\n    </th>\n  );\n}","import React, { useState } from 'react';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './FilterBox.css';\nimport '../App.css';\n\nexport default function FilterBox(props) {\n  const [displayBox, setDisplayBox] = useState(false);\n  return (displayBox ? \n    <div className=\"filter-box\">\n      <input className=\"filter-input-box\" placeholder=\"输入......\" type=\"text\" onKeyPress={(e) => {\n        if (e.key === \"Enter\") props.filter(e);\n      }}/>\n      <div className=\"close-button clickable\" onClick={() => {\n        props.clearFilter();\n        setDisplayBox(!displayBox)\n      }}>&times;</div>\n    </div> :\n    <AiOutlineSearch className=\"filter-box icon clickable\" onClick={() => setDisplayBox(!displayBox)}/>);\n}\n","import React from 'react';\nimport FilterBox from './FilterBox';\nimport './FilterHeader.css';\n\nexport default function FilterHeader(props) {\n  return (\n    <th key={props.header}>\n      <div className='table-header'>\n        <div>{props.header}</div>\n        <FilterBox filter={props.filter} clearFilter={props.clearFilter}/>\n      </div>\n    </th>\n  );\n}","import React from 'react';\nimport './DropdownHeader.css';\n\nexport default function DropdownHeader(props) {\n  return <th key={props.header}>\n    <select id=\"status\" className=\"dropdown-header\" name=\"status\" onChange={(event) => props.filterStatus(event)}>\n      <option value=\"\" selected>状态</option>\n      <option value=\"想看\">想看</option>\n      <option value=\"在看\">在看</option>\n      <option value=\"已看\">已看</option>\n    </select>\n  </th>\n};","import React from 'react';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './Description.css';\n\nexport default function Description(props) {\n  const description = props.description;\n  return description === undefined || description === null ? \n    <p>暂无简介</p> :\n    <div className=\"description\">\n      <div>\n        <h1>\n          {description.name}\n          <a href={\"https://www.douban.com/search?q=\" + description.name} target=\"_blank\" rel=\"noopener noreferrer\">\n            <AiOutlineSearch className=\"icon clickable\" />\n          </a>\n        </h1>\n        <p>豆瓣评分：{description.douban}</p>\n        <p>年份：{description.year}</p>\n        <p>分类：{description.genre}</p>\n        <p>集数：{description.episodes}</p>\n        <p>单集片长：{description.episode_length}</p>\n        <p>简介：{description.description}</p>\n      </div>\n    </div>;\n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport './AnimeModal.css';\nimport '../App.css';\n\nexport default function AnimeModal(props) {\n  const oldValue = props.oldValue === undefined || props.oldValue === null ? {} : props.oldValue;\n  return <Form onSubmit={(event) => {props.onSubmitOrEdit(event, props.id)}}>\n    <Form.Group controlId=\"name\">\n      <Form.Label>名称</Form.Label>\n      <Form.Control defaultValue={oldValue.name} type=\"input\" />\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>豆瓣评分<a href={\"https://www.douban.com\"} target=\"_blank\" rel=\"noopener noreferrer\"><AiOutlineSearch className=\"icon clickable\" /></a></Form.Label><Form.Control defaultValue={oldValue.douban} id=\"douban\" type=\"input\"/></Col>\n        <Col><Form.Label>年份</Form.Label><Form.Control defaultValue={oldValue.year} id=\"year\" type=\"input\"/></Col>\n        <Col><Form.Label>状态</Form.Label><Form.Control defaultValue={oldValue.status} id=\"status\" type=\"input\"/></Col>\n      </Form.Row>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>分类</Form.Label><Form.Control defaultValue={oldValue.genre} id=\"genre\" type=\"input\"/></Col>\n        <Col><Form.Label>TV集数</Form.Label><Form.Control defaultValue={oldValue.tv_episodes} id=\"tv_episodes\" type=\"input\"/></Col>\n        <Col><Form.Label>剧场版</Form.Label><Form.Control defaultValue={oldValue.movies} id=\"movies\" type=\"input\"/></Col>\n        <Col><Form.Label>单集片长</Form.Label><Form.Control defaultValue={oldValue.episode_length} id=\"episode_length\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Form.Group>\n      <Form.Label>简介</Form.Label>\n      <Form.Control defaultValue={oldValue.description} id=\"description\" as=\"textarea\" rows=\"3\" />\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>剧情评分</Form.Label><Form.Control defaultValue={oldValue.story} id=\"story\" type=\"input\"/></Col>\n        <Col><Form.Label>作画评分</Form.Label><Form.Control defaultValue={oldValue.story} id=\"illustration\" type=\"input\"/></Col>\n        <Col><Form.Label>音乐评分</Form.Label><Form.Control defaultValue={oldValue.music} id=\"music\" type=\"input\"/></Col>\n        <Col><Form.Label>情怀评分</Form.Label><Form.Control defaultValue={oldValue.passion} id=\"passion\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>开始观看日期</Form.Label><Form.Control defaultValue={oldValue.start_date} id=\"start_date\" type=\"input\"/></Col>\n        <Col><Form.Label>结束观看日期</Form.Label><Form.Control defaultValue={oldValue.end_date} id=\"end_date\" type=\"input\"/></Col>\n        <Col><Form.Label>观看次数</Form.Label><Form.Control defaultValue={oldValue.times_watched} id=\"times_watched\" type=\"input\"/></Col>\n      </Form.Row>\n    </Form.Group>\n    <Button className=\"pink-button\" type=\"submit\">\n      提交\n    </Button>\n\n  </Form>\n}\n","// return the user data from the session storage\nexport const getUser = () => {\n  const userStr = sessionStorage.getItem('user');\n  if (userStr) return JSON.parse(userStr);\n  else return null;\n}\n \n// return the token from the session storage\nexport const getToken = () => {\n  return sessionStorage.getItem('token') || null;\n}\n \n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('token');\n  sessionStorage.removeItem('user');\n}\n \n// set the token and user from the session storage\nexport const setUserSession = (user, token) => {\n  sessionStorage.setItem('token', token);\n  sessionStorage.setItem('user', JSON.stringify(user));\n}\n\nexport function formatEpisodes(tv_episodes, movies) {\n  if (tv_episodes === undefined || movies === undefined) {\n    return \"\";\n  } else if (tv_episodes === 0) {\n    return `剧场版×${movies}`;\n  } else if (movies === 0) {\n    return `${tv_episodes}集`;\n  } else {\n    return `${tv_episodes}集+剧场版×${movies}`;\n  }\n}\n\nexport function formatDate(start_date, end_date) {\n  if (!start_date.isValid()) {\n    return \"\"\n  } else if (!end_date.isValid()) {\n    return `${start_date.format('MM/DD/YY')}至今`;\n  } else {\n    return `${start_date.format('MM/DD/YY')} 至 ${end_date.format('MM/DD/YY')}`;\n  }\n}\n\nexport function formatTime(time) {\n  if (isNaN(time)) {\n    return \"-\";\n  }\n  if (time >= 60) {\n    return Math.round(time / 60 * 10) / 10 + \" 小时\";\n  } else {\n    return Math.round(time * 10) / 10 + \" 分钟\";\n  }\n}\n\nexport function calculateDailyTime(row) {\n  const days = row.end_date.diff(row.start_date, 'days') + 1;\n  const episode_length = row.episode_length === undefined || row.episode_length === 0 ? 24 : row.episode_length;\n  const totalTime = row.tv_episodes * episode_length + row.movies * 90;\n  return totalTime / days;\n}\n\nexport function translateHeader(header) {\n  switch(header) {\n    case '名称':\n      return 'name';\n    case '集数':\n    case '预计集数':\n      return 'tv_episodes';\n    case '状态':\n      return 'status';\n    case '分类':\n      return 'genre';\n    case '剧情':\n      return 'story';\n    case '作画':\n      return 'illustration';\n    case '音乐':\n      return 'music';\n    case '情怀':\n      return 'passion';\n    case '评分':\n      return 'rating';\n    case '首次观看日期':\n      return 'end_date';\n    case '观看次数':\n      return 'times_watched';\n    case '年份':\n      return 'year';\n    case '豆瓣评分':\n      return 'douban';\n    case '日均时长':\n      return 'daily_time';\n    case '排名':\n      return 'ranking';\n    case '季度':\n      return 'season';\n    case '开始放送日期':\n      return 'start_date';\n    case '更新日':\n      return 'next_episode_day';\n    default:\n      return 'unknown';\n  }\n}\n\nexport function sortList(rawList, sortedCol) {\n  return rawList.slice().sort((a, b) => {\n    const aQuantity = sortedCol === \"daily_time\" ? calculateDailyTime(a) : a[sortedCol];\n    const bQuantity = sortedCol === \"daily_time\" ? calculateDailyTime(b) : b[sortedCol];\n    if (sortedCol === \"start_date\") {\n      if (!aQuantity.isValid()) {\n        return 1;\n      } else if (!bQuantity.isValid()) {\n        return -1;\n      } else {\n        return compare(aQuantity, bQuantity);\n      }\n    } else {\n      return compare(aQuantity, bQuantity);\n    }\n  });\n}\n\nfunction compare(a, b) {\n  if (a > b) {\n    return -1;\n  } else if (a < b) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nexport function parseDoubanPage(pageSrc) {\n  const name = pageSrc.split(\"\\n\")[5].split(\" \")[0];\n  const year = pageSrc.split(\"首播: \")[1].split(\"-\")[0];\n  const douban = pageSrc.split(\"豆瓣评分\")[1].split(\"\\n\")[1];\n  let tv_episodes = 12;\n  try {\n    tv_episodes = parseInt(pageSrc.split(\"集数: \")[1].split(\"-\")[0]);\n  } catch (error) {\n    console.error(error);\n  }\n  let episode_length = 24;\n  try {\n    episode_length = parseInt(pageSrc.split(\"单集片长: \")[1].split(\"-\")[0]);\n  } catch (error) {\n    console.error(error);\n  }\n  const description = pageSrc.split(\"的剧情简介 · · · · · ·\")[1].split(\"\\n\\n\")[1].trim();\n  return {\n    name: name,\n    year: year,\n    douban: douban,\n    tv_episodes: isNaN(tv_episodes) ? 0 : tv_episodes,\n    episode_length: isNaN(episode_length) ? 12: episode_length,\n    description: description,\n  }\n}\n\nexport function getSeason() {\n  const d = new Date();\n  const year = d.getFullYear();\n  const month = Math.floor(d.getMonth()/3) + 1;\n  const curSeason = year + \"年\" + month + \"月\";\n  let preSeason = year + \"年\" + (month - 3) + \"月\";\n  let nextSeason = year + \"年\" + (month + 3) + \"月\";\n  if (month === 1) {\n    preSeason = (year - 1) + \"年10月\";\n  }\n  if (month === 10) {\n    nextSeason = (year + 1) + \"年1月\";\n  }\n  return [preSeason, curSeason, nextSeason];\n}","import React, { useState, useEffect } from 'react';\nimport AnimeDataContext from '../context/AnimeDataContext';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport { BiEditAlt, BiTrash } from \"react-icons/bi\";\nimport { useAuthenticationContext } from \"../context/AuthenticationContext\";\nimport SortHeader from './SortHeader';\nimport FilterHeader from './FilterHeader';\nimport DropdownHeader from './DropdownHeader';\nimport Description from './Description';\nimport AnimeModal from './AnimeModal';\nimport { sortList, formatEpisodes, formatDate, translateHeader, calculateDailyTime, formatTime, parseDoubanPage } from \"../utils/utils\";\nimport '../App.css';\nimport './AnimeList.css';\n\nfunction AnimeList(props) {\n\n  const { authenticated } = useAuthenticationContext();\n  \n  const { ratings } = React.useContext(AnimeDataContext);\n\n  const watchedHeaders = ['序号', '名称', '集数', '分类', '剧情', '作画', '音乐', '情怀', '评分', '首次观看日期', '日均时长', ''];\n  const wantToWatchHeaders = ['序号', '名称', '集数', '分类', '年份', '豆瓣评分', '简介', ''];\n  const [activeDescription, setActiveDescription] = useState(null);\n  const [showDescription, setShowDescription] = useState(false);\n  const [showAnimeModal, setShowAnimeModal] = useState(false);\n  const [showAnimeModalAuto, setShowAnimeModalAuto] = useState(false);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [submitNewAnime, setSubmitNewAnime] = useState(false);\n  const [submitNewAnimeAuto, setSubmitNewAnimeAuto] = useState(false);\n  const [animeToDelete, setAnimeToDelete] = useState({});\n  const [activeId, setActiveId] = useState();\n  const [displayListStatus, setDisplayListStatus] = useState(\"已看\");\n  const [displayList, setDisplayList] = useState(ratings);\n  const [tableHeaders, setTableHeaders] = useState(watchedHeaders);\n  const [filterList, setFilterList] = useState({});\n  const [sortedCol, setSortedCol] = useState();\n  const [editAnimeOldValue, setEditAnimeOldValue] = useState(null);\n\n  useEffect(() => {setSortedCol(\"end_date\")}, []);\n\n  useEffect(() => {\n    setFilterList([]);\n    setDisplayList(sortList(ratings.filter((rating) => rating.status === displayListStatus), \"end_date\"));\n  }, [props.isLoading, ratings, displayListStatus]);\n\n  useEffect(() => {\n    if (sortedCol !== null) {\n      setDisplayList(sortList(ratings.filter((rating) => rating.status === displayListStatus), sortedCol));\n      setSortedCol(null);\n    }\n  }, [sortedCol, ratings, displayListStatus]);\n\n  useEffect(() => {\n    if (filterList.length !== 0) {\n      for (const [key, value] of Object.entries(filterList)) {\n        setDisplayList(ratings.filter((item) => {\n          return item[key].includes(value) && item.status === displayListStatus;\n        }));\n      }\n      setFilterList([]);\n    }\n  }, [ratings, filterList, displayListStatus]);\n\n  const changeStatus = (e) => {\n    const newStatus = e.target.innerHTML;\n    if (newStatus === '想看') {\n      setTableHeaders(wantToWatchHeaders);\n    } else {\n      setTableHeaders(watchedHeaders);\n    }\n    setDisplayListStatus(newStatus);\n  }\n\n  const formatDescription = (description) => {\n    if (description !== null && description !== undefined) {\n      return description.substring(0, 20) + '......';\n    }\n  }\n\n  if (props.isLoading) {\n    return <div className=\"loading\">\n      <div>正在加载......</div>\n    </div> ;\n  } else if (props.loadError) {\n    return <Alert variant='danger'>\n      番剧评分加载失败！\n    </Alert>;\n  } else {\n    return (<div className=\"main-element\">\n      <Modal centered size='lg' show={showDescription} onHide={() => setShowDescription(false)}>\n        <Modal.Header>\n          <Modal.Title>简介</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Description description={activeDescription}/>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button className=\"pink-button\" onClick={() => setShowDescription(false)}>\n            关闭\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal centered size='lg' show={showAnimeModal} onHide={() => setShowAnimeModal(false)}>\n        <Modal.Header closeButton>\n        <Modal.Title>{submitNewAnime ? \"添加新番剧\" : \"编辑番剧\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AnimeModal\n            onSubmitOrEdit={(event, id) => {\n              event.preventDefault();\n              if (submitNewAnime) {\n                props.onAnimeSubmit(event, null, true);\n              } else if (submitNewAnimeAuto) {\n                props.onAnimeSubmit(event, null, true);\n              } else {\n                props.onAnimeSubmit(event, id, false);\n              }\n              setShowAnimeModal(false);\n            }}\n            oldValue={editAnimeOldValue}\n            id={activeId}\n          />\n        </Modal.Body>\n      </Modal>\n      <Modal centered size='lg' show={showAnimeModalAuto} onHide={() => setShowAnimeModalAuto(false)}>\n        <Modal.Header closeButton>\n        <Modal.Title>添加新番剧</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={(event) => {\n            event.preventDefault();\n            const info = parseDoubanPage(event.target.elements.html.value);\n            setEditAnimeOldValue({\n              name: info.name,\n              year: info.year,\n              douban: info.douban,\n              tv_episodes: info.tv_episodes,\n              movies: 0,\n              episode_length: info.episode_length,\n              status: \"想看\",\n              genre: \"\",\n              description: info.description,\n              story: 0,\n              illustration: 0,\n              music: 0,\n              passion: 0,\n              start_date: null,\n              end_date: null,\n              times_watched: 0,\n            });\n            setSubmitNewAnimeAuto(true);\n            setShowAnimeModalAuto(false);\n            setActiveId(null);\n            setShowAnimeModal(true);\n          }}>\n            <Form.Group>\n              <Form.Label>豆瓣页面源</Form.Label>\n              <Form.Control id=\"html\" as=\"textarea\" rows=\"10\" />\n            </Form.Group>\n            <Button className=\"pink-button\" type=\"submit\">\n              提交\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <Modal centered size=\"sm\" show={showDeleteConfirmation} onHide={() => setShowDeleteConfirmation(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>删除番剧</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{`确定要删除番剧“${animeToDelete.name}”吗`}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => {\n            setAnimeToDelete({});\n            setShowDeleteConfirmation(false);\n          }}>取消</Button>\n          <Button variant=\"danger\" onClick={() => {\n            props.deleteAnime(animeToDelete.id, \"Ratings\");\n            setAnimeToDelete({});\n            setShowDeleteConfirmation(false);\n          }}>确定</Button>\n        </Modal.Footer>\n      </Modal>\n      <div className=\"button-group\">\n        <div>\n          <Button className=\"pink-button\" onClick={changeStatus}>已看</Button>\n          <Button className=\"pink-button\" onClick={changeStatus}>在看</Button>\n          <Button className=\"pink-button\" onClick={changeStatus}>想看</Button>\n        </div>\n        <div>\n          {authenticated ? <Button className=\"pink-button\" onClick={() => {\n            setEditAnimeOldValue(null);\n            setActiveId(null);\n            setShowAnimeModal(true);\n            setSubmitNewAnime(true);\n          }}>手动添加</Button> : <></>}\n          {authenticated ? <Button className=\"pink-button\" onClick={() => {\n            setEditAnimeOldValue(null);\n            setActiveId(null);\n            setShowAnimeModalAuto(true);\n            setSubmitNewAnime(true);\n          }}>自动添加</Button> : <></>}\n          <Button className=\"pink-button\" onClick={props.refresh}>刷新</Button>\n        </div>\n      </div>\n      <div>\n        <Table striped borderless hover size=\"sm\" variant=\"light\" id=\"table\">\n          <thead>\n            <tr className='table-headers'>\n              {tableHeaders.map(header => {\n                if (header === '名称' || header === '分类') {\n                  return <FilterHeader key={header} header={header}\n                    filter={(e) => {\n                      let newFilterList = {};\n                      for (let item in filterList) {\n                        newFilterList[item] = filterList[item];\n                      }\n                      newFilterList[translateHeader(header)] = e.target.value;\n                      setFilterList(newFilterList);\n                    }}\n                    clearFilter={() => {\n                      setFilterList([]);\n                      setDisplayList(sortList(ratings.filter((rating) => rating.status === displayListStatus), \"end_date\"));\n                    }}\n                  />;\n                } else if (header === '状态') {\n                  return <DropdownHeader key={header} header={header} filterStatus={(event) => {\n                    setFilterList({\"status\": event.target.value});\n                  }}/>\n                } else if (header !== ''){\n                  return <SortHeader key={header} header={header} sort={() => setSortedCol(translateHeader(header))}/>;\n                } else {\n                  return <th key={header} ></th>\n                }\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {\n              displayList.map((row, idx) =>\n                <tr key={row.name}>\n                  <td>{idx + 1}</td>\n                  <td className='anime-name clickable' onClick={(e) => {\n                    setActiveDescription(\n                      {\n                        name: row.name,\n                        douban: row.douban,\n                        year: row.year,\n                        genre: row.genre,\n                        episodes: row.tv_episodes,\n                        episode_length: row.episode_length,\n                        description: row.description,\n                      }\n                    );\n                    setShowDescription(true);\n                  }}>{row.name}</td>\n                  <td>{formatEpisodes(row.tv_episodes, row.movies)}</td>\n                  <td>{row.genre}</td>\n                  <td>{displayListStatus === '想看' ? row.year : row.story}</td>\n                  <td>{displayListStatus === '想看' ? row.douban : row.illustration}</td>\n                  <td>{displayListStatus === '想看' ? formatDescription(row.description) : row.music}</td>\n                  {displayListStatus === '想看' ? \"\" : <td>{row.passion}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{row.rating}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{formatDate(row.start_date, row.end_date)}</td>}\n                  {displayListStatus === '想看' ? \"\" : <td>{formatTime(calculateDailyTime(row))}</td>}\n                  <td> {authenticated ?\n                      <>\n                        <BiEditAlt className=\"clickable\" onClick={() => {\n                          setActiveId(row.id);\n                          setEditAnimeOldValue({\n                            name: row.name,\n                            year: row.year,\n                            douban: row.douban,\n                            tv_episodes: row.tv_episodes,\n                            movies: row.movies,\n                            episode_length: row.episode_length,\n                            status: row.status,\n                            genre: row.genre,\n                            description: row.description,\n                            story: row.story,\n                            illustration: row.illustration,\n                            music: row.music,\n                            passion: row.passion,\n                            start_date: row.start_date.format('YYYY-MM-DD'),\n                            end_date: row.end_date.format('YYYY-MM-DD'),\n                            times_watched: row.times_watched,\n                          });\n                          setSubmitNewAnime(false);\n                          setShowAnimeModal(true);\n                        }}/><BiTrash className=\"icon clickable\" onClick={() => {\n                          setAnimeToDelete({\n                            name: row.name,\n                            id: row.id,\n                          });\n                          setShowDeleteConfirmation(true);\n                        }}/>\n                      </> : <></>\n                    }\n                    </td>\n                </tr>)\n            }\n          </tbody>\n        </Table>\n      </div>\n    </div>);\n  }\n}\n\nexport default AnimeList;","import React, { useState, useEffect } from 'react';\nimport AnimeDataContext from '../context/AnimeDataContext';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport { BiEditAlt, BiTrash } from \"react-icons/bi\";\nimport { useAuthenticationContext } from \"../context/AuthenticationContext\";\nimport SortHeader from './SortHeader';\nimport AnimeModal from './AnimeModal';\nimport { getSeason, formatEpisodes, translateHeader, sortList } from \"../utils/utils\";\nimport '../App.css';\nimport './NewAnimeList.css';\n\nfunction NewAnimeModal(props) {\n  const oldValue = props.oldValue === undefined || props.oldValue === null ? {} : props.oldValue;\n  return <Form id=\"new-anime-modal\" onSubmit={(event) => {props.onSubmitOrEdit(event, props.id)}}>\n    <Form.Group controlId=\"name\">\n      <Form.Label>名称</Form.Label>\n      <Form.Control defaultValue={oldValue.name} type=\"input\" />\n    </Form.Group>\n    <Form.Row className=\"input-row\">\n        <Col><Form.Label>季度</Form.Label><Form.Control defaultValue={oldValue.season} id=\"season\" type=\"input\"/></Col>\n        <Col><Form.Label>开始放送日期</Form.Label><Form.Control defaultValue={oldValue.start_date} id=\"start_date\" type=\"input\"/></Col>\n        <Col><Form.Label>更新日</Form.Label><Form.Control defaultValue={oldValue.next_episode_day} id=\"next_episode_day\" type=\"input\"/></Col>\n      </Form.Row>\n    <Form.Group>\n      <Form.Row className=\"input-row\">\n        <Col><Form.Label>状态</Form.Label><Form.Control defaultValue={oldValue.status} id=\"status\" type=\"input\"/></Col>\n        <Col><Form.Label>排名</Form.Label><Form.Control defaultValue={oldValue.season_rank} id=\"season_rank\" type=\"input\"/></Col>\n        <Col><Form.Label>分类</Form.Label><Form.Control defaultValue={oldValue.genre} id=\"genre\" type=\"input\"/></Col>\n        <Col><Form.Label>预计集数</Form.Label><Form.Control defaultValue={oldValue.tv_episodes} id=\"tv_episodes\" type=\"input\"/></Col>\n      </Form.Row>\n      <Form.Group>\n      <Form.Label>简介</Form.Label>\n        <Form.Control defaultValue={oldValue.description} id=\"description\" as=\"textarea\" rows=\"3\" />\n      </Form.Group>\n    </Form.Group>\n    <div>\n      <Button className=\"pink-button\" type=\"submit\">\n        提交\n      </Button>\n      {props.submitNewAnime ? <></> : <Button onClick={() => {\n        const formElements = document.getElementById(\"new-anime-modal\").elements;\n        props.handleRateNewAnime({\n          \"name\": formElements.name.value,\n          \"tv_episodes\": Number(formElements.tv_episodes.value),\n          \"genre\": formElements.genre.value,\n          \"description\": formElements.description.value,\n          \"start_date\": formElements.start_date.value,\n          \"status\": formElements.status.value\n        });\n      }}>已追完</Button>}\n    </div>\n\n  </Form>\n}\n\nfunction NewAnimeList(props) {\n\n  const { authenticated } = useAuthenticationContext();\n  const { newAnimes } = React.useContext(AnimeDataContext);\n\n  const tableHeaders = ['排名', '名称', '分类', '季度', '开始放送日期', '更新日', '预计集数', '状态', '']\n\n  const [seasons, setSeasons] = useState([])\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showRateModal, setShowRateModal] = useState(false);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [submitNewAnime, setSubmitNewAnime] = useState(false);\n  const [animeToDelete, setAnimeToDelete] = useState({});\n  const [activeId, setActiveId] = useState();\n  const [displayList, setDisplayList] = useState(newAnimes);\n  const [displayListSeason, setDisplayListSeason] = useState(null);\n  const [editAnimeOldValue, setEditAnimeOldValue] = useState(null);\n  const [sortedCol, setSortedCol] = useState(null);\n  const [rateAnimePartialInfo, setRateAnimePartialInfo] = useState(null);\n\n  useEffect(() => {setSortedCol(\"ranking\")}, []);\n\n  const handleRateNewAnime = (partialInfo) => {\n    partialInfo.status = \"已看\";\n    setRateAnimePartialInfo(partialInfo);\n    setShowAddModal(false);\n    setShowRateModal(true);\n  }\n\n  const changeSeason = (e) => {\n    setDisplayListSeason(e.target.innerHTML);\n  }\n\n  useEffect(() => {\n    if (sortedCol !== null) {\n      setDisplayList(sortList(newAnimes.filter((newAnime) => newAnime.season.includes(displayListSeason)), sortedCol));\n      setSortedCol(null);\n    }\n  }, [sortedCol, newAnimes, displayListSeason]);\n\n  useEffect(() => {\n    const seasons = getSeason();\n    setSeasons(seasons);\n    setDisplayListSeason(seasons[1]);\n  }, [])\n\n  useEffect(() => {\n    setDisplayList(newAnimes.filter((newAnime) => newAnime.season.includes(displayListSeason)));\n  }, [props.isLoading, newAnimes, displayListSeason])\n\n  if (props.isLoading) {\n    return <div className=\"loading\">\n      <div>正在加载......</div>\n    </div> ;\n  } else if (props.loadError) {\n    return <Alert variant='danger'>\n      追番列表加载失败！\n    </Alert>;\n  } else {\n    return (<div className=\"main-element\">\n      <Modal centered size='lg' show={showAddModal} onHide={() => setShowAddModal(false)}>\n        <Modal.Header closeButton>\n        <Modal.Title>{submitNewAnime ? \"添加新追番\" : \"编辑追番\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <NewAnimeModal\n            submitNewAnime={submitNewAnime}\n            onSubmitOrEdit={(event, id) => {\n              event.preventDefault();\n              if (submitNewAnime) {\n                props.onNewAnimeSubmit(event, null, true);\n              } else {\n                props.onNewAnimeSubmit(event, id, false);\n              }\n              setShowAddModal(false);\n            }}\n            oldValue={editAnimeOldValue}\n            id={activeId}\n            handleRateNewAnime={handleRateNewAnime}\n          />\n        </Modal.Body>\n      </Modal>\n      <Modal centered size='lg' show={showRateModal} onHide={() => setShowRateModal(false)}>\n        <Modal.Header closeButton>\n        <Modal.Title>评价番剧</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AnimeModal\n            onSubmitOrEdit={(event, id) => {\n              event.preventDefault();\n              props.onAnimeSubmit(event, id, true);\n              setShowRateModal(false);\n            }}\n            oldValue={rateAnimePartialInfo}\n            id={activeId}\n          />\n        </Modal.Body>\n      </Modal>\n      <Modal centered size=\"sm\" show={showDeleteConfirmation} onHide={() => setShowDeleteConfirmation(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>删除番剧</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{`确定要删除番剧“${animeToDelete.name}”吗`}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => {\n            setAnimeToDelete({});\n            setShowDeleteConfirmation(false);\n          }}>取消</Button>\n          <Button variant=\"danger\" onClick={() => {\n            props.deleteNewAnime(animeToDelete.id, \"NewAnimes\");\n            setAnimeToDelete({});\n            setShowDeleteConfirmation(false);\n          }}>确定</Button>\n        </Modal.Footer>\n      </Modal>\n      <div className=\"button-group\">\n        <div>\n          {seasons.map(season => <Button key={season} className=\"pink-button\" onClick={changeSeason}>\n            {season}\n          </Button>)}\n        </div>\n        <div>\n          {authenticated ? <Button className=\"pink-button\" onClick={() => {\n            setSubmitNewAnime(true);\n            setEditAnimeOldValue(null);\n            setActiveId(null);\n            setShowAddModal(true);\n          }}>添加追番</Button> : <></>}\n          <Button className=\"pink-button\" onClick={props.refresh}>刷新</Button>\n        </div>\n      </div>\n      <div>\n        <Table striped borderless hover size=\"sm\" variant=\"light\" id=\"table\">\n          <thead>\n            <tr className='table-headers'>\n              {tableHeaders.map(header => {\n                if (header === '更新日' || header === '排名'){\n                  return <SortHeader key={header} header={header} sort={() => setSortedCol(translateHeader(header))}/>;\n                } else {\n                  return <th key={header} >{header}</th>\n                }\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {\n              displayList.map(row => \n                <tr key={row.name}>\n                  <td>{row.season_rank}</td>\n                  <td className='anime-name'>{row.name}</td>\n                  <td>{row.genre}</td>\n                  <td>{row.season}</td>\n                  <td>{row.start_date}</td>\n                  <td>{row.next_episode_day}</td>\n                  <td>{formatEpisodes(row.tv_episodes, 0)}</td>\n                  <td>{row.status}</td>\n                  <td> {authenticated ?\n                    <>\n                      <BiEditAlt className=\"clickable\" onClick={() => {\n                        setActiveId(row.id);\n                        setEditAnimeOldValue({\n                          name: row.name,\n                          tv_episodes: row.tv_episodes,\n                          genre: row.genre,\n                          description: row.description,\n                          start_date: row.start_date,\n                          next_episode_day: row.next_episode_day,\n                          season: row.season,\n                          season_rank: row.season_rank,\n                          status: row.status\n                        });\n                        setSubmitNewAnime(false);\n                        setShowAddModal(true);\n                      }}/><BiTrash className=\"icon clickable\" onClick={() => {\n                        setAnimeToDelete({\n                          name: row.name,\n                          id: row.id,\n                        });\n                        setShowDeleteConfirmation(true);\n                      }}/>\n                    </> : <></>\n                  }</td>\n                </tr>  \n              )\n            }\n          </tbody>\n        </Table>\n      </div>\n    </div>);\n  }\n}\n\nexport default NewAnimeList;","import React, { useState, useContext, createContext } from 'react';\nimport moment from 'moment';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport { FiPlusCircle } from \"react-icons/fi\";\nimport { BiEditAlt, BiTrash } from \"react-icons/bi\";\nimport { useAuthenticationContext } from \"../context/AuthenticationContext\";\nimport AnimeDataContext from '../context/AnimeDataContext';\nimport { formatTime } from \"../utils/utils\";\nimport './MonthlySummary.css';\nimport '../App.css';\n\nconst QuoteModificationContext = createContext(null);\n\nfunction useQuoteModificationContext() {\n  return useContext(QuoteModificationContext);\n}\n\nfunction Quote(props) {\n  const { authenticated } = useAuthenticationContext();\n  const { setQuoteToEdit, setShowQuoteModal, setIsNewQuote, setActiveQuoteId, setShowDeleteConfirmation } = useQuoteModificationContext();\n  return <blockquote>\n    <div className=\"quote-content\">{props.quote.content}</div>\n    <div className=\"quote-translation\">{props.quote.translation}</div>\n    <cite>\n      {props.quote.person + \"《\" + props.quote.bangumi + \"》\"}\n      {authenticated ? <BiEditAlt className=\"icon clickable\"\n        onClick={() => {\n          setIsNewQuote(false);\n          setQuoteToEdit(props.quote);\n          setShowQuoteModal(true);\n        }}/> : <></>}\n      {authenticated ? <BiTrash className=\"icon clickable\"\n        onClick={() => {\n          setActiveQuoteId(props.quote.id);\n          setShowDeleteConfirmation(true);\n        }}/> : <></>}\n    </cite>\n  </blockquote>\n}\n\nfunction Summary(props) {\n  const { authenticated } = useAuthenticationContext();\n  const { setIsNewQuote, setQuoteToEdit, addNewQuote } = useQuoteModificationContext();\n  return <div className=\"summary\">\n    <div className=\"summary-title\">\n      <div className=\"summary-info\">\n        <div className=\"year-month\">\n          <div className=\"month\">{moment(props.month).format(\"MM\")}</div>\n          <div className=\"year\">{moment(props.month).format(\"YYYY\")}</div>\n          <div className=\"yue\">月</div>\n        </div>\n        <div className=\"summary-info-pieces\">\n          <div className=\"summary-info-piece\">{\"番剧总数：\" + props.summary.bangumi_num}</div>\n          <div className=\"summary-info-piece\">{\"总集数：\" + props.summary.tv_episode_num}</div>\n          <div className=\"summary-info-piece\">{\"总时长：\" + formatTime(props.summary.total_time)}</div>\n          <div className=\"summary-info-piece\">{\"每日时长：\" + formatTime(props.summary.total_time / moment(props.month).daysInMonth())}</div>\n        </div>\n      </div>\n      <div className=\"summary-quotes\">\n        {\n          props.summary.quotes.length !== 0 ?\n          <>\n            {props.summary.quotes.map((quote) => <Quote quote={quote} setActiveQuoteId={props.setActiveQuoteId}/>)}\n            {authenticated ? <FiPlusCircle \n              className=\"clickable add-more-quote-button\"\n              onClick={() => {\n                addNewQuote(props.month);\n                setIsNewQuote(true);\n                setQuoteToEdit({});\n              }}\n            /> : <></>}\n          </> :\n          (authenticated ? <Button \n            className=\"pink-button add-quote-button\"\n            onClick={() => {\n              addNewQuote(props.month);\n              setQuoteToEdit({});\n            }}\n          >\n          添加语录\n          </Button> : <div className=\"add-quote-button\">暂无语录</div>)\n        }\n      </div>\n    </div>\n    <div className=\"summary-names\">\n      {props.summary.bangumis.map((bangumi_name) => \n        <div className=\"bangumi-name\">{\"• \" + bangumi_name}</div>)}\n    </div>\n  </div>\n}\n\nfunction MonthlySummary(props) {\n  const { monthlySummaries } = useContext(AnimeDataContext);\n\n  const [isNewQuote, setIsNewQuote] = useState(true);\n  const [showQuoteModal, setShowQuoteModal] = useState(false);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [activeQuoteId, setActiveQuoteId] = useState();\n  const [quoteToEdit, setQuoteToEdit] = useState({});\n  const [activeMonth, setActiveMonth] = useState(\"\");\n\n  const addNewQuote = (month) => {\n    setShowQuoteModal(true);\n    setActiveMonth(month);\n  };\n\n  return <div className=\"monthly-summary\">\n      <Modal centered size='lg' show={showQuoteModal} onHide={() => setShowQuoteModal(false)}>\n        <Modal.Header closeButton>\n        <Modal.Title>{isNewQuote ? \"添加新语录\" : \"编辑语录\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Form onSubmit={(event) => {\n            if (isNewQuote) {\n              event.preventDefault();\n              props.onQuoteSubmit(event, activeMonth, quoteToEdit.id, true);\n            } else {\n              event.preventDefault();\n              props.onQuoteSubmit(event, quoteToEdit.month, quoteToEdit.id, false)\n            }\n            setShowQuoteModal(false);\n          }}>\n          <Form.Group controlId=\"content\">\n            <Form.Label>语录原文</Form.Label>\n            <Form.Control defaultValue={quoteToEdit.content} type=\"input\" as=\"textarea\" rows=\"3\"/>\n          </Form.Group>\n          <Form.Group controlId=\"translation\">\n            <Form.Label>中文翻译</Form.Label>\n            <Form.Control defaultValue={quoteToEdit.translation} type=\"input\" as=\"textarea\" rows=\"3\"/>\n          </Form.Group>\n          <Form.Row className=\"input-row\">\n            <Col><Form.Label>人物</Form.Label><Form.Control defaultValue={quoteToEdit.person} id=\"person\" type=\"input\"/></Col>\n            <Col><Form.Label>作品</Form.Label><Form.Control defaultValue={quoteToEdit.bangumi} id=\"bangumi\" type=\"input\"/></Col>\n          </Form.Row>\n          <Button className=\"pink-button\" type=\"submit\">\n            提交\n          </Button>\n        </Form>\n        </Modal.Body>\n      </Modal>\n      <Modal centered size=\"sm\" show={showDeleteConfirmation} onHide={() => setShowDeleteConfirmation(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>删除语录</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{`确定要删除此语录吗`}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => {\n            setActiveQuoteId(null);\n            setShowDeleteConfirmation(false);\n          }}>取消</Button>\n          <Button variant=\"danger\" onClick={() => {\n            props.deleteQuote(activeQuoteId);\n            setActiveQuoteId(null);\n            setShowDeleteConfirmation(false);\n          }}>确定</Button>\n        </Modal.Footer>\n      </Modal>\n    {\n      Object.keys(monthlySummaries).map((month) => \n      <QuoteModificationContext.Provider value={{ setIsNewQuote, setShowQuoteModal, addNewQuote, setQuoteToEdit, setActiveQuoteId, setShowDeleteConfirmation }}>\n        <Summary month={month} summary={monthlySummaries[month]} />\n      </QuoteModificationContext.Provider>)\n    }\n  </div>;\n}\n\nexport default MonthlySummary;","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useAuthenticationContext } from \"../context/AuthenticationContext\";\nimport \"./Login.css\";\nimport \"../App.css\";\n\nexport default function Login() {\n  const { username, password, setAuthenticating, setUsername, setPassword, handleLogin } = useAuthenticationContext();\n\n  const validateForm = () => {\n    return username.length > 0 && password.length > 0;\n  }\n\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleLogin}>\n        <Form.Group size=\"lg\" controlId=\"username\">\n          <Form.Label>用户名</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>密码</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"button-group\">\n          <Button className=\"pink-button\" size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n            登陆\n          </Button>\n          <Button className=\"pink-button\" size=\"lg\" type=\"submit\" onClick={() => setAuthenticating(false)}>\n            取消\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport * as Env from \"./environments\";\nimport Navivation from './components/Navigation';\nimport AnimeDataContext from './context/AnimeDataContext';\nimport AnimeList from './components/AnimeList';\nimport NewAnimeList from './components/NewAnimeList';\nimport MonthlySummary from './components/MonthlySummary';\nimport Login from \"./components/Login\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { AuthenticationContext } from \"./context/AuthenticationContext\";\nimport { sortList, getUser, getToken, setUserSession, removeUserSession } from \"./utils/utils\";\nimport Parse from 'parse';\nimport moment from 'moment';\nimport './App.css';\n\nParse.initialize(Env.APPLICATION_ID, Env.JAVASCRIPT_KEY);\nParse.serverURL = Env.SERVER_URL;\n\nfunction App() {\n  // authentication related states\n  const [authenticated, setAuthenticated] = useState(false);\n  const [authenticating, setAuthenticating] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(getUser());\n  const [token, setToken] = useState(getToken());\n  // page status related states\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n  const [activePage, setActivePage] = useState(\"AnimeList\")\n\n  // data related states\n  const [ratings, setRatings] = useState([]);\n  const [newAnimes, setNewAnimes] = useState([]);\n  const [summaries, setSummaries] = useState({});\n  const [quotes, setQuotes] = useState([]);\n\n  const fetchRatings = async () => {\n    setIsLoading(true);\n    const ratingsObj = Parse.Object.extend('Ratings');\n    const query = new Parse.Query(ratingsObj);\n    query.limit(1000);\n    query.find().then((results) => {\n      console.log(\"calling server for ratings\");\n      if (typeof document !== 'undefined'){\n        const ratings = results.map((result) => {\n          return {\n            id: result.id,\n            name: result.get(\"name\"),\n            year: result.get(\"year\"),\n            douban: result.get(\"douban\"),\n            tv_episodes: result.get(\"tv_episodes\"),\n            movies: result.get(\"movies\"),\n            episode_length: result.get(\"episode_length\"),\n            status: result.get(\"status\"),\n            genre: result.get(\"genre\"),\n            description: result.get(\"description\"),\n            story: result.get(\"story\"),\n            illustration: result.get(\"illustration\"),\n            music: result.get(\"music\"),\n            passion: result.get(\"passion\"),\n            rating: Number((result.get(\"story\") + result.get(\"illustration\") + result.get(\"music\") + result.get(\"passion\")).toFixed(1)),\n            start_date: moment(result.get(\"start_date\"), 'YYYY-MM-DD'),\n            end_date: moment(result.get(\"end_date\"), 'YYYY-MM-DD'),\n            times_watched: result.get(\"times_watched\"),\n          }}\n        );\n        setRatings(sortList(ratings, \"start_date\"));\n        setIsLoading(false);\n      }\n    }, (error) => {\n      setIsLoading(false);\n      setLoadError(true);\n      console.error('Error while fetching ratings', error);\n    });\n  };\n\n  const fetchQuotes = async () => {\n    const quotesObj = Parse.Object.extend('Quotes');\n    const query = new Parse.Query(quotesObj);\n    query.limit(1000);\n    query.find().then((results) => {\n      console.log(\"calling server for quotes\");\n      if (typeof document !== 'undefined'){\n        const quotes = results.map((result) => {\n          return {\n            id: result.id,\n            month: result.get(\"month\"),\n            content: result.get(\"content\"),\n            translation: result.get(\"translation\"),\n            person: result.get(\"person\"),\n            bangumi: result.get(\"bangumi\"),\n          }}\n        );\n        setQuotes(quotes);\n      }\n    }, (error) => {\n      setLoadError(true);\n      console.error('Error while fetching quotes', error);\n    });\n  }\n\n  const fetchNewAnimes = async () => {\n    setIsLoading(true);\n    const quotesObj = Parse.Object.extend('NewAnimes');\n    const query = new Parse.Query(quotesObj);\n    query.limit(1000);\n    query.find().then((results) => {\n      console.log(\"calling server for new animes\");\n      if (typeof document !== 'undefined'){\n        const newAnimes = results.map((result) => {\n          return {\n            id: result.id,\n            name: result.get(\"name\"),\n            genre: result.get(\"genre\"),\n            season_rank: result.get(\"season_rank\"),\n            start_date: result.get(\"start_date\"),\n            next_episode_day: result.get(\"next_episode_day\"),\n            tv_episodes: result.get(\"tv_episodes\"),\n            description: result.get(\"description\"),\n            season: result.get(\"season\"),\n            status: result.get(\"status\"),\n          }}\n        );\n        newAnimes.sort((a, b) => {\n          if (a.season_rank > b.season_rank) return 1;\n          if (a.season_rank < b.season_rank) return -1;\n          return 0;\n        })\n        setNewAnimes(newAnimes);\n        setIsLoading(false);\n      }\n    }, (error) => {\n      setIsLoading(false);\n      setLoadError(true);\n      console.error('Error while fetching new animes', error);\n    });\n  }\n\n  const submitNewEntry = async (newEntry, databaseName) => {\n    const DataObject = Parse.Object.extend(databaseName);\n    const query = new Parse.Query(DataObject);\n    query.equalTo(\"name\", newEntry.name);\n    const results = await query.find();\n    if (results.length > 0) {\n      alert(\"番剧《\" + newEntry.name + \"》已存在！请勿重复添加番剧！\")\n    } else {\n      const newObj = new DataObject();\n      for (const [key, value] of Object.entries(newEntry)) {\n        newObj.set(key, value)\n      }\n      newObj.save().then(\n        (result) => {\n          alert(\"已提交番剧信息！\");\n          if (databaseName === \"Ratings\") {\n            fetchRatings();\n          } else if (databaseName === \"NewAnimes\") {\n            fetchNewAnimes();\n          }\n        },\n        (error) => {\n          alert(\"更新失败，请稍后重试。\");\n        }\n      );\n    }\n  };\n\n  const submitNewQuote = async (newQuote) => {\n    const QuotesObj = Parse.Object.extend('Quotes');\n    const newQuotesObj = new QuotesObj();\n    for (const [key, value] of Object.entries(newQuote)) {\n      newQuotesObj.set(key, value)\n    }\n    newQuotesObj.save().then(\n      (result) => {\n        alert(\"已添加语录！\");\n        fetchQuotes();\n      },\n      (error) => {\n        alert(\"添加失败，请稍后重试。\");\n      }\n    );\n  };\n\n  const updateEntry = async (id, newEntry, databaseName) => {\n    const obj = Parse.Object.extend(databaseName);\n    const query = new Parse.Query(obj);\n    query.get(id).then((object) => {\n      for (const [key, value] of Object.entries(newEntry)) {\n        object.set(key, value)\n      }\n      object.save().then((response) => {\n        alert(\"已更新番剧信息！\");\n        if (databaseName === \"Ratings\") {\n          fetchRatings();\n        } else if (databaseName === \"NewAnimes\") {\n          fetchNewAnimes();\n        }\n      }, (error) => {\n        alert(\"更新失败，请稍后重试。\");\n      });\n    });\n  };\n\n  const updateQuote = async (id, newQuote) => {\n    const QuotesObj = Parse.Object.extend('Quotes');\n    const query = new Parse.Query(QuotesObj);\n    query.get(id).then((object) => {\n      for (const [key, value] of Object.entries(newQuote)) {\n        object.set(key, value)\n      }\n      object.save().then((response) => {\n        alert(\"已更新语录！\");\n        fetchQuotes();\n      }, (error) => {\n        alert(\"更新失败，请稍后重试。\");\n      });\n    });\n  };\n  \n  const deleteEntry = async (id, databaseName) => {\n    const obj = Parse.Object.extend(databaseName);\n    const query = new Parse.Query(obj);\n    query.get(id).then((object) => {\n      object.destroy().then((response) => {\n        alert(\"已删除番剧！\");\n        if (databaseName === \"Ratings\") {\n          fetchRatings();\n        } else if (databaseName === \"NewAnimes\") {\n          fetchNewAnimes();\n        }\n      }, (error) => {\n        alert(\"删除失败，请稍后重试。\");\n      });\n    });\n  };\n\n  const deleteQuote = async (id) => {\n    const quotesObj = Parse.Object.extend('Quotes');\n    const query = new Parse.Query(quotesObj);\n    query.get(id).then((object) => {\n      object.destroy().then((response) => {\n        alert(\"已删除语录！\");\n        fetchQuotes();\n      }, (error) => {\n        alert(\"删除失败，请稍后重试。\");\n      });\n    });\n  };\n\n  useEffect(() => {\n    fetchRatings();\n    fetchNewAnimes();\n    fetchQuotes();\n  }, [])\n\n  useEffect(() => {\n    const tempSummaries = {};\n    ratings.filter((rating) => rating.status === \"已看\").forEach((bangumi) => {\n      let endMonth = moment(bangumi.end_date).format('YYYY-MM');\n      if (!(endMonth in tempSummaries)) {\n        tempSummaries[endMonth] = {\n          bangumi_num: 0,\n          tv_episode_num: 0,\n          movie_num: 0,\n          total_time: 0,\n          daily_time: 0,\n          bangumis: [],\n          quotes: [],\n        };\n      }\n      tempSummaries[endMonth].bangumi_num += 1;\n      tempSummaries[endMonth].bangumis.push(bangumi.name);\n      tempSummaries[endMonth].tv_episode_num += bangumi.tv_episodes;\n      tempSummaries[endMonth].movie_num += bangumi.movies;\n      tempSummaries[endMonth].total_time += bangumi.tv_episodes * bangumi.episode_length + bangumi.movies * 90;\n    });\n    quotes.forEach((quote) => {\n      let month = moment(quote.month).format('YYYY-MM');\n      if (month in tempSummaries) {\n        tempSummaries[month].quotes.push(quote);\n      }\n    });\n    setSummaries(tempSummaries);\n  }, [ratings, quotes])\n\n  useEffect(() => {\n    if (user != null && token != null) {\n      setAuthenticated(true);\n    }\n  }, [user, token])\n\n  const handleAnimeSubmit = (event, id, isNew) => {\n    event.preventDefault();\n    const formElements = event.target.elements;\n    const newRating = {\n      \"name\": formElements.name.value,\n      \"year\": formElements.year.value,\n      \"douban\": Number(formElements.douban.value),\n      \"tv_episodes\": Number(formElements.tv_episodes.value),\n      \"movies\": Number(formElements.movies.value),\n      \"episode_length\": Number(formElements.episode_length.value),\n      \"status\": formElements.status.value,\n      \"genre\": formElements.genre.value,\n      \"description\": formElements.description.value,\n      \"story\": Number(formElements.story.value),\n      \"illustration\": Number(formElements.illustration.value),\n      \"music\": Number(formElements.music.value),\n      \"passion\": Number(formElements.passion.value),\n      \"start_date\": formElements.start_date.value,\n      \"end_date\": formElements.end_date.value,\n      \"times_watched\": Number(formElements.times_watched.value),\n    };\n    if (isNew) {\n      submitNewEntry(newRating, 'Ratings');\n    } else {\n      updateEntry(id, newRating, 'Ratings');\n    }\n  };\n\n  const handleNewAnimeSubmit = (event, id, isNew) => {\n    event.preventDefault();\n    const formElements = event.target.elements;\n    const newAnime = {\n      \"name\": formElements.name.value,\n      \"season_rank\": Number(formElements.season_rank.value),\n      \"tv_episodes\": Number(formElements.tv_episodes.value),\n      \"genre\": formElements.genre.value,\n      \"description\": formElements.description.value,\n      \"start_date\": formElements.start_date.value,\n      \"next_episode_day\": formElements.next_episode_day.value,\n      \"season\": formElements.season.value,\n      \"status\": formElements.status.value,\n    };\n    if (isNew) {\n      submitNewEntry(newAnime, 'NewAnimes');\n    } else {\n      updateEntry(id, newAnime, 'NewAnimes');\n    }\n  };\n\n  const handleQuoteSubmit = (event, month, id, isNew) => {\n    event.preventDefault();\n    const formElements = event.target.elements;\n    const newQuote = {\n      \"month\": month,\n      \"content\": formElements.content.value,\n      \"translation\": formElements.translation.value,\n      \"person\": formElements.person.value,\n      \"bangumi\": formElements.bangumi.value,\n    };\n    if (isNew) {\n      submitNewQuote(newQuote);\n    } else {\n      updateQuote(id, newQuote);\n    }\n  }\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    // Create a new instance of the user class\n    Parse.User.logIn(username, password).then((user) => {\n        setUserSession(user, user.getSessionToken());\n        alert(\"欢迎，\" + user.getUsername());\n        setAuthenticating(false);\n        setAuthenticated(true);\n    }).catch(function(error){\n        alert(error.message);\n    });\n  }\n\n  const handleSignOut = () => {\n    setUser(null);\n    setToken(null);\n    removeUserSession();\n    setAuthenticated(false);\n  }\n\n  const mainElement = (activePage) => {\n    switch (activePage) {\n      case 'AnimeList':\n        return <AnimeList\n          isLoading={isLoading}\n          loadError={loadError}\n          refresh={fetchRatings}\n          onAnimeSubmit={handleAnimeSubmit}\n          deleteAnime={deleteEntry}\n        />;\n      case 'NewAnimeList':\n        return <NewAnimeList\n          isLoading={isLoading}\n          loadError={loadError}\n          refresh={fetchNewAnimes}\n          onAnimeSubmit={handleAnimeSubmit}\n          onNewAnimeSubmit={handleNewAnimeSubmit}\n          updateEntry={updateEntry}\n          deleteNewAnime={deleteEntry}\n        />\n      case 'MonthlySummary':\n        return <MonthlySummary\n          onQuoteSubmit={handleQuoteSubmit}\n          deleteQuote={deleteQuote}\n        />;\n      default:\n        return <AnimeList\n          isLoading={isLoading}\n          loadError={loadError}\n          refresh={fetchRatings}\n          onAnimeSubmit={handleAnimeSubmit}\n          deleteAnime={deleteEntry}\n        />;\n    }\n  }\n\n\n  return (\n    <div>\n      <div className=\"App\">\n        <AuthenticationContext.Provider value={{ username, password, authenticated, setAuthenticating, handleLogin, handleSignOut, setUsername, setPassword }}>\n          <Navivation switchPage={setActivePage}/>\n          {authenticating ? <Login /> :\n            <AnimeDataContext.Provider value={{ ratings: ratings, monthlySummaries: summaries, newAnimes: newAnimes }}>\n              {mainElement(activePage)}\n            </AnimeDataContext.Provider>\n          }\n        </AuthenticationContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}